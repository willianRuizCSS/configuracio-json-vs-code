[{
  // Specifies the style of the gravatar default (fallback) images
  //  - identicon: A geometric pattern
  //  - mp: A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)
  //  - monsterid: A monster with different colors, faces, etc
  //  - retro: 8-bit arcade-style pixelated faces
  //  - robohash: A robot with different colors, faces, etc
  //  - wavatar: A face with differing features and backgrounds
  "gitlens.defaultGravatarsStyle": "robohash",

  // Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations
  //  - null: Shows a menu to choose which file annotations to toggle
  //  - blame: Toggles file blame annotations
  //  - heatmap: Toggles file heatmap annotations
  //  - changes: Toggles file changes annotations
  "gitlens.fileAnnotations.command": null,

  // Deprecated. Use the pre-release of GitLens instead
  // 
  "gitlens.insiders": null,

  // Specifies how much (if any) output will be sent to the GitLens output channel
  //  - silent: Logs nothing
  //  - errors: Logs only errors
  //  - verbose: Logs all errors, warnings, and messages
  //  - debug: Logs all errors, warnings, and messages with extra context useful for debugging
  "gitlens.outputLevel": "errors",

  // Specifies whether to hide or show GitLens+ features that are not accessible given the opened repositories and current subscription
  "gitlens.plusFeatures.enabled": true,

  // Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings
  "gitlens.proxy": null,

  // Specifies whether to show the Welcome (Quick Setup) experience on first install
  "gitlens.showWelcomeOnInstall": true,

  // Specifies whether to show the What's New notification after upgrading to new feature releases
  "gitlens.showWhatsNewAfterUpgrades": true,

  // Specifies whether to enable virtual repositories support
  "gitlens.virtualRepositories.enabled": true

},
{
  // Si esta configuración es false, no se enviará ningún dato de telemetría independientemente del valor de la nueva configuración. En desuso debido a la combinación en la configuración de `telemetry.telemetryLevel`.
  // Habilite los informes de bloqueo para que se recopilen. Esto nos ayuda a mejorar la estabilidad. 
  // Esta opción requiere reiniciar para surtir efecto.
  "telemetry.enableCrashReporter": true,

  // Si esta configuración es false, no se enviará ningún dato de telemetría independientemente del valor de la nueva configuración. En desuso en favor de la configuración de `telemetry.telemetryLevel`.
  // Habilite los datos de diagnóstico que se van a recopilar. Esto nos ayuda a comprender mejor el rendimiento de Visual Studio Code y dónde es necesario realizar mejoras. [Más información] (https://go.microsoft.com/fwlink/?LinkId=786907) sobre lo que recopilamos y nuestra declaración de privacidad.
  "telemetry.enableTelemetry": true,

  // 
  // Controla la telemetría Visual Studio Code, la telemetría de las extensiones de origen y la telemetría de las extensiones de terceros participantes. Es posible que algunas extensiones de terceros no respeten esta configuración. Consulte la documentación de la extensión específica para estar seguro. La telemetría nos ayuda a entender mejor cómo Visual Studio Code está funcionando, dónde hay que mejorar y cómo se utilizan las funciones. Obtenga más información sobre los [datos que recopilamos](https://aka.ms/vscode-telemetry) y nuestra [declaración de privacidad](https://go.microsoft.com/fwlink/?LinkId=786907). Es necesario reiniciar completamente la aplicación para que los cambios de informes de bloqueo surtan efecto.
  // 
  // &nbsp;
  // 
  // En la tabla siguiente se describen los datos enviados con cada configuración:
  // 
  // |       | Informes de bloqueo | Telemetría de errores | Datos de uso |
  // |:------|:---------------------:|:---------------:|:--------------:|
  // | all   |            ✓          |        ✓        |        ✓       |
  // | error |            ✓          |        ✓        |        -       |
  // | crash |            ✓          |        -        |        -       |
  // | off   |            -          |        -        |        -       |
  // 
  // 
  // &nbsp;
  // 
  // ****Nota:**** Si esta configuración está desactivada, no se enviará ningún dato de telemetría independientemente de la configuración de telemetría. Si esta configuración se establece en cualquier cosa excepto "desactivado" y la telemetría está deshabilitada con la configuración en desuso, no se enviará telemetría.*
  // 
  //  - all: Envía datos de uso, errores e informes de bloqueo.
  //  - error: Envía telemetría de errores generales e informes de bloqueo.
  //  - crash: Envía informes de bloqueo de nivel de sistema operativo.
  //  - off: Deshabilita toda la telemetría del producto.
  "telemetry.telemetryLevel": "all"

},
{
  // Controla si las acciones en línea son siempre visibles en la vista Control de código fuente.
  "scm.alwaysShowActions": false,

  // Controla si los repositorios siempre deben estar visibles en la vista Control de código fuente.
  "scm.alwaysShowRepositories": false,

  // Controla si la vista Control de código fuente debe mostrar y seleccionar automáticamente los archivos al abrirlos.
  "scm.autoReveal": true,

  // Controla la notificación de recuento del icono de control de código fuente en la barra de actividades.
  //  - all: Muestra la suma de todas las notificaciones de recuento de proveedores de control de código fuente.
  //  - focused: Muestre la insignia de recuento del proveedor de control de código fuente enfocado.
  //  - off: Deshabilite la insignia de recuento de Control de código fuente.
  "scm.countBadge": "all",

  // Controla el modo de visualización del repositorio de Control de código fuente predeterminado.
  //  - tree: Mostrar los cambios del repositorio como un árbol.
  //  - list: Mostrar los cambios del repositorio como una lista.
  "scm.defaultViewMode": "list",

  // Controla el criterio de ordenación de los cambios del repositorio de control de código fuente predeterminado cuando se ve como una lista.
  //  - name: Ordenar los cambios del repositorio por nombre de archivo.
  //  - path: Ordenar los cambios del repositorio por ruta de acceso.
  //  - status: Ordene los cambios del repositorio por estado de control de código fuente.
  "scm.defaultViewSortKey": "path",

  // Controla las decoraciones de diff en el editor.
  //  - all: Mostrar las decoraciones diferentes en todas las ubicaciones disponibles.
  //  - gutter: Mostrar las distintas decoraciones solo en el medianil del editor.
  //  - overview: Mostrar las decoraciones de diferencias solo en la regla de vista general.
  //  - minimap: Mostrar las decoraciones diferentes solo en el minimapa.
  //  - none: No mostrar las decoraciones diff.
  "scm.diffDecorations": "all",

  // Controla el comportamiento de las decoraciones del margen de diferencias del control de código fuente.
  //  - diff: Muestra la vista de inspección de diferencias insertada al hacer clic.
  //  - none: No hacer nada.
  "scm.diffDecorationsGutterAction": "diff",

  // Controla si se usa un patrón para las decoraciones de diferencia en el medianil.
  "scm.diffDecorationsGutterPattern": {
    "added": false,
    "modified": true
  },

  // Controla la visibilidad del decorador de diferencias de control de código fuente en el medianil.
  //  - always: Muestre el decorador de diferencias en el medianil en todo momento.
  //  - hover: Muestre el decorador de diferenciales en el medianil solo al pasar el puntero.
  "scm.diffDecorationsGutterVisibility": "always",

  // Controla el ancho (px) de las decoraciones de diferencias en el medianil (elementos agregados y modificados).
  "scm.diffDecorationsGutterWidth": 3,

  // Controla si los espacios en blanco iniciales y finales se omiten en las decoraciones de medianil de diferencias del Control de código fuente.
  //  - true: Omita los espacios en blanco iniciales y finales.
  //  - false: No omita los espacios en blanco iniciales y finales.
  //  - inherit: Heredar de 'diffEditor.ignoreTrimWhitespace'.
  "scm.diffDecorationsIgnoreTrimWhitespace": "false",

  // Controla la fuente del mensaje de entrada. Utilice "default" para la familia de fuentes de la interfaz de usuario del área de trabajo, "editor" para el valor de "#editor.fontFamily#" o una familia de fuentes personalizada.
  "scm.inputFontFamily": "default",

  // Controla el tamaño de fuente del mensaje de entrada en píxeles.
  "scm.inputFontSize": 13,

  // Controla la insignia de recuento de proveedores de control de código fuente. Estos proveedores solo se muestran cuando hay más de un proveedor.
  //  - hidden: Oculte las insignias de recuento de proveedores de control de código fuente.
  //  - auto: Muestre las insignias de recuento de proveedores de control de código fuente si hay cambios.
  //  - visible: Muestre las insignias de recuento de proveedores de control de código fuente.
  "scm.providerCountBadge": "hidden",

  // Controla el criterio de ordenación de los repositorios en la vista de repositorios de control de código fuente.
  //  - discovery time: Los repositorios de la vista Repositorios de control de código fuente se ordenan por hora de detección. Los repositorios de la vista Control de código fuente se ordenan en el orden en que se seleccionaron.
  //  - name: Los repositorios de los repositorios de control de código fuente y las vistas de control de código fuente se ordenan por nombre de repositorio.
  //  - path: Los repositorios de los repositorios de control de código fuente y las vistas de control de código fuente se ordenan por ruta de acceso del repositorio.
  "scm.repositories.sortOrder": "discovery time",

  // Controla cuántos repositorios están visibles en la sección Repositorios de control de código fuente. Establézcalo en 0 para poder cambiar manualmente el tamaño de la vista.
  "scm.repositories.visible": 10,

  // Controla si se puede mostrar un botón de acción en la vista Control de código fuente.
  "scm.showActionButton": true

},
{
  // Controla si el editor muestra CodeLens.
  "diffEditor.codeLens": false,

  // 
  //  - smart: Usa el algoritmo de comparación predeterminado.
  //  - experimental: Usa un algoritmo de comparación experimental.
  "diffEditor.diffAlgorithm": "smart",

  // Cuando está habilitado, el editor de diferencias omite los cambios en los espacios en blanco iniciales o finales.
  "diffEditor.ignoreTrimWhitespace": true,

  // Tiempo de espera en milisegundos después del cual se cancela el cálculo de diferencias. Utilice 0 para no usar tiempo de espera.
  "diffEditor.maxComputationTime": 5000,

  // Tamaño máximo de archivo en MB para el que calcular diferencias. Use 0 para no limitar.
  "diffEditor.maxFileSize": 50,

  // Controla si el editor de diferencias muestra los indicadores +/- para los cambios agregados o quitados.
  "diffEditor.renderIndicators": true,

  // Cuando está habilitado, el editor de diferencias muestra flechas en su margen de glifo para revertir los cambios.
  "diffEditor.renderMarginRevertIcon": true,

  // Controla si el editor de diferencias muestra las diferencias en paralelo o alineadas.
  "diffEditor.renderSideBySide": true,

  // 
  //  - off: Las líneas no se ajustarán nunca.
  //  - on: Las líneas se ajustarán en el ancho de la ventanilla.
  //  - inherit: Las líneas se ajustarán en función de la configuración de `editor.wordWrap`.
  "diffEditor.wordWrap": "inherit",

  // Controla si se deben aceptar sugerencias en los caracteres de confirmación. Por ejemplo, en Javascript, el punto y coma (";") puede ser un carácter de confirmación que acepta una sugerencia y escribe ese carácter.
  "editor.acceptSuggestionOnCommitCharacter": true,

  // Controla si las sugerencias deben aceptarse con "Entrar", además de "TAB". Ayuda a evitar la ambigüedad entre insertar nuevas líneas o aceptar sugerencias.
  //  - on
  //  - smart: Aceptar solo una sugerencia con "Entrar" cuando realiza un cambio textual.
  //  - off
  "editor.acceptSuggestionOnEnter": "on",

  // Controla el número de líneas del editor que pueden ser leídas por un lector de pantalla a la vez. Cuando detectamos un lector de pantalla, fijamos automáticamente el valor por defecto en 500. Advertencia: esto tiene una implicación de rendimiento para números mayores que el predeterminado.
  "editor.accessibilityPageSize": 10,

  // Controla si la interfaz de usuario debe ejecutarse en un modo en el que esté optimizada para lectores de pantalla.
  //  - auto: Usar las API de la plataforma para detectar cuándo se conecta un lector de pantalla
  //  - on: Optimizar para usar con un lector de pantalla
  //  - off: Supongamos que no hay un lector de pantalla conectado
  "editor.accessibilitySupport": "auto",

  // Controla si el editor debe cerrar automáticamente los corchetes después de que el usuario agregue un corchete de apertura.
  //  - always
  //  - languageDefined: Utilizar las configuraciones del lenguaje para determinar cuándo cerrar los corchetes automáticamente.
  //  - beforeWhitespace: Cerrar automáticamente los corchetes cuando el cursor esté a la izquierda de un espacio en blanco.
  //  - never
  "editor.autoClosingBrackets": "languageDefined",

  // Controla si el editor debe quitar los corchetes o las comillas de cierre adyacentes al eliminar.
  //  - always
  //  - auto: Quite los corchetes o las comillas de cierre adyacentes solo si se insertaron automáticamente.
  //  - never
  "editor.autoClosingDelete": "auto",

  // Controla si el editor debe escribir entre comillas o corchetes.
  //  - always
  //  - auto: Escriba en las comillas o los corchetes solo si se insertaron automáticamente.
  //  - never
  "editor.autoClosingOvertype": "auto",

  // Controla si el editor debe cerrar automáticamente las comillas después de que el usuario agrega uma comilla de apertura.
  //  - always
  //  - languageDefined: Utilizar las configuraciones del lenguaje para determinar cuándo cerrar las comillas automáticamente. 
  //  - beforeWhitespace: Cerrar automáticamente las comillas cuando el cursor esté a la izquierda de un espacio en blanco. 
  //  - never
  "editor.autoClosingQuotes": "languageDefined",

  // Controla si el editor debe ajustar automáticamente la sangría mientras los usuarios escriben, pegan, mueven o sangran líneas.
  //  - none: El editor no insertará la sangría automáticamente.
  //  - keep: El editor mantendrá la sangría de la línea actual.
  //  - brackets: El editor respetará la sangría de la línea actual y los corchetes definidos por el idioma.
  //  - advanced: El editor mantendrá la sangría de la línea actual, respetará los corchetes definidos por el idioma e invocará onEnterRules especiales definidos por idiomas.
  //  - full: El editor respetará la sangría de la línea actual, los corchetes definidos por idiomas y las reglas indentationRules definidas por idiomas, además de invocar reglas onEnterRules especiales.
  "editor.autoIndent": "full",

  // Controla si el editor debe rodear automáticamente las selecciones al escribir comillas o corchetes.
  //  - languageDefined: Use las configuraciones de idioma para determinar cuándo delimitar las selecciones automáticamente.
  //  - quotes: Envolver con comillas, pero no con corchetes.
  //  - brackets: Envolver con corchetes, pero no con comillas.
  //  - never
  "editor.autoSurround": "languageDefined",

  // Controla si está habilitada o no la coloración de pares de corchetes. Use `workbench.colorCustomizations` para invalidar los colores de resaltado de corchete.
  "editor.bracketPairColorization.enabled": true,

  // Controla si cada tipo de corchete tiene su propio grupo de colores independiente.
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,

  // Tipos de acción de código que se ejecutarán en guardar.
  "editor.codeActionsOnSave": {},

  // Activar/desactivar la visualización de los encabezados de los grupos en el menú de Acción de código.
  "editor.codeActionWidget.showHeaders": true,

  // Controla si el editor muestra CodeLens.
  "editor.codeLens": true,

  // Controla la familia de fuentes para CodeLens.
  "editor.codeLensFontFamily": "",

  // Controla el tamaño de fuente de CodeLens en píxeles. Cuando se establece en 0, se usa el 90 % de "#editor.fontSize#".
  "editor.codeLensFontSize": 0,

  // Controla si el editor debe representar el Selector de colores y los elementos Decorator de color en línea.
  "editor.colorDecorators": true,

  // Controla el número máximo de decoradores de color que se pueden representar en un editor a la vez.
  "editor.colorDecoratorsLimit": 500,

  // Habilite que la selección con el mouse y las teclas esté realizando la selección de columnas.
  "editor.columnSelection": false,

  // Controla si las líneas vacías deben ignorarse con la opción de alternar, agregar o quitar acciones para los comentarios de línea.
  "editor.comments.ignoreEmptyLines": true,

  // Controla si se inserta un carácter de espacio al comentar.
  "editor.comments.insertSpace": true,

  // Controla si el resaltado de sintaxis debe ser copiado al portapapeles.
  "editor.copyWithSyntaxHighlighting": true,

  // Controla el estilo de animación del cursor.
  "editor.cursorBlinking": "blink",

  // Controla si la animación suave del cursor debe estar habilitada.
  //  - off: La animación del símbolo de intercalación suave está deshabilitada.
  //  - explicit: La animación de símbolo de intercalación suave solo se habilita cuando el usuario mueve el cursor con un gesto explícito.
  //  - on: La animación de símbolo de intercalación suave siempre está habilitada.
  "editor.cursorSmoothCaretAnimation": "off",

  // Controla el estilo del cursor.
  "editor.cursorStyle": "line",

  // Controla el número mínimo de líneas iniciales visibles (mínimo 0) y líneas finales (mínimo 1) que rodean el cursor. Se conoce como "scrollOff" o "scrollOffset" en otros editores.
  "editor.cursorSurroundingLines": 0,

  // Controla cuando se debe aplicar "cursorSurroundingLines".
  //  - default: Solo se aplica "cursorSurroundingLines" cuando se desencadena mediante el teclado o la API.
  //  - all: "cursorSurroundingLines" se aplica siempre.
  "editor.cursorSurroundingLinesStyle": "default",

  // Controla el ancho del cursor cuando "#editor.cursorStyle#" se establece en "line".
  "editor.cursorWidth": 0,

  // Define un proveedor de rango de plegado por defecto que tiene prioridad sobre todos los demás proveedores de rango de plegado. Debe ser el identificador de una extensión que contribuya a un proveedor de rango de plegado.
  //  - null: Todos los proveedores de intervalos de plegado activos
  //  - onixie.angular-component-extension: An Extension for Angular @Component
  //  - formulahendry.auto-close-tag: Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text
  //  - formulahendry.auto-rename-tag: Auto rename paired HTML/XML tag
  //  - Fudge.auto-using: Provides intellisense for and imports references from all available sources.
  //  - njpwerner.autodocstring: Generates python docstrings automatically
  //  - ms-dotnettools.csharp: C# for Visual Studio Code (powered by OmniSharp).
  //  - vscode.css-language-features: Proporciona un potente soporte de lenguaje para archivos CSS, LESS y SCSS.
  //  - rifi2k.format-html-in-php: Provides formatting for the HTML code in PHP files using JSbeautify - Works well paired with a PHP formatting extension
  //  - codezombiech.gitignore: Lets you pull .gitignore templates from the https://github.com/github/gitignore repository. Language support for .gitignore files.
  //  - haskell.haskell: Haskell language support powered by the Haskell Language Server
  //  - Zignd.html-css-class-completion: CSS class name completion for the HTML class attribute based on the definitions found in your workspace.
  //  - vscode.html-language-features: Ofrece un extenso soporte de lenguaje para archivos HTML y Handlebar
  //  - solnurkarim.html-to-css-autocompletion: Provides completion suggestions for classes and ids from markup documents to stylesheets.
  //  - ms-python.isort: Soporte de la organización de importación para archivos python usando “isort”.
  //  - redhat.java: Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...
  //  - vscode.json-language-features: Proporciona un potente soporte de lenguaje para archivos JSON.
  //  - justusadam.language-haskell: Syntax support for the Haskell programming language.
  //  - yzhang.markdown-all-in-one: All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)
  //  - vscode.markdown-language-features: Proporciona un potente soporte de lenguaje para archivos Markdown.
  //  - adrianwilczynski.namespace: Full namespace autocompletion for C#
  //  - Angular.ng-template: Editor services for Angular templates
  //  - tomoki1207.pdf: Display pdf file in VSCode.
  //  - neilbrayfield.php-docblocker: A simple, dependency free PHP specific DocBlocking package
  //  - zobo.php-intellisense: Advanced Autocompletion and Refactoring support for PHP
  //  - vscode.php-language-features: Proporciona un potente soporte de lenguaje para archivos PHP.
  //  - ms-python.python: IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.
  //  - donjayamanne.python-environment-manager: View and manage Python environments & packages.
  //  - mechatroner.rainbow-csv: Highlight CSV and TSV files, Run SQL-like queries
  //  - vscode.references-view: Hacer referencia a los resultados de la búsqueda como una vista independiente y estable en la barra lateral
  //  - vscode.search-result: Proporciona resaltado de sintaxis y características de lenguaje para los resultados de búsqueda con pestañas.
  //  - mtxr.sqltools: Connecting users to many of the most commonly used databases. Welcome to database management done right.
  //  - TabNine.tabnine-vscode: JavaScript, Python, Java, Typescript & all other languages - AI Code completion plugin. Tabnine makes developers more productive by auto-completing their code.
  //  - rbbit.typescript-hero: Additional toolings for typescript
  //  - vscode.typescript-language-features: Proporciona soporte de lenguaje enriquecido para JavaScript y TypeScript.
  //  - KevinRose.vsc-python-indent: Correct Python indentation
  //  - ghaschel.vscode-angular-html: Syntax highlighting for angular HTML Template files
  //  - alexiv.vscode-angular2-files: Quickly scaffold angular file templates
  //  - gencay.vscode-chatgpt: Use browser or official API integration for OpenAI ChatGPT, GPT3.5, GPT3 and Codex. Create new files & projects with one click. Copilot to learn code, add tests via GPT models. Google LaMDA Bard integration is work-in-progress.
  //  - pucelle.vscode-css-navigation: Allows Go to Definition from HTML to CSS / Sass / Less; provides Completion and Workspace Symbols for class & id name.
  //  - dbaeumer.vscode-eslint: Integrates ESLint JavaScript into VS Code.
  //  - vscjava.vscode-gradle: Manage Gradle Projects, run Gradle tasks and provide better Gradle file authoring experience in VS Code
  //  - ecmel.vscode-html-css: CSS Intellisense for HTML
  //  - bmewburn.vscode-intelephense-client: PHP code intelligence for Visual Studio Code
  //  - vscjava.vscode-java-debug: A lightweight Java debugger for Visual Studio Code
  //  - vscjava.vscode-java-pack: Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more
  //  - vscjava.vscode-maven: Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.
  //  - ms-python.vscode-pylance: A performant, feature-rich language server for Python in VS Code
  //  - segerdekort.angular-cli: This extension eases the use of the Angular cli in Visual Studio Code
  //  - john-crowson.angular-file-changer: Easily navigate between typescript, template, style, and associated test files in your Angular project using the Mac Touch Bar.
  //  - cyrilletuzi.angular-schematics: Angular schematics (CLI commands) from files Explorer or Command Palette.
  //  - natewallace.angular2-inline: Visual Studio Code language extension for javascript/typescript files that use Angular2.
  //  - infinity1207.angular2-switcher: Easily navigate to `typescript`|`template`|`style` in angular2 project.
  //  - aliariff.auto-add-brackets: Automatically add complete brackets when writing interpolated string
  //  - steoates.autoimport: Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX
  //  - AnbuselvanRocky.bootstrap5-vscode: Collection of Bootstrap 5 Snippets that will make your life easier.
  //  - Durzn.brackethighlighter: Decorates text inbetween symbols.
  //  - adpyke.codesnap: 📷 Take beautiful screenshots of your code
  //  - GitHub.codespaces: Your instant dev environment
  //  - naumovs.color-highlight: Highlight web colors in your editor
  //  - adam-bender.commit-message-editor: Edit commit messages in a convenient way.
  //  - vscode.configuration-editing: Proporciona características (IntelliSense avanzado, corrección automática) en archivos de configuración, como archivos de valores, de inicio y de recomendación de extensiones. 
  //  - sporiley.css-auto-prefix: Autoprefixes certain attributes in CSS
  //  - vscode.debug-auto-launch: Ayudante para la funcionalidad de conexión automática cuando las extensiones de depuración de node.js están desactivadas.
  //  - vscode.debug-server-ready: Abrir URI en el navegador si el servidor bajo la depuración está listo.
  //  - EditorConfig.EditorConfig: EditorConfig Support for Visual Studio Code
  //  - vscode.emmet: Soporte de Emmet para VS Code
  //  - bierner.emojisense: Adds suggestions and autocomplete for emoji
  //  - vscode.extension-editing: Proporciona funcionalidad de detección de errores para la creación de extensiones.
  //  - iulian-radu-at.find-unused-exports: A Visual Studio Code extension for displaying all unused exports in a typescript/javascript project.
  //  - yandeu.five-server: A better Live Server with instant updates, highlights and PHP support.
  //  - vscode.git: Integración Git SCM
  //  - vscode.git-base: Selectores y contribuciones estáticas de Git.
  //  - mhutchie.git-graph: View a Git Graph of your repository, and perform Git actions from the graph.
  //  - felipecaputo.git-project-manager: Allows you to change easily between git projects.
  //  - allent.gitcleaner: Auto clean unwanted files or directories that ignored by git.
  //  - donjayamanne.githistory: View git log, file history, compare branches or commits
  //  - vscode.github: Características de GitHub para VS Code
  //  - vscode.github-authentication: Proveedor de autenticación de GitHub
  //  - eamodio.gitlens: Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more
  //  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
  //  - vscode.gulp: Extensión para añadir funcionalidad de Gulp a VSCode.
  //  - VisualStudioExptTeam.intellicode-api-usage-examples: Vea ejemplos de código relevantes de GitHub para obtener más de 100 000 API diferentes directamente en el editor.
  //  - vscode.ipynb: Proporciona compatibilidad básica para abrir y leer los archivos .ipynb del bloc de notas de Jupyter.
  //  - vscode.jake: Extensión que agrega funcionalidad de Jake a VS Code.
  //  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
  //  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
  //  - eriklynd.json-tools: Tools for manipulating JSON
  //  - ritwickdey.LiveServer: Launch a development local Server with live reload feature for static & dynamic pages
  //  - vscode.markdown-math: Agrega compatibilidad matemática a Markdown en blocs de notas.
  //  - PKief.material-icon-theme: Material Design Icons for Visual Studio Code
  //  - vscode.media-preview: Proporciona vistas previas integradas de VS Code para imágenes, audio y vídeo
  //  - vscode.merge-conflict: Resaltado y comandos para conflictos de fusión insertada.
  //  - vscode.microsoft-authentication: Proveedor de autenticación de Microsoft
  //  - stringham.move-ts: extension for moving typescript files and folders and updating relative imports in your workspace
  //  - odubuc.mysql-inline-decorator: Add color coding to inline MYSQL string inside ``
  //  - BharathRavi.ng-switch: simple file switch between controller and template files in angular projects
  //  - vscode.npm: Extensión para agregar soporte a las tareas de secuencias de comandos NPM.
  //  - christian-kohler.npm-intellisense: Visual Studio Code plugin that autocompletes npm modules in import statements
  //  - christian-kohler.path-intellisense: Visual Studio Code plugin that autocompletes filenames
  //  - xdebug.php-debug: Debug support for PHP with Xdebug
  //  - MehediDracula.php-namespace-resolver: Import and expand php namespaces
  //  - brapifra.phpserver: Serve your Project with PHP
  //  - analytic-signal.preview-pdf: Preview Portable Document Format (.pdf) files in VSCode
  //  - alefragnani.project-manager: Easily switch between projects
  //  - quicktype.quicktype: Copy JSON, paste as Go, TypeScript, C#, C++ and more.
  //  - ms-vscode-remote.remote-containers: Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.
  //  - ms-vscode-remote.remote-wsl-recommender: Recomienda usar el Subsistema de Windows para Linux (WSL) y la extensión de WSL.
  //  - tomblind.scm-buttons-vscode: Additional Source Control Buttons for Visual Studio Code
  //  - SimonTest.simontest: Analyzes your Angular code and generates tests.
  //  - vscode.simple-browser: Vista web integrada muy básica para mostrar contenido web.
  //  - pmneo.tsimporter: Automatically searches for TypeScript definitions in workspace files and provides all known symbols as completion item to allow code completion.
  //  - vismalietuva.vscode-angular-support: Go to / peek angular specific definitions
  //  - jakethashi.vscode-angular2-emmet: Support zen-coding syntax for Angular 2 typescript files.
  //  - aeschli.vscode-css-formatter: Formatter for CSS
  //  - pranaygp.vscode-css-peek: Allow peeking to css ID and class strings as definitions from html files to respective CSS. Allows peek and goto definition.
  //  - codemooseus.vscode-devtools-for-chrome: Open the chrome devtools as a dockable webview
  //  - firefox-devtools.vscode-firefox-debug: Debug your web application or browser extension in Firefox
  //  - kisstkondoros.vscode-gutter-preview: Shows image preview in the gutter and on hover
  //  - mohd-akram.vscode-html-format: Format HTML documents.
  //  - vscjava.vscode-java-dependency: Manage Java projects in Visual Studio Code
  //  - vscjava.vscode-java-test: Run and debug JUnit or TestNG test cases.
  //  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
  //  - eg2.vscode-npm-script: npm support for VS Code
  //  - ziyasal.vscode-open-in-github: Jump to a source code line in Github, Bitbucket, Gitlab, VisualStudio.com !
  //  - johnpapa.vscode-peacock: Subtly change the workspace color of your workspace. Ideal when you have multiple VS Code instances and you want to quickly identify which is which.
  //  - GitHub.vscode-pull-request-github: Proveedor de solicitudes de incorporación de cambios y problemas para GitHub
  //  - msjsdiag.vscode-react-native: Comandos integrados y de depuración para React Native.
  //  - tombonnike.vscode-status-bar-format-toggle: A VS Code extension that allows you to toggle formatting settings ON and OFF with a simple click.
  //  - vitaliymaz.vscode-svg-previewer: Show SVG preview to the side panel
  //  - jgclark.vscode-todo-highlight: highlight TODOs, FIXMEs, and any keywords, annotations...
  //  - VisualStudioExptTeam.vscodeintellicode: Desarrollo asistido por inteligencia artificial
  //  - ms-vsliveshare.vsliveshare: Real-time collaborative development from the comfort of your favorite tools.
  "editor.defaultFoldingRangeProvider": null,

  // Define un formateador predeterminado que tiene preferencia sobre todas las demás opciones de formateador. Debe ser el identificador de una extensión que contribuya a un formateador.
  //  - null: NONE
  //  - onixie.angular-component-extension: An Extension for Angular @Component
  //  - aliariff.auto-add-brackets: Automatically add complete brackets when writing interpolated string
  //  - formulahendry.auto-close-tag: Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text
  //  - formulahendry.auto-rename-tag: Auto rename paired HTML/XML tag
  //  - Fudge.auto-using: Provides intellisense for and imports references from all available sources.
  //  - njpwerner.autodocstring: Generates python docstrings automatically
  //  - ms-dotnettools.csharp: C# for Visual Studio Code (powered by OmniSharp).
  //  - vscode.css-language-features: Proporciona un potente soporte de lenguaje para archivos CSS, LESS y SCSS.
  //  - rifi2k.format-html-in-php: Provides formatting for the HTML code in PHP files using JSbeautify - Works well paired with a PHP formatting extension
  //  - codezombiech.gitignore: Lets you pull .gitignore templates from the https://github.com/github/gitignore repository. Language support for .gitignore files.
  //  - haskell.haskell: Haskell language support powered by the Haskell Language Server
  //  - Zignd.html-css-class-completion: CSS class name completion for the HTML class attribute based on the definitions found in your workspace.
  //  - vscode.html-language-features: Ofrece un extenso soporte de lenguaje para archivos HTML y Handlebar
  //  - solnurkarim.html-to-css-autocompletion: Provides completion suggestions for classes and ids from markup documents to stylesheets.
  //  - ms-python.isort: Soporte de la organización de importación para archivos python usando “isort”.
  //  - redhat.java: Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...
  //  - vscode.json-language-features: Proporciona un potente soporte de lenguaje para archivos JSON.
  //  - justusadam.language-haskell: Syntax support for the Haskell programming language.
  //  - yzhang.markdown-all-in-one: All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)
  //  - vscode.markdown-language-features: Proporciona un potente soporte de lenguaje para archivos Markdown.
  //  - adrianwilczynski.namespace: Full namespace autocompletion for C#
  //  - Angular.ng-template: Editor services for Angular templates
  //  - tomoki1207.pdf: Display pdf file in VSCode.
  //  - neilbrayfield.php-docblocker: A simple, dependency free PHP specific DocBlocking package
  //  - zobo.php-intellisense: Advanced Autocompletion and Refactoring support for PHP
  //  - vscode.php-language-features: Proporciona un potente soporte de lenguaje para archivos PHP.
  //  - ms-python.python: IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.
  //  - donjayamanne.python-environment-manager: View and manage Python environments & packages.
  //  - mechatroner.rainbow-csv: Highlight CSV and TSV files, Run SQL-like queries
  //  - vscode.references-view: Hacer referencia a los resultados de la búsqueda como una vista independiente y estable en la barra lateral
  //  - vscode.search-result: Proporciona resaltado de sintaxis y características de lenguaje para los resultados de búsqueda con pestañas.
  //  - mtxr.sqltools: Connecting users to many of the most commonly used databases. Welcome to database management done right.
  //  - TabNine.tabnine-vscode: JavaScript, Python, Java, Typescript & all other languages - AI Code completion plugin. Tabnine makes developers more productive by auto-completing their code.
  //  - rbbit.typescript-hero: Additional toolings for typescript
  //  - vscode.typescript-language-features: Proporciona soporte de lenguaje enriquecido para JavaScript y TypeScript.
  //  - KevinRose.vsc-python-indent: Correct Python indentation
  //  - ghaschel.vscode-angular-html: Syntax highlighting for angular HTML Template files
  //  - alexiv.vscode-angular2-files: Quickly scaffold angular file templates
  //  - gencay.vscode-chatgpt: Use browser or official API integration for OpenAI ChatGPT, GPT3.5, GPT3 and Codex. Create new files & projects with one click. Copilot to learn code, add tests via GPT models. Google LaMDA Bard integration is work-in-progress.
  //  - aeschli.vscode-css-formatter: Formatter for CSS
  //  - pucelle.vscode-css-navigation: Allows Go to Definition from HTML to CSS / Sass / Less; provides Completion and Workspace Symbols for class & id name.
  //  - dbaeumer.vscode-eslint: Integrates ESLint JavaScript into VS Code.
  //  - vscjava.vscode-gradle: Manage Gradle Projects, run Gradle tasks and provide better Gradle file authoring experience in VS Code
  //  - ecmel.vscode-html-css: CSS Intellisense for HTML
  //  - mohd-akram.vscode-html-format: Format HTML documents.
  //  - bmewburn.vscode-intelephense-client: PHP code intelligence for Visual Studio Code
  //  - vscjava.vscode-java-debug: A lightweight Java debugger for Visual Studio Code
  //  - vscjava.vscode-java-pack: Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more
  //  - vscjava.vscode-maven: Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.
  //  - ms-python.vscode-pylance: A performant, feature-rich language server for Python in VS Code
  //  - tombonnike.vscode-status-bar-format-toggle: A VS Code extension that allows you to toggle formatting settings ON and OFF with a simple click.
  //  - segerdekort.angular-cli: This extension eases the use of the Angular cli in Visual Studio Code
  //  - john-crowson.angular-file-changer: Easily navigate between typescript, template, style, and associated test files in your Angular project using the Mac Touch Bar.
  //  - cyrilletuzi.angular-schematics: Angular schematics (CLI commands) from files Explorer or Command Palette.
  //  - natewallace.angular2-inline: Visual Studio Code language extension for javascript/typescript files that use Angular2.
  //  - infinity1207.angular2-switcher: Easily navigate to `typescript`|`template`|`style` in angular2 project.
  //  - steoates.autoimport: Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX
  //  - AnbuselvanRocky.bootstrap5-vscode: Collection of Bootstrap 5 Snippets that will make your life easier.
  //  - Durzn.brackethighlighter: Decorates text inbetween symbols.
  //  - adpyke.codesnap: 📷 Take beautiful screenshots of your code
  //  - GitHub.codespaces: Your instant dev environment
  //  - naumovs.color-highlight: Highlight web colors in your editor
  //  - adam-bender.commit-message-editor: Edit commit messages in a convenient way.
  //  - vscode.configuration-editing: Proporciona características (IntelliSense avanzado, corrección automática) en archivos de configuración, como archivos de valores, de inicio y de recomendación de extensiones. 
  //  - sporiley.css-auto-prefix: Autoprefixes certain attributes in CSS
  //  - vscode.debug-auto-launch: Ayudante para la funcionalidad de conexión automática cuando las extensiones de depuración de node.js están desactivadas.
  //  - vscode.debug-server-ready: Abrir URI en el navegador si el servidor bajo la depuración está listo.
  //  - EditorConfig.EditorConfig: EditorConfig Support for Visual Studio Code
  //  - vscode.emmet: Soporte de Emmet para VS Code
  //  - bierner.emojisense: Adds suggestions and autocomplete for emoji
  //  - vscode.extension-editing: Proporciona funcionalidad de detección de errores para la creación de extensiones.
  //  - iulian-radu-at.find-unused-exports: A Visual Studio Code extension for displaying all unused exports in a typescript/javascript project.
  //  - yandeu.five-server: A better Live Server with instant updates, highlights and PHP support.
  //  - vscode.git: Integración Git SCM
  //  - vscode.git-base: Selectores y contribuciones estáticas de Git.
  //  - mhutchie.git-graph: View a Git Graph of your repository, and perform Git actions from the graph.
  //  - felipecaputo.git-project-manager: Allows you to change easily between git projects.
  //  - allent.gitcleaner: Auto clean unwanted files or directories that ignored by git.
  //  - donjayamanne.githistory: View git log, file history, compare branches or commits
  //  - vscode.github: Características de GitHub para VS Code
  //  - vscode.github-authentication: Proveedor de autenticación de GitHub
  //  - eamodio.gitlens: Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more
  //  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
  //  - vscode.gulp: Extensión para añadir funcionalidad de Gulp a VSCode.
  //  - VisualStudioExptTeam.intellicode-api-usage-examples: Vea ejemplos de código relevantes de GitHub para obtener más de 100 000 API diferentes directamente en el editor.
  //  - vscode.ipynb: Proporciona compatibilidad básica para abrir y leer los archivos .ipynb del bloc de notas de Jupyter.
  //  - vscode.jake: Extensión que agrega funcionalidad de Jake a VS Code.
  //  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
  //  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
  //  - eriklynd.json-tools: Tools for manipulating JSON
  //  - ritwickdey.LiveServer: Launch a development local Server with live reload feature for static & dynamic pages
  //  - vscode.markdown-math: Agrega compatibilidad matemática a Markdown en blocs de notas.
  //  - PKief.material-icon-theme: Material Design Icons for Visual Studio Code
  //  - vscode.media-preview: Proporciona vistas previas integradas de VS Code para imágenes, audio y vídeo
  //  - vscode.merge-conflict: Resaltado y comandos para conflictos de fusión insertada.
  //  - vscode.microsoft-authentication: Proveedor de autenticación de Microsoft
  //  - stringham.move-ts: extension for moving typescript files and folders and updating relative imports in your workspace
  //  - odubuc.mysql-inline-decorator: Add color coding to inline MYSQL string inside ``
  //  - BharathRavi.ng-switch: simple file switch between controller and template files in angular projects
  //  - vscode.npm: Extensión para agregar soporte a las tareas de secuencias de comandos NPM.
  //  - christian-kohler.npm-intellisense: Visual Studio Code plugin that autocompletes npm modules in import statements
  //  - christian-kohler.path-intellisense: Visual Studio Code plugin that autocompletes filenames
  //  - xdebug.php-debug: Debug support for PHP with Xdebug
  //  - MehediDracula.php-namespace-resolver: Import and expand php namespaces
  //  - brapifra.phpserver: Serve your Project with PHP
  //  - analytic-signal.preview-pdf: Preview Portable Document Format (.pdf) files in VSCode
  //  - alefragnani.project-manager: Easily switch between projects
  //  - quicktype.quicktype: Copy JSON, paste as Go, TypeScript, C#, C++ and more.
  //  - ms-vscode-remote.remote-containers: Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.
  //  - ms-vscode-remote.remote-wsl-recommender: Recomienda usar el Subsistema de Windows para Linux (WSL) y la extensión de WSL.
  //  - tomblind.scm-buttons-vscode: Additional Source Control Buttons for Visual Studio Code
  //  - SimonTest.simontest: Analyzes your Angular code and generates tests.
  //  - vscode.simple-browser: Vista web integrada muy básica para mostrar contenido web.
  //  - pmneo.tsimporter: Automatically searches for TypeScript definitions in workspace files and provides all known symbols as completion item to allow code completion.
  //  - vismalietuva.vscode-angular-support: Go to / peek angular specific definitions
  //  - jakethashi.vscode-angular2-emmet: Support zen-coding syntax for Angular 2 typescript files.
  //  - pranaygp.vscode-css-peek: Allow peeking to css ID and class strings as definitions from html files to respective CSS. Allows peek and goto definition.
  //  - codemooseus.vscode-devtools-for-chrome: Open the chrome devtools as a dockable webview
  //  - firefox-devtools.vscode-firefox-debug: Debug your web application or browser extension in Firefox
  //  - kisstkondoros.vscode-gutter-preview: Shows image preview in the gutter and on hover
  //  - vscjava.vscode-java-dependency: Manage Java projects in Visual Studio Code
  //  - vscjava.vscode-java-test: Run and debug JUnit or TestNG test cases.
  //  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
  //  - eg2.vscode-npm-script: npm support for VS Code
  //  - ziyasal.vscode-open-in-github: Jump to a source code line in Github, Bitbucket, Gitlab, VisualStudio.com !
  //  - johnpapa.vscode-peacock: Subtly change the workspace color of your workspace. Ideal when you have multiple VS Code instances and you want to quickly identify which is which.
  //  - GitHub.vscode-pull-request-github: Proveedor de solicitudes de incorporación de cambios y problemas para GitHub
  //  - msjsdiag.vscode-react-native: Comandos integrados y de depuración para React Native.
  //  - vitaliymaz.vscode-svg-previewer: Show SVG preview to the side panel
  //  - jgclark.vscode-todo-highlight: highlight TODOs, FIXMEs, and any keywords, annotations...
  //  - VisualStudioExptTeam.vscodeintellicode: Desarrollo asistido por inteligencia artificial
  //  - ms-vsliveshare.vsliveshare: Real-time collaborative development from the comfort of your favorite tools.
  "editor.defaultFormatter": null,

  // Controla si el gesto del mouse Ir a definición siempre abre el widget interactivo.
  "editor.definitionLinkOpensInPeek": false,

  // Controla si `editor.tabSize#` y `#editor.insertSpaces` se detectan automáticamente al abrir un archivo en función del contenido de este.
  "editor.detectIndentation": true,

  // Controla si el editor debe permitir mover las selecciones mediante arrastrar y colocar.
  "editor.dragAndDrop": true,

  // Controla si puede arrastrar y colocar un archivo en un editor de texto manteniendo presionada la tecla `mayús` (en lugar de abrir el archivo en un editor).
  "editor.dropIntoEditor.enabled": true,

  // Controla si al copiar sin selección se copia la línea actual.
  "editor.emptySelectionClipboard": true,

  // Controla si la tokenización debe producirse de forma asincrónica en un rol de trabajo.
  "editor.experimental.asyncTokenization": false,

  // Habilita o deshabilita la ejecución de ediciones desde extensiones al pegar.
  "editor.experimental.pasteActions.enabled": false,

  // Controla si los espacios en blanco se representan con un nuevo método experimental.
  //  - svg: Use un nuevo método de representación con svgs.
  //  - font: Use un nuevo método de representación con caracteres de fuente.
  //  - off: Use el método de representación estable.
  "editor.experimentalWhitespaceRendering": "svg",

  // Multiplicador de la velocidad de desplazamiento al presionar "Alt".
  "editor.fastScrollSensitivity": 5,

  // Controla si Encontrar widget debe agregar más líneas en la parte superior del editor. Si es true, puede desplazarse más allá de la primera línea cuando Encontrar widget está visible.
  "editor.find.addExtraSpaceOnTop": true,

  // Controla la condición para activar la búsqueda en la selección de forma automática.
  //  - never: No activar nunca Buscar en selección automáticamente (predeterminado).
  //  - always: Activar siempre Buscar en selección automáticamente.
  //  - multiline: Activar Buscar en la selección automáticamente cuando se seleccionen varias líneas de contenido.
  "editor.find.autoFindInSelection": "never",

  // Controla si el cursor debe saltar para buscar coincidencias mientras se escribe.
  "editor.find.cursorMoveOnType": true,

  // Controla si la búsqueda se reinicia automáticamente desde el principio (o el final) cuando no se encuentran más coincidencias.
  "editor.find.loop": true,

  // Controla si la cadena de búsqueda del widget de búsqueda se inicializa desde la selección del editor.
  //  - never: Nunca inicializar la cadena de búsqueda desde la selección del editor.
  //  - always: Siempre inicializar la cadena de búsqueda desde la selección del editor, incluida la palabra en la posición del cursor.
  //  - selection: Solo inicializar la cadena de búsqueda desde la selección del editor.
  "editor.find.seedSearchStringFromSelection": "always",

  // Controla si el editor tiene el plegado de código habilitado.
  "editor.folding": true,

  // Controla si el editor debe destacar los rangos plegados.
  "editor.foldingHighlight": true,

  // Permite controlar si el editor contrae automáticamente los rangos de importación.
  "editor.foldingImportsByDefault": false,

  // Número máximo de regiones plegables. Si aumenta este valor, es posible que el editor tenga menos capacidad de respuesta cuando el origen actual tiene un gran número de regiones plegables.
  "editor.foldingMaximumRegions": 5000,

  // Controla la estrategia para calcular rangos de plegado.
  //  - auto: Utilice una estrategia de plegado específica del idioma, si está disponible, de lo contrario la basada en sangría.
  //  - indentation: Utilice la estrategia de plegado basada en sangría.
  "editor.foldingStrategy": "auto",

  // Controla la familia de fuentes.
  "editor.fontFamily": "Consolas, 'Courier New', monospace",

  // Configura las ligaduras tipográficas o las características de fuente. Puede ser un valor booleano para habilitar o deshabilitar las ligaduras o bien una cadena para el valor de la propiedad "font-feature-settings" de CSS.
  "editor.fontLigatures": false,

  // Controla el tamaño de fuente en píxeles.
  "editor.fontSize": 14,

  // Configura variaciones de fuente. Puede ser un booleano para habilitar o deshabilitar la traducción de font-weight a font-variation-settings o una cadena para el valor de la propiedad CSS 'font-variation-settings'.
  "editor.fontVariations": false,

  // Controla el grosor de la fuente. Acepta las palabras clave "normal" y "negrita" o los números entre 1 y 1000.
  "editor.fontWeight": "normal",

  // Controla si el editor debe dar formato automáticamente al contenido pegado. Debe haber disponible un formateador capaz de aplicar formato a un rango dentro de un documento. 
  "editor.formatOnPaste": false,

  // Formatear archivo al guardar: debe haber un formateador disponible, el archivo no se debe guardar después de un retardo y no se debe cerrar el editor.
  "editor.formatOnSave": false,

  // Controla si la opción de formato al guardar formatea todo el archivo o solo las modificaciones. Solo se aplica cuando "#editor.formatOnSave#" está habilitado.
  //  - file: Formatea todo el archivo.
  //  - modifications: Formatea las modificaciones (requiere control de código fuente).
  //  - modificationsIfAvailable: Se intentará dar formato solo a las modificaciones (requiere el control de código fuente). Si no se puede usar el control de código fuente, se formateará todo el archivo.
  "editor.formatOnSaveMode": "file",

  // Controla si el editor debe dar formato a la línea automáticamente después de escribirla.
  "editor.formatOnType": false,

  // Controla si el editor debe representar el margen de glifo vertical. El margen de glifo se usa, principalmente, para depuración.
  "editor.glyphMargin": true,

  // Id. de comando alternativo que se está ejecutando cuando el resultado de "Ir a declaración" es la ubicación actual.
  "editor.gotoLocation.alternativeDeclarationCommand": "editor.action.goToReferences",

  // Identificador de comando alternativo que se ejecuta cuando el resultado de "Ir a definición" es la ubicación actual.
  "editor.gotoLocation.alternativeDefinitionCommand": "editor.action.goToReferences",

  // Id. de comando alternativo que se está ejecutando cuando el resultado de "Ir a implementación" es la ubicación actual.
  "editor.gotoLocation.alternativeImplementationCommand": "",

  // Identificador de comando alternativo que se ejecuta cuando el resultado de "Ir a referencia" es la ubicación actual.
  "editor.gotoLocation.alternativeReferenceCommand": "",

  // Id. de comando alternativo que se está ejecutando cuando el resultado de "Ir a definición de tipo" es la ubicación actual.
  "editor.gotoLocation.alternativeTypeDefinitionCommand": "editor.action.goToReferences",

  // Esta configuración está en desuso. Use configuraciones separadas como "editor.editor.gotoLocation.multipleDefinitions" o "editor.editor.gotoLocation.multipleImplementations" en su lugar.
  // 
  "editor.gotoLocation.multiple": null,

  // Controla el comportamiento del comando "Ir a declaración" cuando existen varias ubicaciones de destino.
  //  - peek: Mostrar vista de inspección de los resultados (predeterminado)
  //  - gotoAndPeek: Ir al resultado principal y mostrar una vista de inspección
  //  - goto: Vaya al resultado principal y habilite la navegación sin peek para otros
  "editor.gotoLocation.multipleDeclarations": "peek",

  // Controla el comportamiento del comando "Ir a definición" cuando existen varias ubicaciones de destino.
  //  - peek: Mostrar vista de inspección de los resultados (predeterminado)
  //  - gotoAndPeek: Ir al resultado principal y mostrar una vista de inspección
  //  - goto: Vaya al resultado principal y habilite la navegación sin peek para otros
  "editor.gotoLocation.multipleDefinitions": "peek",

  // Controla el comportamiento del comando "Ir a implementaciones" cuando existen varias ubicaciones de destino.
  //  - peek: Mostrar vista de inspección de los resultados (predeterminado)
  //  - gotoAndPeek: Ir al resultado principal y mostrar una vista de inspección
  //  - goto: Vaya al resultado principal y habilite la navegación sin peek para otros
  "editor.gotoLocation.multipleImplementations": "peek",

  // Controla el comportamiento del comando "Ir a referencias" cuando existen varias ubicaciones de destino.
  //  - peek: Mostrar vista de inspección de los resultados (predeterminado)
  //  - gotoAndPeek: Ir al resultado principal y mostrar una vista de inspección
  //  - goto: Vaya al resultado principal y habilite la navegación sin peek para otros
  "editor.gotoLocation.multipleReferences": "peek",

  // Controla el comportamiento del comando "Ir a definición de tipo" cuando existen varias ubicaciones de destino.
  //  - peek: Mostrar vista de inspección de los resultados (predeterminado)
  //  - gotoAndPeek: Ir al resultado principal y mostrar una vista de inspección
  //  - goto: Vaya al resultado principal y habilite la navegación sin peek para otros
  "editor.gotoLocation.multipleTypeDefinitions": "peek",

  // Controla si están habilitadas las guías de pares de corchetes.
  //  - true: Habilita guías de par de corchetes.
  //  - active: Habilita guías de par de corchetes solo para el par de corchetes activo.
  //  - false: Deshabilita las guías de par de corchetes.
  "editor.guides.bracketPairs": false,

  // Controla si están habilitadas las guías de pares de corchetes horizontales.
  //  - true: Habilita guías horizontales como adición a guías de par de corchetes verticales.
  //  - active: Habilita guías horizontales solo para el par de corchetes activo.
  //  - false: Deshabilita las guías de par de corchetes horizontales.
  "editor.guides.bracketPairsHorizontal": "active",

  // Controla si el editor debe resaltar el par de corchetes activo.
  "editor.guides.highlightActiveBracketPair": true,

  // Controla si el editor debe resaltar la guía de sangría activa.
  //  - true: Resalta la guía de sangría activa.
  //  - always: Resalta la guía de sangría activa incluso si se resaltan las guías de corchetes.
  //  - false: No resalta la guía de sangría activa.
  "editor.guides.highlightActiveIndentation": true,

  // Controla si el editor debe representar guías de sangría.
  "editor.guides.indentation": true,

  // Controla si el cursor debe ocultarse en la regla de información general.
  "editor.hideCursorInOverviewRuler": false,

  // Preferir mostrar los desplazamientos por encima de la línea, si hay espacio.
  "editor.hover.above": true,

  // Controla el retardo en milisegundos después del cual se muestra la información al mantener el puntero sobre un elemento.
  "editor.hover.delay": 300,

  // Controla si se muestra la información al mantener el puntero sobre un elemento.
  "editor.hover.enabled": true,

  // Controla si la información que aparece al mantener el puntero sobre un elemento permanece visible al mover el mouse sobre este.
  "editor.hover.sticky": true,

  // Número de espacios usados para la sangría o "tabSize" para usar el valor de "#editor.tabSize#". Esta configuración se invalida en función del contenido del archivo cuando "#editor.detectIndentation#" está activado.
  "editor.indentSize": "tabSize",

  // Habilita las sugerencias de incrustación en el editor.
  //  - on: Las sugerencias de incrustación están habilitadas
  //  - onUnlessPressed: Las sugerencias de incrustación se muestran de forma predeterminada y se ocultan cuando se mantiene presionado Ctrl+Alt
  //  - offUnlessPressed: Las sugerencias de incrustación están ocultas de forma predeterminada y se muestran al mantener presionado Ctrl+Alt
  //  - off: Las sugerencias de incrustación están deshabilitadas
  "editor.inlayHints.enabled": "on",

  // Controla la familia de fuentes de sugerencias de incrustación en el editor. Cuando se establece en vacío, se usa el `editor.fontFamily`.
  "editor.inlayHints.fontFamily": "",

  // Controla el tamaño de fuente de las sugerencias de incrustación en el editor. Como valor predeterminado, se usa `editor.fontSize` cuando el valor configurado es menor que `5` o mayor que el tamaño de fuente del editor.
  "editor.inlayHints.fontSize": 0,

  // Habilita el relleno alrededor de las sugerencias de incrustación en el editor.
  "editor.inlayHints.padding": false,

  // Controla si se deben mostrar automáticamente las sugerencias alineadas en el editor.
  "editor.inlineSuggest.enabled": true,

  // Controla cuándo mostrar la barra de herramientas de sugerencias insertadas.
  //  - always: Muestra la barra de herramientas de sugerencias insertadas cada vez que se muestra una sugerencia insertada.
  //  - onHover: Muestra la barra de herramientas de sugerencias insertadas al mantener el puntero sobre una sugerencia insertada.
  "editor.inlineSuggest.showToolbar": "onHover",

  // Insertar espacios al presionar "TAB". Este valor se invalida en función del contenido del archivo cuando `editor.detectIndentation` está activado.
  "editor.insertSpaces": true,

  // Define los corchetes que aumentan o reducen la sangría.
  "editor.language.brackets": null,

  // Define los pares de corchetes coloreados por su nivel de anidamiento si está habilitada la coloración de par de corchetes.
  "editor.language.colorizedBracketPairs": null,

  // Manejo especial para archivos grandes para desactivar ciertas funciones de memoria intensiva.
  "editor.largeFileOptimizations": true,

  // Controla el espacio entre letras en píxeles.
  "editor.letterSpacing": 0,

  // Habilita la bombilla de acción de código en el editor.
  "editor.lightbulb.enabled": true,

  // Controla el alto de línea. 
  //  - Use 0 para calcular automáticamente el alto de línea a partir del tamaño de la fuente.
  //  - Los valores entre 0 y 8 se usarán como multiplicador con el tamaño de fuente.
  //  - Los valores mayores o igual que 8 se usarán como valores efectivos.
  "editor.lineHeight": 0,

  // Controla la visualización de los números de línea.
  //  - off: Los números de línea no se muestran.
  //  - on: Los números de línea se muestran como un número absoluto.
  //  - relative: Los números de línea se muestran como distancia en líneas a la posición del cursor.
  //  - interval: Los números de línea se muestran cada 10 líneas.
  "editor.lineNumbers": "on",

  // Controla si el editor tiene habilitada la edición vinculada. Dependiendo del lenguaje, los símbolos relacionados (por ejemplo, las etiquetas HTML) se actualizan durante la edición.
  "editor.linkedEditing": false,

  // Controla si el editor debe detectar vínculos y hacerlos interactivos.
  "editor.links": true,

  // Resaltar paréntesis coincidentes.
  "editor.matchBrackets": "always",

  // Las lineas por encima de esta longitud no se tokenizarán por razones de rendimiento.
  "editor.maxTokenizationLineLength": 20000,

  // Controla si el minimapa se oculta automáticamente.
  "editor.minimap.autohide": false,

  // Controla si se muestra el minimapa.
  "editor.minimap.enabled": true,

  // Limite el ancho del minimapa para representar como mucho un número de columnas determinado.
  "editor.minimap.maxColumn": 120,

  // Represente los caracteres reales en una línea, por oposición a los bloques de color.
  "editor.minimap.renderCharacters": true,

  // Escala del contenido dibujado en el minimapa: 1, 2 o 3.
  "editor.minimap.scale": 1,

  // Controla cuándo se muestra el control deslizante del minimapa.
  "editor.minimap.showSlider": "mouseover",

  // Controla en qué lado se muestra el minimapa.
  "editor.minimap.side": "right",

  // Controla el tamaño del minimapa.
  //  - proportional: El minimapa tiene el mismo tamaño que el contenido del editor (y podría desplazarse).
  //  - fill: El minimapa se estirará o reducirá según sea necesario para ocupar la altura del editor (sin desplazamiento).
  //  - fit: El minimapa se reducirá según sea necesario para no ser nunca más grande que el editor (sin desplazamiento).
  "editor.minimap.size": "proportional",

  // Se usará un multiplicador en los eventos de desplazamiento de la rueda del mouse "deltaX" y "deltaY". 
  "editor.mouseWheelScrollSensitivity": 1,

  // Ampliar la fuente del editor cuando se use la rueda del mouse mientras se presiona "Ctrl".
  "editor.mouseWheelZoom": false,

  // Controla el número máximo de cursores que puede haber en un editor activo a la vez.
  "editor.multiCursorLimit": 10000,

  // Combinar varios cursores cuando se solapan.
  "editor.multiCursorMergeOverlapping": true,

  // El modificador que se usará para agregar varios cursores con el mouse. Los gestos del mouse Ir a definición y Abrir vínculo se adaptarán de modo que no entren en conflicto con el [modificador multicursor](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
  //  - ctrlCmd: Se asigna a "Control" en Windows y Linux y a "Comando" en macOS.
  //  - alt: Se asigna a "Alt" en Windows y Linux y a "Opción" en macOS.
  "editor.multiCursorModifier": "alt",

  // Controla el pegado cuando el recuento de líneas del texto pegado coincide con el recuento de cursores.
  //  - spread: Cada cursor pega una única línea del texto.
  //  - full: Cada cursor pega el texto completo.
  "editor.multiCursorPaste": "spread",

  // Controla si el editor debe resaltar las apariciones de símbolos semánticos.
  "editor.occurrencesHighlight": true,

  // Controla si debe dibujarse un borde alrededor de la regla de información general.
  "editor.overviewRulerBorder": true,

  // Controla el espacio entre el borde inferior del editor y la última línea.
  "editor.padding.bottom": 0,

  // Controla la cantidad de espacio entre el borde superior del editor y la primera línea.
  "editor.padding.top": 0,

  // Controla si el menú de sugerencias de parámetros se cicla o se cierra al llegar al final de la lista.
  "editor.parameterHints.cycle": true,

  // Habilita un elemento emergente que muestra documentación de los parámetros e información de los tipos mientras escribe.
  "editor.parameterHints.enabled": true,

  // Controla si se debe enfocar el editor en línea o el árbol en el widget de vista.
  //  - tree: Enfocar el árbol al abrir la inspección
  //  - editor: Enfocar el editor al abrir la inspección
  "editor.peekWidgetDefaultFocus": "tree",

  // Controla si las sugerencias deben mostrarse automáticamente al escribir. Puede controlarse para la escritura en comentarios, cadenas y otro código. Las sugerencias rápidas pueden configurarse para mostrarse como texto fantasma o con el widget de sugerencias. Tenga también en cuenta la configuración '#editor.suggestOnTriggerCharacters#' que controla si las sugerencias son desencadenadas por caracteres especiales.
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "off",
    "strings": "off"
  },

  // Controla el retraso, en milisegundos, tras el cual aparecerán sugerencias rápidas.
  "editor.quickSuggestionsDelay": 10,

  // Activar/desactivar la capacidad de previsualizar los cambios antes de cambiar el nombre
  "editor.rename.enablePreview": true,

  // En desuso. Utilice "editor.linkedEditing" en su lugar.
  // Controla si el editor cambia el nombre automáticamente en el tipo.
  "editor.renameOnType": false,

  // Controla si el editor debe representar caracteres de control.
  "editor.renderControlCharacters": true,

  // Representar el número de la última línea cuando el archivo termina con un salto de línea.
  "editor.renderFinalNewline": "on",

  // Controla cómo debe representar el editor el resaltado de línea actual.
  //  - none
  //  - gutter
  //  - line
  //  - all: Resalta el medianil y la línea actual.
  "editor.renderLineHighlight": "line",

  // Controla si el editor debe representar el resaltado de la línea actual solo cuando el editor está enfocado.
  "editor.renderLineHighlightOnlyWhenFocus": false,

  // Controla la forma en que el editor debe representar los caracteres de espacio en blanco.
  //  - none
  //  - boundary: Representa caracteres de espacio en blanco, excepto los espacios individuales entre palabras.
  //  - selection: Represente los caracteres de espacio en blanco solo en el texto seleccionado.
  //  - trailing: Representa solo los caracteres de espacio en blanco al final.
  //  - all
  "editor.renderWhitespace": "selection",

  // Controla si las selecciones deberían tener las esquinas redondeadas.
  "editor.roundedSelection": true,

  // Muestra reglas verticales después de un cierto número de caracteres monoespaciados. Usa múltiples valores para mostrar múltiples reglas. Si la matriz está vacía, no se muestran reglas.
  "editor.rulers": [],

  // Controla la visibilidad de la barra de desplazamiento horizontal.
  //  - auto: La barra de desplazamiento horizontal estará visible solo cuando sea necesario.
  //  - visible: La barra de desplazamiento horizontal estará siempre visible.
  //  - hidden: La barra de desplazamiento horizontal estará siempre oculta.
  "editor.scrollbar.horizontal": "auto",

  // Altura de la barra de desplazamiento horizontal.
  "editor.scrollbar.horizontalScrollbarSize": 12,

  // Controla si al hacer clic se desplaza por página o salta a la posición donde se hace clic.
  "editor.scrollbar.scrollByPage": false,

  // Controla la visibilidad de la barra de desplazamiento vertical.
  //  - auto: La barra de desplazamiento vertical estará visible solo cuando sea necesario.
  //  - visible: La barra de desplazamiento vertical estará siempre visible.
  //  - hidden: La barra de desplazamiento vertical estará siempre oculta.
  "editor.scrollbar.vertical": "auto",

  // Ancho de la barra de desplazamiento vertical.
  "editor.scrollbar.verticalScrollbarSize": 14,

  // Controla el número de caracteres adicionales a partir del cual el editor se desplazará horizontalmente.
  "editor.scrollBeyondLastColumn": 4,

  // Controla si el editor seguirá haciendo scroll después de la última línea.
  "editor.scrollBeyondLastLine": true,

  // Desplácese solo a lo largo del eje predominante cuando se desplace vertical y horizontalmente al mismo tiempo. Evita la deriva horizontal cuando se desplaza verticalmente en un trackpad.
  "editor.scrollPredominantAxis": true,

  // Controla si el editor debe destacar las coincidencias similares a la selección.
  "editor.selectionHighlight": true,

  // Controla si se muestra semanticHighlighting para los idiomas que lo admiten.
  //  - true: El resaltado semántico está habilitado para todos los temas de color.
  //  - false: El resaltado semántico está deshabilitado para todos los temas de color.
  //  - configuredByTheme: El resaltado semántico está configurado con el valor "semanticHighlighting" del tema de color actual.
  "editor.semanticHighlighting.enabled": "configuredByTheme",

  // Invalida los estilos y el color de token semántico del editor del tema de color seleccionado.
  "editor.semanticTokenColorCustomizations": {},

  // Controla las variables en desuso tachadas.
  "editor.showDeprecated": true,

  // Controla cuándo se muestran los controles de plegado en el medianil.
  //  - always: Mostrar siempre los controles de plegado.
  //  - never: No mostrar nunca los controles de plegado y reducir el tamaño del medianil.
  //  - mouseover: Mostrar solo los controles de plegado cuando el mouse está sobre el medianil.
  "editor.showFoldingControls": "mouseover",

  // Controla el fundido de salida del código no usado.
  "editor.showUnused": true,

  // Indica si los espacios en blanco iniciales y finales deben seleccionarse siempre.
  "editor.smartSelect.selectLeadingAndTrailingWhitespace": true,

  // Controla si el editor se desplazará con una animación.
  "editor.smoothScrolling": false,

  // Controla si los fragmentos de plantilla de archivo o surround-with-snippets se muestran como Acciones de código.
  "editor.snippets.codeActions.enabled": true,

  // Controla si se muestran los fragmentos de código con otras sugerencias y cómo se ordenan.
  //  - top: Mostrar sugerencias de fragmentos de código por encima de otras sugerencias.
  //  - bottom: Mostrar sugerencias de fragmentos de código por debajo de otras sugerencias.
  //  - inline: Mostrar sugerencias de fragmentos de código con otras sugerencias.
  //  - none: No mostrar sugerencias de fragmentos de código.
  "editor.snippetSuggestions": "inline",

  // Mantiene abiertos los editores interactivos, incluso al hacer doble clic en su contenido o presionar "Escape".
  "editor.stablePeek": false,

  // Muestra los ámbitos actuales anidados durante el desplazamiento en la parte superior del editor.
  "editor.stickyScroll.enabled": false,

  // Define el número máximo de líneas rápidas que se mostrarán.
  "editor.stickyScroll.maxLineCount": 5,

  // Emula el comportamiento de selección de los caracteres de tabulación al usar espacios para la sangría. La selección se aplicará a las tabulaciones.
  "editor.stickyTabStops": false,

  // Esta configuración está en desuso. Use configuraciones separadas como "editor.suggest.showKeyword" o "editor.suggest.showSnippets" en su lugar.
  // 
  "editor.suggest.filteredTypes": {},

  // Controla si el filtrado y la ordenación de sugerencias se tienen en cuenta para los errores ortográficos pequeños.
  "editor.suggest.filterGraceful": true,

  // Controla si las palabras se sobrescriben al aceptar la finalización. Tenga en cuenta que esto depende de las extensiones que participan en esta característica.
  //  - insert: Inserte la sugerencia sin sobrescribir el texto a la derecha del cursor.
  //  - replace: Inserte la sugerencia y sobrescriba el texto a la derecha del cursor.
  "editor.suggest.insertMode": "insert",

  // Controla si la ordenación mejora las palabras que aparecen cerca del cursor.
  "editor.suggest.localityBonus": false,

  // Cuando se activa el filtro IntelliSense se requiere que el primer carácter coincida con el inicio de una palabra. Por ejemplo, "c" en "Consola" o "WebContext" but _not_ on "descripción". Si se desactiva, IntelliSense mostrará más resultados, pero los ordenará según la calidad de la coincidencia.
  "editor.suggest.matchOnWordStartOnly": true,

  // La configuración está en desuso. Ahora puede cambiarse el tamaño del widget de sugerencias.
  // 
  "editor.suggest.maxVisibleSuggestions": 0,

  // Controla si se puede obtener una vista previa del resultado de la sugerencia en el editor.
  "editor.suggest.preview": false,

  // Controla si se selecciona una sugerencia cuando se muestra el widget. Tenga en cuenta que esto solo se aplica a las sugerencias desencadenadas automáticamente (`editor.quickSuggestions#` y `#editor.suggestOnTriggerCharacters`) y que siempre se selecciona una sugerencia cuando se invoca explícitamente, por ejemplo, a través de 'Ctrl+Espacio'.
  //  - always: Seleccione siempre una sugerencia cuando se desencadene IntelliSense automáticamente.
  //  - never: Nunca seleccione una sugerencia cuando desencadene IntelliSense automáticamente.
  //  - whenTriggerCharacter: Seleccione una sugerencia solo cuando desencadene IntelliSense desde un carácter de desencadenador.
  //  - whenQuickSuggestion: Seleccione una sugerencia solo cuando desencadene IntelliSense mientras escribe.
  "editor.suggest.selectionMode": "always",

  // Controla si las selecciones de sugerencias recordadas se comparten entre múltiples áreas de trabajo y ventanas (necesita "#editor.suggestSelection#").
  "editor.suggest.shareSuggestSelections": false,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "class".
  "editor.suggest.showClasses": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de "color".
  "editor.suggest.showColors": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "constant".
  "editor.suggest.showConstants": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "constructor".
  "editor.suggest.showConstructors": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "customcolor".
  "editor.suggest.showCustomcolors": true,

  // Cuando se activa IntelliSense muestra sugerencias "obsoletas".
  "editor.suggest.showDeprecated": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "enumMember".
  "editor.suggest.showEnumMembers": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "enum".
  "editor.suggest.showEnums": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "event".
  "editor.suggest.showEvents": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "field".
  "editor.suggest.showFields": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "file".
  "editor.suggest.showFiles": true,

  // Si está habilitado, IntelliSense muestra sugerencias de tipo "folder".
  "editor.suggest.showFolders": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de "función".
  "editor.suggest.showFunctions": true,

  // Controla si mostrar u ocultar iconos en sugerencias.
  "editor.suggest.showIcons": true,

  // Controla si los detalles de sugerencia se muestran incorporados con la etiqueta o solo en el widget de detalles.
  "editor.suggest.showInlineDetails": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "interface".
  "editor.suggest.showInterfaces": true,

  // Cuando está habilitado IntelliSense muestra sugerencias para problemas.
  "editor.suggest.showIssues": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "keyword".
  "editor.suggest.showKeywords": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "method".
  "editor.suggest.showMethods": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "module".
  "editor.suggest.showModules": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "operator".
  "editor.suggest.showOperators": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "property".
  "editor.suggest.showProperties": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "reference".
  "editor.suggest.showReferences": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "snippet".
  "editor.suggest.showSnippets": true,

  // Controla la visibilidad de la barra de estado en la parte inferior del widget de sugerencias.
  "editor.suggest.showStatusBar": false,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "struct".
  "editor.suggest.showStructs": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "typeParameter".
  "editor.suggest.showTypeParameters": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "unit".
  "editor.suggest.showUnits": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias del usuario.
  "editor.suggest.showUsers": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de "value".
  "editor.suggest.showValues": true,

  // Cuando está habilitado, IntelliSense muestra sugerencias de tipo "variable".
  "editor.suggest.showVariables": true,

  // Si está habilitado, IntelliSense muestra sugerencias de tipo "text".
  "editor.suggest.showWords": true,

  // Controla si un fragmento de código activo impide sugerencias rápidas.
  "editor.suggest.snippetsPreventQuickSuggestions": true,

  // Tamaño de fuente del widget de sugerencias. Cuando se establece en `0`, se usa el valor de `editor.fontSize`.
  "editor.suggestFontSize": 0,

  // Alto de línea para el widget de sugerencias. Cuando se establece en `0`, se usa el valor de `editor.lineHeight`. El valor mínimo es 8.
  "editor.suggestLineHeight": 0,

  // Controla si deben aparecer sugerencias de forma automática al escribir caracteres desencadenadores.
  "editor.suggestOnTriggerCharacters": true,

  // Controla cómo se preseleccionan las sugerencias cuando se muestra la lista,
  //  - first: Seleccionar siempre la primera sugerencia.
  //  - recentlyUsed: Seleccione sugerencias recientes a menos que al escribir más se seleccione una, por ejemplo, "console.| -> console.log" porque "log" se ha completado recientemente.
  //  - recentlyUsedByPrefix: Seleccione sugerencias basadas en prefijos anteriores que han completado esas sugerencias, por ejemplo, "co -> console" y "con -> const".
  "editor.suggestSelection": "first",

  // Habilita completar pestañas.
  //  - on: La pestaña se completará insertando la mejor sugerencia de coincidencia encontrada al presionar la pestaña
  //  - off: Deshabilitar los complementos para pestañas.
  //  - onlySnippets: La pestaña se completa con fragmentos de código cuando su prefijo coincide. Funciona mejor cuando las 'quickSuggestions' no están habilitadas.
  "editor.tabCompletion": "off",

  // Controla si el editor recibe las pestañas o las aplaza al área de trabajo para la navegación.
  "editor.tabFocusMode": false,

  // El número de espacios a los que equivale una tabulación. Este valor se invalida en función del contenido del archivo cuando `editor.detectIndentation` está activado.
  "editor.tabSize": 4,

  // Invalida el estilo de fuente y los colores de sintaxis del editor del tema de color seleccionado.
  "editor.tokenColorCustomizations": {},

  // Quitar el espacio en blanco final autoinsertado.
  "editor.trimAutoWhitespace": true,

  // Controla si al hacer clic en el contenido vacío después de una línea plegada se desplegará la línea.
  "editor.unfoldOnClickAfterEndOfLine": false,

  // Define los caracteres permitidos que no se resaltan.
  "editor.unicodeHighlight.allowedCharacters": {},

  // Los caracteres Unicode que son comunes en las configuraciones regionales permitidas no se resaltan.
  "editor.unicodeHighlight.allowedLocales": {
    "_os": true,
    "_vscode": true
  },

  // Controla si se resaltan caracteres que se pueden confundir con caracteres ASCII básicos, excepto los que son comunes en la configuración regional del usuario actual.
  "editor.unicodeHighlight.ambiguousCharacters": true,

  // Controla si los caracteres de los comentarios también deben estar sujetos al resaltado Unicode.
  "editor.unicodeHighlight.includeComments": "inUntrustedWorkspace",

  // Controla si los caracteres de las cadenas también deben estar sujetos al resaltado Unicode.
  "editor.unicodeHighlight.includeStrings": true,

  // Controla si se resaltan los caracteres que solo reservan espacio o que no tienen ancho.
  "editor.unicodeHighlight.invisibleCharacters": true,

  // Controla si se resaltan todos los caracteres ASCII no básicos. Solo los caracteres entre U+0020 y U+007E, tabulación, avance de línea y retorno de carro se consideran ASCII básicos.
  "editor.unicodeHighlight.nonBasicASCII": "inUntrustedWorkspace",

  // Quite los terminadores de línea inusuales que podrían provocar problemas.
  //  - auto: Los terminadores de línea no habituales se quitan automáticamente.
  //  - off: Los terminadores de línea no habituales se omiten.
  //  - prompt: Advertencia de terminadores de línea inusuales que se quitarán.
  "editor.unusualLineTerminators": "prompt",

  // La inserción y eliminación del espacio en blanco sigue a las tabulaciones.
  "editor.useTabStops": true,

  // Habilita sugerencias basadas en palabras.
  "editor.wordBasedSuggestions": true,

  // Controla de qué documentos se calculan las finalizaciones basadas en palabras.
  //  - currentDocument: Sugerir palabras solo del documento activo.
  //  - matchingDocuments: Sugerir palabras de todos los documentos abiertos del mismo idioma.
  //  - allDocuments: Sugerir palabras de todos los documentos abiertos.
  "editor.wordBasedSuggestionsMode": "matchingDocuments",

  // Controla las reglas de salto de palabra usadas para texto chino, japonés o coreano (CJK).
  //  - normal: Use la regla de salto de línea predeterminada.
  //  - keepAll: Los saltos de palabra no deben usarse para texto chino, japonés o coreano (CJK). El comportamiento del texto distinto a CJK es el mismo que el normal.
  "editor.wordBreak": "normal",

  // Caracteres que se usarán como separadores de palabras al realizar operaciones o navegaciones relacionadas con palabras.
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

  // Controla cómo deben ajustarse las líneas.
  //  - off: Las líneas no se ajustarán nunca.
  //  - on: Las líneas se ajustarán en el ancho de la ventanilla.
  //  - wordWrapColumn: Las líneas se ajustarán al valor de "#editor.wordWrapColumn#". 
  //  - bounded: Las líneas se ajustarán al valor que sea inferior: el tamaño de la ventanilla o el valor de "#editor.wordWrapColumn#".
  "editor.wordWrap": "off",

  // Controla la columna de ajuste del editor cuando "#editor.wordWrap#" es "wordWrapColumn" o "bounded".
  "editor.wordWrapColumn": 80,

  // Controla la sangría de las líneas ajustadas.
  //  - none: No hay sangría. Las líneas ajustadas comienzan en la columna 1.
  //  - same: A las líneas ajustadas se les aplica la misma sangría que al elemento primario.
  //  - indent: A las líneas ajustadas se les aplica una sangría de +1 respecto al elemento primario.
  //  - deepIndent: A las líneas ajustadas se les aplica una sangría de +2 respecto al elemento primario.
  "editor.wrappingIndent": "same",

  // Controla el algoritmo que calcula los puntos de ajuste. Tenga en cuenta que, en el modo de accesibilidad, se usará el modo avanzado para obtener la mejor experiencia.
  //  - simple: Se supone que todos los caracteres son del mismo ancho. Este es un algoritmo rápido que funciona correctamente para fuentes monoespaciales y ciertos scripts (como caracteres latinos) donde los glifos tienen el mismo ancho.
  //  - advanced: Delega el cálculo de puntos de ajuste en el explorador. Es un algoritmo lento, que podría causar bloqueos para archivos grandes, pero funciona correctamente en todos los casos.
  "editor.wrappingStrategy": "simple"

},
{
  // Reemplaza los colores del tema de color actual
  "workbench.colorCustomizations": {},

  // Especifica el tema de color utilizado en el área de trabajo.
  "workbench.colorTheme": "Default Dark+",

  // Especifica el tema de icono de archivo utilizado en el área de trabajo o "null" para no mostrar ningún icono de archivo.
  //  - null: Sin iconos de archivo
  //  - vs-minimal
  //  - vs-seti
  //  - material-icon-theme
  //  - dobri-theme-icons
  //  - dobri-simple-icons
  "workbench.iconTheme": "vs-seti",

  // Controla el tipo de coincidencia que se usa al buscar listas y árboles en el área de trabajo.
  //  - fuzzy: Usar coincidencias aproximadas al buscar.
  //  - contiguous: Use coincidencias contiguas al buscar.
  "workbench.list.defaultFindMatchType": "fuzzy",

  // Controla el modo de búsqueda predeterminado para listas y árboles en el área de trabajo.
  //  - highlight: Resalta elementos al buscar. Navegar más arriba o abajo pasará solo por los elementos resaltados.
  //  - filter: Filtre elementos al buscar.
  "workbench.list.defaultFindMode": "highlight",

  // Multiplicador de la velocidad de desplazamiento al presionar "Alt".
  "workbench.list.fastScrollSensitivity": 5,

  // Controla si las listas y los árboles admiten el desplazamiento horizontal en el área de trabajo. Advertencia: La activación de esta configuración repercute en el rendimiento.
  "workbench.list.horizontalScrolling": false,

  // Use "workbench.list.defaultFindMode" y "workbench.list.typeNavigationMode" en su lugar.
  // Controla el estilo de navegación del teclado para listas y árboles en el área de trabajo. Puede ser simple, resaltar y filtrar.
  //  - simple: La navegación simple del teclado se centra en elementos que coinciden con la entrada del teclado. El emparejamiento se hace solo en prefijos.
  //  - highlight: Destacar la navegación del teclado resalta los elementos que coinciden con la entrada del teclado. Más arriba y abajo la navegación atravesará solo los elementos destacados.
  //  - filter: La navegación mediante el teclado de filtro filtrará y ocultará todos los elementos que no coincidan con la entrada del teclado.
  "workbench.list.keyboardNavigation": "highlight",

  // Se usará un multiplicador en los eventos de desplazamiento de la rueda del mouse "deltaX" y "deltaY". 
  "workbench.list.mouseWheelScrollSensitivity": 1,

  // El modificador que se utilizará para agregar un elemento en los árboles y listas para una selección múltiple con el ratón (por ejemplo en el explorador, abiertos editores y vista de scm). Los gestos de ratón 'Abrir hacia' - si están soportados - se adaptarán de forma tal que no tenga conflicto con el modificador múltiple.
  //  - ctrlCmd: Se asigna a "Control" en Windows y Linux y a "Comando" en macOS.
  //  - alt: Se asigna a "Alt" en Windows y Linux y a "Opción" en macOS.
  "workbench.list.multiSelectModifier": "ctrlCmd",

  // Controla cómo abrir elementos en los árboles y las listas mediante el mouse (si se admite). Tenga en cuenta que algunos árboles y listas pueden optar por ignorar esta configuración si no es aplicable.
  "workbench.list.openMode": "singleClick",

  // Controla si los clics en la barra de desplazamiento se desplazan página por página.
  "workbench.list.scrollByPage": false,

  // Controla si las listas y los árboles tienen un desplazamiento suave.
  "workbench.list.smoothScrolling": false,

  // Controla el funcionamiento de la navegación por tipos en listas y árboles del área de trabajo. Cuando se establece en "trigger", la navegación por tipos comienza una vez que se ejecuta el comando "list.triggerTypeNavigation".
  "workbench.list.typeNavigationMode": "automatic",

  // Especifica el tema de color preferido para la apariencia oscura del sistema operativo cuando "#window.autoDetectColorScheme#" está habilitado.
  "workbench.preferredDarkColorTheme": "Default Dark+",

  // Especifica el tema de color preferido utilizado en modo oscuro de alto contraste cuando `window.autoDetectHighContrast` está habilitado.
  "workbench.preferredHighContrastColorTheme": "Default High Contrast",

  // Especifica el tema de color preferido que se usa en el modo claro de contraste alto cuando `window.autoDetectHighContrast` está habilitado.
  "workbench.preferredHighContrastLightColorTheme": "Default High Contrast Light",

  // Especifica el tema de color preferido para la apariencia clara del sistema operativo cuando "#window.autoDetectColorScheme#" está habilitado.
  "workbench.preferredLightColorTheme": "Default Light+",

  // Especifica el tema del icono del producto usado.
  //  - Default: Predeterminada
  "workbench.productIconTheme": "Default",

  // Controla cómo se expanden las carpetas de árbol al hacer clic en sus nombres. Tenga en cuenta que algunos árboles y listas pueden optar por omitir esta configuración si no es aplicable.
  "workbench.tree.expandMode": "singleClick",

  // Controla la sangría de árbol en píxeles.
  "workbench.tree.indent": 8,

  // Controla si el árbol debe representar guías de sangría.
  "workbench.tree.renderIndentGuides": "onHover"

},
{
  // Controla cuándo se muestra la pancarta del modo restringido.
  //  - always: Mostrar la pancarta cada vez que se abra un área de trabajo que no sea de confianza.
  //  - untilDismissed: Mostrar la pancarta cada vez que se abra un área de trabajo que no sea de confianza hasta que se descarte.
  //  - never: No mostrar la pancarta cuando un área de trabajo que no sea de confianza esté abierta.
  "security.workspace.trust.banner": "untilDismissed",

  // Controla si se confía o no en la ventana vacía de forma predeterminada dentro de VS Code. Cuando se usa con `security.workspace.trust.untrustedFiles`, puede habilitar la funcionalidad completa de VS Code sin preguntar en una ventana vacía.
  "security.workspace.trust.emptyWindow": true,

  // Controla si la confianza del área de trabajo está habilitada o no en VS Code.
  "security.workspace.trust.enabled": true,

  // Controla cuándo se muestra el aviso de inicio para confiar en un área de trabajo.
  //  - always: Pedir certificación de confianza cada vez que se abre un área de trabajo que no es de confianza.
  //  - once: Pedir certificación de confianza la primera vez que se abre un área de trabajo que no es de confianza.
  //  - never: No pedir certificación de confianza cuando se abre un área de trabajo que no es de confianza.
  "security.workspace.trust.startupPrompt": "once",

  // Controla cómo controlar la apertura de archivos que no son de confianza en un área de trabajo de confianza. Este valor también se aplica a la apertura de archivos en una ventana vacía de confianza a través de `security.workspace.trust.emptyWindow`.
  //  - prompt: Pregunte cómo manejar los archivos no confiables para cada área de trabajo. Una vez que los archivos no confiables se introducen en un espacio de trabajo de confianza, no se le volverá a preguntar.
  //  - open: Permitir siempre que se introduzcan archivos no confiables en un área de trabajo de confianza sin preguntar.
  //  - newWindow: Abra siempre los archivos que no son de confianza en una ventana separada en modo restringido sin preguntar.
  "security.workspace.trust.untrustedFiles": "prompt"

},
{
  // Controla el comportamiento de clics de un icono de la barra de actividades en el área de trabajo.
  //  - toggle: Oculta la barra lateral si el elemento en el que se hace clic ya está visible.
  //  - focus: Enfoca la barra lateral si el elemento en el que se hace clic ya está visible.
  "workbench.activityBar.iconClickBehavior": "toggle",

  // Controla la visibilidad de la barra de actividades en el área de trabajo.
  "workbench.activityBar.visible": true,

  // Controla si se reanudan automáticamente los cambios de trabajo disponibles almacenados en la nube para el área de trabajo actual.
  //  - onReload: Reanudar automáticamente los cambios de trabajo disponibles desde la nube al volver a cargar la ventana.
  //  - off: Nunca intente reanudar los cambios de trabajo desde la nube.
  "workbench.cloudChanges.autoResume": "onReload",

  // Controla si se pide al usuario que almacene los cambios de trabajo en la nube al usar Continuar trabajando en.
  //  - prompt: Solicite al usuario que inicie sesión para almacenar los cambios de trabajo en la nube con Continuar trabajando en.
  //  - off: No almacene los cambios de trabajo en la nube con Continuar trabajando en, a menos que el usuario ya haya activado los Cambios en la nube.
  "workbench.cloudChanges.continueOn": "prompt",

  // Controla si la paleta de comandos debe tener una lista de comandos usados habitualmente.
  "workbench.commandPalette.experimental.suggestCommands": false,

  // Controla el número de comandos utilizados recientemente que se mantendrán en el historial de la paleta de comandos. Establezca el valor a 0 para desactivar el historial de comandos.
  "workbench.commandPalette.history": 50,

  // Controla si la última entrada especificada en la paleta de comandos debe restaurarse al abrir la próxima vez.
  "workbench.commandPalette.preserveInput": false,

  // Si un editor que coincide con uno de los tipos de la lista se abre como el primero de un grupo de editores y hay más de un grupo abierto, el grupo se bloquea automáticamente. Los grupos bloqueados solo serán usados para abrir editores cuando sean elegidos explícitamente por un gesto del usuario (por ejemplo, arrastrar y soltar), pero no por defecto. En consecuencia, es menos probable que el editor activo de un grupo bloqueado sea sustituido accidentalmente por otro editor.
  "workbench.editor.autoLockGroups": {
    "default": false,
    "workbench.editorinputs.searchEditorInput": false,
    "workbench.editorinputs.sidebysideEditorInput": false,
    "jupyter-notebook": false,
    "imagePreview.previewEditor": false,
    "vscode.audioPreview": false,
    "vscode.videoPreview": false,
    "jsProfileVisualizer.cpuprofile.table": false,
    "jsProfileVisualizer.heapprofile.table": false,
    "analyticsignal.preview-pdf": false,
    "pdf.preview": false,
    "gitlens.rebase": false,
    "svgPreviewer.customEditor": false,
    "java.formatterSettingsEditor": false,
    "terminalEditor": true,
    "workbench.input.interactive": false,
    "mainThreadWebview-markdown.preview": false
  },

  // Controla si el diseño centrado debe cambiar de tamaño automáticamente al ancho máximo cuando se abre más de un grupo. Cuando solo haya un grupo abierto, volverá al ancho original centrado.
  "workbench.editor.centeredLayoutAutoResize": true,

  // Controla si el diseño centrado intenta mantener un ancho constante cuando se cambia el tamaño de la ventana.
  "workbench.editor.centeredLayoutFixedWidth": false,

  // Controla el comportamiento de los grupos de editores vacíos cuando se cierra la última pestaña del grupo. Si esta opción está habilitada, los grupos vacíos se cierran automáticamente. Si está deshabilitada, los grupos vacíos siguen formando parte de la cuadrícula.
  "workbench.editor.closeEmptyGroups": true,

  // Controla si los editores que muestran un archivo que se abrió durante la sesión deben cerrarse automáticamente cuando otro proceso elimina el archivo o lo cambia de nombre. Si se deshabilita esta opción y se da alguna de estas circunstancias, el editor abierto se mantiene. Tenga en cuenta que, al eliminar desde la aplicación, siempre se cierra el editor y que los editores con cambios sin guardar nunca se cerrarán para conservar los datos.
  "workbench.editor.closeOnFileDelete": false,

  // Controla si las decoraciones de archivo del editor deben usar distintivos.
  "workbench.editor.decorations.badges": true,

  // Controla si las decoraciones de archivo del editor deben usar colores. 
  "workbench.editor.decorations.colors": true,

  // El editor predeterminado para los archivos detectados como binarios. Si no se define, será presentado al usuario un selector.
  "workbench.editor.defaultBinaryEditor": "",

  // Controla si los editores abiertos se muestran como editores de vista previa. Los editores de vista previa no permanecen abiertos, se reutilizan hasta que se establecen explícitamente para mantenerse abiertos (mediante doble clic o edición) y muestran los nombres de archivo en cursiva.
  "workbench.editor.enablePreview": true,

  // Controla si los editores permanecen en vista previa cuando se inicia la navegación de código desde ellos. Los editores en vista previa no se mantienen abiertos y se reutilizan hasta que se establece explícitamente que se mantengan abiertos (mediante doble clic o edición). Este valor se omite cuando "#workbench.editor.enablePreview#" está deshabilitado.
  "workbench.editor.enablePreviewFromCodeNavigation": false,

  // Controla si los editores abiertos desde Quick Open se muestran como editores de vista previa. Los editores de vista previa no permanecen abiertos y se reutilizan hasta que se establecen explícitamente para mantenerse abiertos (mediante doble clic o edición). Cuando esté habilitada, mantenga presionada la tecla Ctrl antes de la selección para abrir un editor como una vista previa. Este valor se omite cuando `workbench.editor.enablePreview` está deshabilitado.
  "workbench.editor.enablePreviewFromQuickOpen": false,

  // Controla si las pestañas se cierran en el orden de uso más reciente o de izquierda a derecha.
  "workbench.editor.focusRecentEditorAfterClose": true,

  // Controla si se dibuja un borde superior en las pestañas de los editores que tienen cambios sin guardar. Este valor se omite cuando "#workbench.editor.showTabs#" está deshabilitado.
  "workbench.editor.highlightModifiedTabs": false,

  // Habilita el uso del historial del editor en la detección de idioma. Esto hace que la detección de idioma automática favorezca los idiomas abiertos recientemente y permite que funcione con entradas más pequeñas.
  "workbench.editor.historyBasedLanguageDetection": true,

  // Controla el formato de etiqueta de un editor.
  //  - default: Mostrar el nombre del archivo. Cuando las pestañas están habilitadas y dos archivos tienen el mismo nombre en un grupo, se agregan las secciones distintivas de la ruta de acceso de cada archivo. Cuando las pestañas están deshabilitadas, se muestra la carpeta del área de trabajo si el editor está activo.
  //  - short: Muestre el nombre del archivo seguido de su nombre de directorio.
  //  - medium: Muestre el nombre del archivo seguido de su ruta de acceso relativa a la carpeta del área de trabajo.
  //  - long: Mostrar el nombre del archivo seguido de la ruta de acceso absoluta.
  "workbench.editor.labelFormat": "default",

  // Controla si el lenguaje de programación en un editor de texto se detecta automáticamente, a menos que se haya establecido el lenguaje de forma explícita con el selector de lenguaje. El ámbito puede ajustarse en función del lenguaje para poder especificar los lenguajes de los que no desea que se le desconecte. Esto es útil para lenguajes como Markdown, que a menudo contiene otros lenguajes, por lo que la detección de idioma puede identificar erróneamente el lenguaje incrustado en vez de Markdown.
  "workbench.editor.languageDetection": true,

  // Cuando se activa, muestra una barra de estado de Corrección rápida cuando el idioma del editor no coincide con el idioma del contenido detectado.
  "workbench.editor.languageDetectionHints": {
    "untitledEditors": true,
    "notebookEditors": true
  },

  // Controla si el número de editores abiertos debe estar limitado o no. Cuando está habilitado, los editores usados menos recientemente se cerrarán para hacer sitio a los editores recién abiertos.
  "workbench.editor.limit.enabled": false,

  // Controla si el número máximo de editores abiertos debe excluir los editores con modificaciones para contar hacia el límite configurado.
  "workbench.editor.limit.excludeDirty": false,

  // Controla si el límite del máximo de editores abiertos debe aplicarse por grupo de editores o en todos los grupos de editores.
  "workbench.editor.limit.perEditorGroup": false,

  // Controla el número máximo de editores abiertos. Use la configuración `workbench.editor.limit.perEditorGroup` para controlar este límite por grupo de editores o en todos los grupos.
  "workbench.editor.limit.value": 10,

  // Habilita el uso de los botones cuatro y cinco del mouse para los comandos 'Volver' y 'Avanzar'.
  "workbench.editor.mouseBackForwardToNavigate": true,

  // Controla el ámbito de navegación del historial en los editores para comandos como 'Volver' y 'Avanzar'.
  //  - default: Navegue por todos los editores y grupos de editores abiertos.
  //  - editorGroup: Navegue solo en los editores del grupo de editores activo.
  //  - editor: Navegue solo en el editor activo.
  "workbench.editor.navigationScope": "default",

  // Controla dónde se abren los editores. Seleccione "left" o "right" para abrir los editores a la izquierda o la derecha del que está activo actualmente. Seleccione "first" o "last" para abrir los editores con independencia del que está activo.
  "workbench.editor.openPositioning": "right",

  // Controla la dirección predeterminada de los editores que se abren en paralelo (por ejemplo, desde el explorador). De forma predeterminada, los editores se abren a la derecha del que está activo. Si se cambia a "down", los editores se abren debajo del que está activo.
  "workbench.editor.openSideBySideDirection": "right",

  // Controla el dimensionamiento de las pestañas del editor ancladas. Las pestañas ancladas se ordenan al principio de todas las pestañas abiertas y normalmente no se cierran hasta que se desanclan. Este valor se omite cuando "#workbench.editor.showTabs#" está deshabilitado.
  //  - normal: Una pestaña anclada hereda la apariencia de pestañas no ancladas.
  //  - compact: Una pestaña anclada se mostrará en un formato compacto con solo un icono o una primera letra del nombre del editor.
  //  - shrink: Una pestaña fijada se reduce a un tamaño fijo compacto que muestra partes del nombre del editor.
  "workbench.editor.pinnedTabSizing": "normal",

  // Cuando se habilita, se dará más prioridad a un modelo de detección de idioma que tenga en cuenta el historial del editor.
  "workbench.editor.preferHistoryBasedLanguageDetection": true,

  // Restaura el último estado de vista del editor (por ejemplo, la posición de desplazamiento) al volver a abrir los editores después de cerrarlos. El estado de vista del editor se almacena por grupo de editores y se descarta cuando se cierra un grupo. Use el valor `workbench.editor.sharedViewState` para usar el último estado de vista conocido en todos los grupos de editores si no se encuentra ningún estado de vista anterior para un grupo de editores.
  "workbench.editor.restoreViewState": true,

  // Controla si un editor se muestra en alguno de los grupos visibles cuando se abre. Si se deshabilita esta opción, un editor preferirá abrirse en el grupo de editores activo en ese momento. Si se habilita, se mostrará un editor ya abierto en lugar de volver a abrirse en el grupo de editores activo. Tenga en cuenta que hay casos en los que esta opción se omite, por ejemplo, cuando se fuerza la apertura de un editor en un grupo específico o junto al grupo activo actual.
  "workbench.editor.revealIfOpen": false,

  // Controla si las pestañas se abrirán o no al desplazarse sobre ellas. De forma predeterminada, las pestañas solo se muestran cuando se desplaza sobre ellas, pero no se abren. Puede mantener presionada la tecla Mayús mientras se desplaza para cambiar el comportamiento en esa duración. Este valor se omite cuando "#workbench.editor.showTabs#" está deshabilitado.
  "workbench.editor.scrollToSwitchTabs": false,

  // Conserva el estado de la vista del editor más reciente (como la posición de desplazamiento) en todos los grupos de editores y lo restaura si no se encuentra un estado de vista del editor específico para el grupo de editores.
  "workbench.editor.sharedViewState": false,

  // Controla si los editores abiertos deben mostrarse o no con un icono. Requiere que también se habilite un tema de icono de archivo.
  "workbench.editor.showIcons": true,

  // Controla si los editores abiertos se deben mostrar o no en pestañas.
  "workbench.editor.showTabs": true,

  // Controla el diseño para cuando un editor se divide en un grupo de editores para que sea vertical u horizontal.
  //  - vertical: Los editores se colocan de arriba abajo.
  //  - horizontal: Los editores se colocan de izquierda a derecha.
  "workbench.editor.splitInGroupLayout": "horizontal",

  // Controla si los grupos de editores pueden dividirse a partir de las operaciones de arrastrar y colocar al colocar un editor o archivo en los bordes del área del editor.
  "workbench.editor.splitOnDragAndDrop": true,

  // Controla el tamaño de los grupos de editores al dividirlos.
  //  - distribute: Divide todos los grupos de editores en partes iguales.
  //  - split: Divide el grupo de editor activo en partes iguales.
  "workbench.editor.splitSizing": "distribute",

  // Controla la posición de los botones de cierre de pestañas del editor o los deshabilita cuando se establece en "off". Este valor se omite cuando "#workbench.editor.showTabs#" está deshabilitado.
  "workbench.editor.tabCloseButton": "right",

  // Controla el dimensionamiento de las pestañas del editor. Este valor se omite cuando "#workbench.editor.showTabs#" está deshabilitado.
  //  - fit: Mantenga siempre un tamaño de pestaña suficientemente grande para mostrar la etiqueta del editor completa.
  //  - shrink: Permita que se reduzca el tamaño de las pestañas cuando el espacio disponible no es suficiente para mostrarlas todas a la vez.
  "workbench.editor.tabSizing": "fit",

  // Controla la altura de las barras de desplazamiento utilizadas para las pestañas y las rutas de navegación en el área de título del editor.
  //  - default: El tamaño predeterminado.
  //  - large: Aumenta el tamaño, por lo que se puede capturar más fácilmente con el mouse.
  "workbench.editor.titleScrollbarSizing": "default",

  // Controla si la sugerencia de texto sin título debe estar visible en el editor.
  "workbench.editor.untitled.hint": "text",

  // Controla el formato de la etiqueta para un editor sin título.
  //  - content: El nombre del archivo sin título se deriva del contenido de su primera línea a menos que tenga una ruta de acceso de archivo asociada. Se recurrirá al nombre en caso de que la línea esté vacía o no contenga caracteres de palabra.
  //  - name: El nombre del archivo sin título no se deriva del contenido del archivo.
  "workbench.editor.untitled.labelFormat": "content",

  // Controla si las tabulaciones deben ajustarse en varias líneas al superar el espacio disponible o si debe mostrarse una barra de desplazamiento en su lugar. Este valor se omite cuando `workbench.editor.showTabs` está deshabilitado.
  "workbench.editor.wrapTabs": false,

  // Configurar patrones glob a los editores (por ejemplo `"*.hex": "hexEditor.hexedit"`). Estos tienen prioridad sobre el comportamiento predeterminado.
  "workbench.editorAssociations": {},

  // Controla el tamaño mínimo de un archivo en MB antes de pedir confirmación al abrir en el editor. Tenga en cuenta que esta configuración puede no aplicarse a todos los entornos y tipos de editor.
  "workbench.editorLargeFileConfirmation": 1024,

  // Esta configuración está en desuso en favor de `workbench.cloudChanges.autoResume`.
  // 
  "workbench.editSessions.autoResume": null,

  // Esta configuración está en desuso en favor de `workbench.cloudChanges.continueOn`.
  // 
  "workbench.editSessions.continueOn": null,

  // Captura experimentos que se van a ejecutar desde un servicio en línea de Microsoft.
  "workbench.enableExperiments": true,

  // Controla si se van a almacenar automáticamente los cambios de trabajo disponibles en la nube para el área de trabajo actual. Esta configuración no tiene ningún efecto en la web.
  //  - onShutdown: Almacenar automáticamente los cambios de trabajo actuales en la nube al cerrar la ventana.
  //  - off: Nunca intente almacenar automáticamente los cambios de trabajo en la nube.
  "workbench.experimental.cloudChanges.autoStore": "off",

  // Controla si se deben exponer los cambios en la nube que coincidan parcialmente con la sesión actual.
  "workbench.experimental.cloudChanges.partialMatches.enabled": false,

  // Esta configuración está en desuso en favor de `workbench.experimental.cloudChanges.autoStore`.
  // 
  "workbench.experimental.editSessions.autoStore": null,

  // Esta configuración está en desuso en favor de `workbench.experimental.cloudChanges.partialMatches.enabled`.
  // 
  "workbench.experimental.editSessions.partialMatches.enabled": null,

  // Configure el elemento de apertura que se va a usar para los URI externos (http, https).
  "workbench.externalUriOpeners": {},

  // Controla el retardo en milisegundos tras el cual se muestra el texto al mantener el puntero para los elementos del área de trabajo (por ejemplo, ciertos elementos de vista de árbol proporcionados por una extensión). Puede que los elementos ya visibles requieran una actualización antes de reflejar este cambio de configuración.
  "workbench.hover.delay": 500,

  // Controla si el control de diseño se muestra en la barra de título personalizada. Esta configuración solo tiene efecto cuando `window.titleBarStyle` se establece en `custom`.
  "workbench.layoutControl.enabled": true,

  // Controla si el control de diseño de la barra de título personalizada se muestra como un solo botón de menú o con varios botones de alternancia de interfaz de usuario.
  //  - menu: Muestra un solo botón con una lista desplegable de opciones de diseño.
  //  - toggles: Muestra varios botones para alternar la visibilidad de los paneles y de la barra lateral.
  //  - both: Muestra la lista desplegable y los botones de alternancia.
  "workbench.layoutControl.type": "both",

  // Controla si el historial de los archivos locales está habilitado. Cuando se habilita, el contenido del archivo de un editor que se guarde se almacenará en una ubicación de copia de seguridad y se podrá restaurar o revisar el contenido más adelante. Cambiar esta configuración no tiene ningún efecto en las entradas del historial de archivos locales existentes.
  "workbench.localHistory.enabled": true,

  // Configure [patrones de glob](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) para excluir archivos del historial de archivos local. El cambio de esta configuración no afecta a las entradas existentes del historial de archivos locales.
  "workbench.localHistory.exclude": {},

  // Controla el número máximo de entradas del historial de archivos locales por archivo. Cuando el número de entradas del historial de archivos locales supera este número para un archivo, se descartarán las entradas más antiguas.
  "workbench.localHistory.maxFileEntries": 50,

  // Controla el tamaño máximo de un archivo (en KB) que se va a considerar para el historial local. Los archivos que sean más grandes no se agregarán al historial local de archivo. El cambio de esta configuración no tiene ningún efecto en las entradas del historial de archivos locales existentes.
  "workbench.localHistory.maxFileSize": 256,

  // Configure un intervalo en segundos durante el cual la última entrada del historial local de archivo se reemplazará por la entrada que se va a agregar. Esto ayuda a reducir el número total de entradas que se agregan, por ejemplo, cuando el guardado automático está habilitado. Esta configuración solo se aplica a las entradas que tienen el mismo origen. Cambiar esta configuración no tiene ningún efecto en las entradas del historial de archivos locales existentes.
  "workbench.localHistory.mergeWindow": 10,

  // Controla la ubicación predeterminada del panel (terminal, consola de depuración, salida, problemas) en un área de trabajo nueva. Puede mostrarse en la parte inferior, derecha o izquierda del área del editor.
  "workbench.panel.defaultLocation": "bottom",

  // Controla si el panel se abre maximizado. Puede abrirse maximizado siempre, nunca o abrirse en el último estado en el que se encontraba antes de cerrarse.
  //  - always: Maximice siempre el panel al abrirlo.
  //  - never: No maximice nunca el panel al abrirlo. El panel se abrirá sin maximizar.
  //  - preserve: Abra el panel en el estado en el que se encontraba antes de cerrarlo.
  "workbench.panel.opensMaximized": "preserve",

  // Controla si Quick Open debe cerrarse automáticamente cuando pierde el foco.
  "workbench.quickOpen.closeOnFocusLost": true,

  // Controla si debe restaurarse la última entrada escrita en Quick Open al abrirlo la próxima vez.
  "workbench.quickOpen.preserveInput": false,

  // Controla si el área de trabajo debe representarse con menos animaciones.
  //  - on: Representar siempre con movimiento reducido.
  //  - off: No representar con movimiento reducido
  //  - auto: Representación con movimiento reducido basado en la configuración del sistema operativo.
  "workbench.reduceMotion": "auto",

  // Controla el retraso, en milisegundos, en la obtención de comentarios mediante movimiento del mouse del área de arrastre entre vistas o editores.
  "workbench.sash.hoverDelay": 300,

  // Controla el tamaño del área de comentarios en píxeles del área de arrastre entre las vistas/editores. Establézcalo en un valor mayor si cree que es difícil cambiar el tamaño de las vistas con el mouse.
  "workbench.sash.size": 4,

  // Determina el editor de configuración que se va a usar de forma predeterminada.
  //  - ui: Use el editor de la interfaz de usuario de configuración.
  //  - json: Use el editor de archivos JSON.
  "workbench.settings.editor": "ui",

  // Controla si se va a habilitar el modo de búsqueda en lenguaje natural para la configuración. Un servicio en línea de Microsoft proporciona este tipo de búsqueda.
  "workbench.settings.enableNaturalLanguageSearch": true,

  // Controla si la configuración de apertura de enlaces de teclado también abre un editor que muestra todos los enlaces de teclado predeterminados.
  "workbench.settings.openDefaultKeybindings": false,

  // Controla si la configuración de apertura también abre un editor que muestra todos los valores predeterminados.
  "workbench.settings.openDefaultSettings": false,

  // Controla el comportamiento de la tabla de contenido del editor de configuración durante las búsquedas.
  //  - hide: Oculte la tabla de contenido durante la búsqueda.
  //  - filter: Filtre la tabla de contenido solamente por las categorías que tengan valores coincidentes. Al hacer clic en una categoría, los resultados se filtran por esta.
  "workbench.settings.settingsSearchTocBehavior": "filter",

  // Controla si se utiliza el editor de JSON de división al editar la configuración como JSON.
  "workbench.settings.useSplitJSON": false,

  // Controla la ubicación de la barra lateral principal y la barra de actividad. Pueden mostrarse a la izquierda o a la derecha del área de trabajo. La barra lateral secundaria se mostrará en el lado opuesto del área de trabajo.
  "workbench.sideBar.location": "left",

  // Controla qué editor se muestra al inicio, si no se restaura ninguno de la sesión anterior.
  //  - none: Iniciar sin un editor.
  //  - welcomePage: Abre la página principal, con contenido de ayuda para empezar a usar VS Code y las extensiones.
  //  - readme: Abra el archivo Léame cuando abra una carpeta que contenga uno, en caso contrario, vuelva a “welcomePage”. Nota: esta situación solo se observa en la configuración global y se omitirá si se establece en una configuración de área de trabajo o carpeta.
  //  - newUntitledFile: Abra un nuevo archivo de texto sin título (solo se aplica al abrir una ventana vacía).
  //  - welcomePageInEmptyWorkbench: Abrir la página principal cuando se abra un área de trabajo vacía.
  "workbench.startupEditor": "welcomePage",

  // Controla la visibilidad de la barra de estado en la parte inferior del área de trabajo.
  "workbench.statusBar.visible": true,

  // Si esta opción está habilitada, se muestran sugerencias de referencia cuando no hay ningún editor abierto.
  "workbench.tips.enabled": true,

  // Cuando está habilitado, aparecen solicitudes del dominio de confianza al abrir los vínculos en las áreas de trabajo de confianza.
  "workbench.trustedDomains.promptInTrustedWorkspace": false,

  // Controla la visibilidad de las acciones en el encabezado de la vista. Las acciones en el encabezado de la vista pueden ser siempre visibles, o solo cuando la vista es enfocada o apuntada.
  "workbench.view.alwaysShowHeaderActions": false,

  // Cuando está habilitada, la página de introducción tiene vínculos adicionales a tutoriales en vídeo.
  "workbench.welcomePage.experimental.videoTutorials": "off",

  // En desuso, use el elemento global `workbench.reduceMotion`.
  // Cuando está habilitado, reduce el movimiento en la página principal.
  "workbench.welcomePage.preferReducedMotion": false,

  // Cuando se habilita, se abre el tutorial de la extensión al momento de su instalación.
  "workbench.welcomePage.walkthroughs.openOnInstall": true

},
{
  // Si está establecido, se cambia automáticamente al tema de color preferido en función de la apariencia del sistema operativo. Si la apariencia del sistema operativo es oscura, se usa el tema especificado en "#workbench.preferredDarkColorTheme#"; si es clara, en "#workbench.preferredLightColorTheme#".
  "window.autoDetectColorScheme": false,

  // Si está habilitado, cambiará automáticamente al tema de alto contraste si el sistema operativo está usando un tema de alto contraste. El tema de alto contraste que se utilizará se especifica mediante `workbench.preferredHighContrastColorTheme#` y `#workbench.preferredHighContrastLightColorTheme`.
  "window.autoDetectHighContrast": true,

  // Controla si, al cerrar el último editor, debe cerrarse también la ventana. Esta configuración se aplica solo a ventanas que no muestran carpetas.
  "window.closeWhenEmpty": false,

  // Muestra el iniciador de comandos junto con el título de la ventana. Esta configuración solo tiene efecto cuando `window.titleBarStyle` se establece en `custom`.
  "window.commandCenter": false,

  // Controla si se muestra un cuadro de diálogo de confirmación antes de cerrar la ventana o salir de la aplicación.
  //  - always: Pedir siempre confirmación.
  //  - keyboardOnly: Pedir confirmación solo si se usó un enlace de teclado.
  //  - never: Nunca pedir confirmación explícitamente.
  "window.confirmBeforeClose": "never",

  // Controla si la barra de menús se enfocará pulsando la tecla Alt. Esta configuración no tiene ningún efecto para alternar la barra de menús con la tecla Alt.
  "window.customMenuBarAltFocus": true,

  // Ajustar la apariencia de las ventanas de cuadro de diálogo.
  "window.dialogStyle": "native",

  // Si está habilitada, esta configuración cerrará la ventana cuando se haga doble clic en el icono de aplicación de la barra de título. El icono no podrá arrastrar la ventana. Esta configuración solo es efectiva si `window.titleBarStyle` está establecido en `custom`.
  "window.doubleClickIconToClose": false,

  // Controla si los menús principales se pueden abrir a través de los accesos directos de la tecla Alt. La desactivación de las teclas de acceso permite vincular estos accesos directos de tecla Alt a los comandos del editor en su lugar.
  "window.enableMenuBarMnemonics": true,

  // Experimental: cuando se habilita, la ventana tendrá habilitado el modo de espacio aislado a través de la API de Electron.
  "window.experimental.sharedProcessUseUtilityProcess": false,

  // Experimental: cuando se habilita, la ventana tendrá habilitado el modo de espacio aislado a través de la API de Electron.
  "window.experimental.useSandbox": false,

  // Use los controles de ventana proporcionados por la plataforma en lugar de nuestros controles de ventana basados en HTML. Los cambios requieren un reinicio completo para aplicarse.
  "window.experimental.windowControlsOverlay.enabled": true,

  // Controlar la visibilidad de la barra de menús. Una configuración de “alternar” significa que la barra de menús está oculta y se mostrará con una sola pulsación de la tecla Alt. Una configuración de “compacto” moverá el menú a la barra lateral.
  //  - classic: El menú se muestra en la parte superior de la ventana y solo se oculta en el modo de pantalla completa.
  //  - visible: El menú está siempre visible en la parte superior de la ventana, incluso en el modo de pantalla completa.
  //  - toggle: El menú está oculto, pero puede mostrarse en la parte superior de la ventana con la tecla Alt.
  //  - hidden: El menú está siempre oculto.
  //  - compact: El menú se muestra como un botón compacto en la barra lateral. Este valor se ignora cuando `window.titleBarStyle` es `native`.
  "window.menuBarVisibility": "classic",

  // Controla las dimensiones de apertura de una nueva ventana cuando ya existe al menos una ventana abierta. Tenga en cuenta que esta configuración no afecta a la primera ventana abierta, que siempre se restaurará al tamaño y ubicación en las que se dejó antes de cerrarla
  //  - default: Abrir las nuevas ventanas en el centro de la pantalla.
  //  - inherit: Abrir las nuevas ventanas con la misma dimensión que la última activa.
  //  - offset: Abra nuevas ventanas con la misma dimensión que la última activa con una posición de desfase.
  //  - maximized: Abrir las nuevas ventanas maximizadas.
  //  - fullscreen: Abrir las nuevas ventanas en modo de pantalla completa.
  "window.newWindowDimensions": "default",

  // Controla si los archivos deben abrirse en una nueva ventana cuando se usa una línea de comandos o un cuadro de diálogo de archivo.
  // Tenga en cuenta que aún puede haber casos en los que este valor se ignore (por ejemplo, al usar la opción de la lí­nea de comandos `--new-window` o `--reuse-window`).
  //  - on: Los archivos se abrirán en una nueva ventana.
  //  - off: Los archivos se abrirán en la ventana con la carpeta de archivos abierta o en la última ventana activa.
  //  - default: Los archivos se abrirán en una ventana nueva, a menos que se seleccionen desde la aplicación (por ejemplo, mediante el menú Archivo)
  "window.openFilesInNewWindow": "off",

  // Controla si las carpetas deben abrirse en una ventana nueva o reemplazar la última ventana activa.
  // Tenga en cuenta que aún puede haber casos en los que este valor se ignore (por ejemplo, al usar la opción de la lí­nea de comandos "--new-window" o "--reuse-window"). 
  //  - on: Las carpetas se abrirán en una ventana nueva.
  //  - off: Las carpetas reemplazarán la última ventana activa.
  //  - default: Las carpetas se abrirán en una ventana nueva, a menos que se seleccione una carpeta desde la aplicación (por ejemplo, mediante el menú Archivo)
  "window.openFoldersInNewWindow": "default",

  // Controla si debe abrirse una ventana nueva vacía cuando se inicia una segunda instancia sin argumentos o si debe obtener el foco la última instancia en ejecución.
  // Tenga en cuenta que aún puede haber casos en los que este valor se ignore (por ejemplo, al usar la opción de la lí­nea de comandos "--new-window" o "--reuse-window"). 
  //  - on: Abra una ventana nueva vacía.
  //  - off: Aplique el foco a la última instancia en ejecución activa.
  "window.openWithoutArgumentsInNewWindow": "on",

  // Controla si una ventana se debe restaurar al modo de pantalla completa si se salió de ella en dicho modo.
  "window.restoreFullscreen": false,

  // Controla el modo en que se vuelven a abrir las ventanas después de iniciar por primera vez. Esta configuración no tiene efecto cuando la aplicación ya se está ejecutando.
  //  - preserve: Vuelva a abrir siempre todas las ventanas. Si se abre una carpeta o un área de trabajo (por ejemplo, desde la línea de comandos), se abre como ventana nueva, a menos que se hubiera abierto antes. Si los archivos se abren, se abrirán en una de las ventanas restauradas.
  //  - all: Volver a abrir todas las ventanas, a menos que se abra una carpeta, un área de trabajo o un archivo (por ejemplo, desde la línea de comandos).
  //  - folders: Volver a abrir todas las ventanas que tuvieran carpetas o áreas de trabajo abiertas, a menos que se abra una carpeta, un área de trabajo o un archivo (por ejemplo, desde la línea de comandos).
  //  - one: Volver a abrir la última ventana activa, a menos que se abra una carpeta, un área de trabajo o un archivo (por ejemplo, desde la línea de comandos).
  //  - none: No volver a abrir nunca una ventana. Si no se abre una carpeta o un área de trabajo (por ejemplo, desde la línea de comandos), aparecerá una ventana vacía.
  "window.restoreWindows": "all",

  // Controla el icono de ventana según el editor activo. Las variables se sustituyen según el contexto:
  // - `${activeEditorShort}`: el nombre de archivo (p. ej., myFile.txt).
  // - `${activeEditorMedium}`: la ruta de acceso de archivo relativa a la carpeta de área de trabajo (p. ej. myFolder/myFileFolder/myFile.txt)
  // - "${activeEditorLong}": la ruta de acceso completa del archivo (p. ej., /Users/Development/myFolder/myFileFolder/myFile.txt).
  // - `${activeFolderShort}`: el nombre de la carpeta que contiene el archivo (p. ej., myFileFolder).
  // - `${activeFolderMedium}`: la ruta de acceso de la carpeta que contiene el archivo, relativa a la carpeta del área de trabajo (p. ej., myFolder/myFileFolder).
  // - `${activeFolderLong}`: la ruta de acceso completa de la carpeta que contiene el archivo (p. ej., /Users/Development/myFolder/myFileFolder).
  // - `${folderName}`: nombre de la carpeta del área de trabajo que contiene el archivo (p. ej., myFolder).
  // - `${folderPath}`: ruta de acceso de archivo de la carpeta del área de trabajo que contiene el archivo (p. ej., /Users/Development/myFolder).
  // - `${rootName}`: nombre del área de trabajo con el nombre remoto opcional y el indicador de área de trabajo si procede (por ejemplo, myFolder, myRemoteFolder [SSH] o myWorkspace (Workspace)).
  // - '${rootNameShort}': nombre acortado del área de trabajo sin sufijos (por ejemplo, myFolder, myRemoteFolder o myWorkspace).
  // - "${rootPath}": ruta de acceso de archivo del área de trabajo o la carpeta abierta (por ejemplo, /Users/Development/myWorkspace).
  // - `${profileName}`: nombre del perfil en el que se abre el área de trabajo (por ejemplo, Ciencia de datos (perfil)). Se omite si se usa el perfil predeterminado.
  // - "${appName}": por ejemplo, VS Code.
  // - "${remoteName}": por ejemplo, SSH
  // - "${dirty}": un indicador de cuándo el editor activo tiene cambios sin guardar.
  // - `${separator}`: un separador condicional (" - ") que solo se muestra cuando está rodeado por variables con valores o texto estático.
  "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}",

  // Ajuste el aspecto de la barra de título de la ventana. En Linux y Windows, esta configuración también afecta a la aplicación y los aspectos del menú contextual. Los cambios requieren un reinicio completo para aplicarse.
  "window.titleBarStyle": "custom",

  // Separador utilizado por `window.title`.
  "window.titleSeparator": " - ",

  // Ajuste el nivel de zoom de la ventana. El tamaño original es 0 y cada incremento (por ejemplo, 1) o disminución (por ejemplo, -1) representa una aplicación de zoom un 20 % más grande o más pequeño. También puede especificar decimales para ajustar el nivel de zoom con una granularidad más precisa.
  "window.zoomLevel": 0

},
{
  // Configure asociaciones de archivo para los lenguajes (por ejemplo, "*.extension": "html"). Estas tienen prioridad sobre las asociaciones predeterminadas de los lenguajes instalados.
  "files.associations": {},

  // Cuando se habilita, el editor intentará adivinar la codificación del juego de caracteres al abrir los archivos. Este valor también se puede configurar por idioma. Tenga en cuenta que en la búsqueda de texto no se respeta. Solo se respeta `files.encoding`.
  "files.autoGuessEncoding": false,

  // Controla el [guardado automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) de los editores que tienen cambios no guardados.
  //  - off: Un editor con cambios nunca se guarda automáticamente.
  //  - afterDelay: Un editor con cambios se guarda automáticamente después de la configuración "#files.autoSaveDelay#".
  //  - onFocusChange: Un editor con cambios se guarda automáticamente cuando el editor pierde el foco.
  //  - onWindowChange: Un editor con cambios se guarda automáticamente cuando la ventana pierde el foco.
  "files.autoSave": "off",

  // Controla el retraso en milisegundos después del cual un editor con cambios sin guardar se guarda automáticamente. Solo se aplica cuando '#files.autoSave#' está establecido en "afterDelay".
  "files.autoSaveDelay": 1000,

  // El identificador de idioma predeterminado que se asigna a los archivos nuevos. Si se configura en "${activeEditorLanguage}", se usará el identificador de idioma del editor de texto activo actualmente, si existe.
  "files.defaultLanguage": "",

  // Mueve archivos y carpetas a la papelera del sistema operativo (papelera de reciclaje en Windows) al eliminar. Si desactiva esta opción, los archivos y carpetas se eliminarán permanentemente.
  "files.enableTrash": true,

  // La codificación predeterminada del juego de caracteres que debe utilizarse al leer y escribir archivos. Este valor puede configurarse también por idioma.
  //  - utf8: UTF-8
  //  - utf8bom: UTF-8 with BOM
  //  - utf16le: UTF-16 LE
  //  - utf16be: UTF-16 BE
  //  - windows1252: Western (Windows 1252)
  //  - iso88591: Western (ISO 8859-1)
  //  - iso88593: Western (ISO 8859-3)
  //  - iso885915: Western (ISO 8859-15)
  //  - macroman: Western (Mac Roman)
  //  - cp437: DOS (CP 437)
  //  - windows1256: Arabic (Windows 1256)
  //  - iso88596: Arabic (ISO 8859-6)
  //  - windows1257: Baltic (Windows 1257)
  //  - iso88594: Baltic (ISO 8859-4)
  //  - iso885914: Celtic (ISO 8859-14)
  //  - windows1250: Central European (Windows 1250)
  //  - iso88592: Central European (ISO 8859-2)
  //  - cp852: Central European (CP 852)
  //  - windows1251: Cyrillic (Windows 1251)
  //  - cp866: Cyrillic (CP 866)
  //  - iso88595: Cyrillic (ISO 8859-5)
  //  - koi8r: Cyrillic (KOI8-R)
  //  - koi8u: Cyrillic (KOI8-U)
  //  - iso885913: Estonian (ISO 8859-13)
  //  - windows1253: Greek (Windows 1253)
  //  - iso88597: Greek (ISO 8859-7)
  //  - windows1255: Hebrew (Windows 1255)
  //  - iso88598: Hebrew (ISO 8859-8)
  //  - iso885910: Nordic (ISO 8859-10)
  //  - iso885916: Romanian (ISO 8859-16)
  //  - windows1254: Turkish (Windows 1254)
  //  - iso88599: Turkish (ISO 8859-9)
  //  - windows1258: Vietnamese (Windows 1258)
  //  - gbk: Simplified Chinese (GBK)
  //  - gb18030: Simplified Chinese (GB18030)
  //  - cp950: Traditional Chinese (Big5)
  //  - big5hkscs: Traditional Chinese (Big5-HKSCS)
  //  - shiftjis: Japanese (Shift JIS)
  //  - eucjp: Japanese (EUC-JP)
  //  - euckr: Korean (EUC-KR)
  //  - windows874: Thai (Windows 874)
  //  - iso885911: Latin/Thai (ISO 8859-11)
  //  - koi8ru: Cyrillic (KOI8-RU)
  //  - koi8t: Tajik (KOI8-T)
  //  - gb2312: Simplified Chinese (GB 2312)
  //  - cp865: Nordic DOS (CP 865)
  //  - cp850: Western European DOS (CP 850)
  "files.encoding": "utf8",

  // Carácter predeterminado de final de línea.
  //  - \n: LF
  //  - \r\n: CRLF
  //  - auto: Utiliza el carácter de final de línea específico del sistema operativo.
  "files.eol": "auto",

  // Configure [patrones globales](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) para excluir archivos y carpetas. Por ejemplo, el Explorador de archivos decide qué archivos y carpetas se mostrarán u ocultarán en función de esta configuración. Consulte la configuración "#search.exclude#" para definir los elementos excluidos específicos de la búsqueda. Consulte la configuración "#explorer.excludeGitIgnore#" para omitir los archivos basados en ".gitignore".
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true
  },

  // Cuando se habilita, el monitor de archivo se iniciará mediante la nueva API UtilityProcess Electron.
  "files.experimental.watcherUseUtilityProcess": false,

  // Controla si los archivos no guardados se recuerdan entre las sesiones, lo que permite omitir el mensaje para guardar al salir del editor.
  //  - off: Deshabilite la salida rápida. Se mostrará un mensaje al intentar cerrar una ventana con editores que tienen cambios sin guardar.
  //  - onExit: La salida rápida se desencadenará cuando se cierre la última ventana en Windows/Linux o cuando se desencadene el comando "workbench.action.quit" (paleta de comandos, enlace de teclado, menú). Todas las ventanas sin carpetas abiertas se restaurarán en el próximo inicio. Se puede acceder a una lista de las ventanas abiertas previamente con archivos no guardados a través de "Archivo > Abrir recientes > Más...".
  //  - onExitAndWindowClose: La salida rápida se desencadenará cuando se cierre la última ventana en Windows/Linux o cuando se desencadene el comando "workbench.action.quit" (paleta de comandos, enlace de teclado, menú), y también para las ventanas con una carpeta abierta, con independencia de si es la última ventana. Todas las ventanas sin carpetas abiertas se restaurarán en el próximo inicio. Se puede acceder a una lista de las ventanas abiertas previamente con archivos no guardados a través de "Archivo > Abrir recientes > Más...".
  "files.hotExit": "onExit",

  // Si se habilita, inserte una nueva línea final al final del archivo cuando lo guarde.
  "files.insertFinalNewline": false,

  // Controla la memoria disponible para VS Code después de reiniciar cuando se intentan abrir archivos grandes. Tiene el mismo efecto que si se especifica "--max-memory=NEWSIZE" en la línea de comandos.
  "files.maxMemoryForLargeFilesMB": 4096,

  // Tiempo de espera en milisegundos tras el cual se cancelan los participantes para crear, cambiar el nombre y borrar archivos. Use `0` para deshabilitar a los participantes.
  "files.participants.timeout": 60000,

  // Controla si los archivos que formaron parte de una refactorización se guardan automáticamente
  "files.refactoring.autoSave": true,

  // Restaure la pila de deshacer cuando se vuelva a abrir un archivo.
  "files.restoreUndoStack": true,

  // Puede producirse un conflicto al guardar si un archivo se guarda en un disco que se cambió mientras por otro programa. Para evitar la pérdida de datos, se pide al usuario que compare los cambios en el editor con la versión en el disco. Esta configuración solo se debe cambiar si se producen errores de conflicto de guardado con frecuencia, y puede provocar la pérdida de datos si se utiliza sin precaución.
  //  - askUser: Se negará a guardar y pedirá que se resuelva el conflicto de guardado manualmente.
  //  - overwriteFileOnDisk: Resolverá el conflicto de guardado sobrescribiendo el archivo en el disco con los cambios en el editor.
  "files.saveConflictResolution": "askUser",

  // Habilita el cuadro de diálogo de archivo simple. El cuadro de diálogo de archivo simple reemplaza al cuadro de diálogo de archivo del sistema cuando está habilitado.
  "files.simpleDialog.enable": false,

  // Cuando se habilita, recorta todas las nuevas líneas después de la última nueva línea al final del archivo al guardarlo
  "files.trimFinalNewlines": false,

  // Si se habilita, se recortará el espacio final cuando se guarde un archivo.
  "files.trimTrailingWhitespace": false,

  // Configure las rutas de acceso o patrones globales para excluirlos de la inspección de archivos. Las rutas de acceso pueden ser relativas a la carpeta inspeccionada o absolutas. Los patrones globales coinciden en relación a la carpeta inspeccionada. Cuando observe que el proceso de supervisión de archivos consume mucha CPU, asegúrese de excluir las carpetas grandes que sean de menor interés (como las carpetas de salida de la compilación).
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.hg/store/**": true
  },

  // Configure rutas de acceso adicionales para inspeccionar los cambios dentro del área de trabajo. De forma predeterminada, todas las carpetas del área de trabajo se verán de forma recursiva, excepto las carpetas que son vínculos simbólicos. Puede agregar explícitamente rutas de acceso absolutas o relativas para admitir la visualización de carpetas que son vínculos simbólicos. Las rutas de acceso relativas se resolverán en una ruta de acceso absoluta mediante el área de trabajo abierta actualmente.
  "files.watcherInclude": []

},
{
  // Controla el tamaño de fuente (en píxeles) del teclado de modo de presentación de pantalla.
  "screencastMode.fontSize": 56,

  // Controla el tiempo (en milisegundos) que se muestra la superposición del teclado en el modo de presentación de pantalla.
  "screencastMode.keyboardOverlayTimeout": 800,

  // Controla lo que se muestra en la superposición de teclado al mostrar accesos directos.
  //  - keys: Teclas.
  //  - command: Título del comando.
  //  - commandWithGroup: Título del comando precedido por su grupo.
  //  - commandAndKeys: Título y teclas del comando.
  //  - commandWithGroupAndKeys: Título y teclas del comando con el comando precedido por su grupo.
  "screencastMode.keyboardShortcutsFormat": "commandAndKeys",

  // Controla el color en notación hexadecimal (#RGB, #RGBA, #RRGGBB o #RRGGBBAA) del indicador del mouse en el modo de presentación en pantalla.
  "screencastMode.mouseIndicatorColor": "#FF0000",

  // Controla el tamaño (en píxeles) del indicador de mouse en el modo de presentación de pantalla.
  "screencastMode.mouseIndicatorSize": 20,

  // Mostrar solo los métodos abreviados de teclado en el modo de presentación en pantalla (no incluir nombres de acción).
  "screencastMode.onlyKeyboardShortcuts": false,

  // Controla el desplazamiento vertical de la superposición del modo de presentación en pantalla desde la parte inferior como un porcentaje de la altura del área de trabajo.
  "screencastMode.verticalOffset": 20

},
{
  // Controla si al activar el modo zen se centra también el diseño.
  "zenMode.centerLayout": true,

  // Controla si al activar el modo zen se pone también el área de trabajo en modo de pantalla completa.
  "zenMode.fullScreen": true,

  // Controla si al activar el modo zen se oculta también la barra de actividades en la parte izquierda o derecha del área de trabajo.
  "zenMode.hideActivityBar": true,

  // Controla si encender modo Zen esconde también los números de línea del editor.
  "zenMode.hideLineNumbers": true,

  // Controla si la activación del modo zen también oculta la barra de estado en la parte inferior del área de trabajo.
  "zenMode.hideStatusBar": true,

  // Controla si la activación del modo zen también oculta las pestañas del área de trabajo.
  "zenMode.hideTabs": true,

  // Controla si una ventana debe restaurarse a modo zen si se cerró en modo zen.
  "zenMode.restore": true,

  // Controla si las notificaciones del modo no molestar deben estar habilitadas en modo zen. Si es true, solo se mostrarán las notificaciones de error.
  "zenMode.silentNotifications": true

},
{
  // Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.currentLine.dateFormat": null,

  // Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window
  "gitlens.currentLine.enabled": true,

  // Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.currentLine.dateFormat` setting
  "gitlens.currentLine.format": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",

  // Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the current line blame annotation. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.currentLine.pullRequests.enabled": true,

  // Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `gitlens.hovers.currentLine.over` to `line` to enable the hovers to show anywhere over the line.
  "gitlens.currentLine.scrollable": true,

  // Specifies the uncommitted changes format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.currentLine.dateFormat` setting.
  // 
  // **NOTE**: Setting this to an empty string will disable current line blame annotations for uncommitted changes.
  "gitlens.currentLine.uncommittedChangesFormat": null

},
{
  // Controla si el explorador debe mostrar y seleccionar automáticamente los archivos al abrirlos.
  //  - true: Los archivos se mostrarán y seleccionarán.
  //  - false: Los archivos no se mostrarán ni seleccionarán.
  //  - focusNoScroll: Los archivos no se desplazarán a la vista, pero mantendrán el foco.
  "explorer.autoReveal": true,

  // Configure patrones globales para excluir archivos y carpetas para que no se muestren ni seleccionen en el Explorador cuando se abren. Lea más sobre los patrones globales [aquí](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
  "explorer.autoRevealExclude": {
    "**/node_modules": true,
    "**/bower_components": true
  },

  // Controla si el explorador debe representar carpetas de forma compacta. En este tipo de formulario, las carpetas secundarias individuales se comprimirán en un elemento de árbol combinado. Es útil para estructuras de paquetes Java, por ejemplo.
  "explorer.compactFolders": true,

  // Controla si el explorador debe pedir confirmación al borrar un archivo a través de la papelera.
  "explorer.confirmDelete": true,

  // Controla si el explorador debe pedir confirmación para mover archivos y carpetas mediante la acción de arrastrar y colocar.
  "explorer.confirmDragAndDrop": true,

  // Controla si el Explorador debe pedir confirmación al deshacer.
  //  - verbose: El Explorador le preguntará antes de todas las operaciones de deshacer.
  //  - default: El Explorador preguntará antes de las operaciones destructivas de deshacer.
  //  - light: El Explorador no preguntará antes de las operaciones de deshacer cuando esté enfocado.
  "explorer.confirmUndo": "default",

  // Carácter de separación de ruta utilizado cuando se copian rutas de archivo relativas.
  //  - /: Usar la barra diagonal como carácter de separación de ruta de acceso.
  //  - \: Usar barra diagonal inversa como carácter de separación de ruta de acceso.
  //  - auto: Usa un carácter de separación de ruta de acceso específico del sistema operativo.
  "explorer.copyRelativePathSeparator": "auto",

  // Controla si las decoraciones de archivo deben usar distintivos.
  "explorer.decorations.badges": true,

  // Controla si las decoraciones de archivo deben usar colores. 
  "explorer.decorations.colors": true,

  // Controla si el explorador debe permitir mover archivos y carpetas mediante la acción de arrastrar y colocar. Esta configuración solo afecta a la funcionalidad de arrastrar y colocar desde dentro del explorador.
  "explorer.enableDragAndDrop": true,

  // Controla si el Explorador debe permitir deshacer las operaciones con archivos y carpetas.
  "explorer.enableUndo": true,

  // Controla si las entradas en .gitignore deben ser analizadas y excluidas del Explorador. Similar a `files.exclude`.
  "explorer.excludeGitIgnore": false,

  // Controla si el Explorador debe expandir las áreas de trabajo multi-raíz que contienen una sola carpeta durante la inicialización
  "explorer.expandSingleFolderWorkspaces": true,

  // Controla si el anidamiento de archivos está activado en el Explorador. El anidamiento de archivos permite que los archivos relacionados en un directorio se agrupen visualmente bajo un único archivo principal.
  "explorer.fileNesting.enabled": false,

  // Controla si los anidamientos de archivos se expanden automáticamente. `explorer.fileNesting.enabled` debe estar definido para que surta efecto.
  "explorer.fileNesting.expand": true,

  // Controla el anidamiento de los archivos en el Explorador. `explorer.fileNesting.enabled` debe ser establecido para que esto tenga efecto. Each __Item__ representa un patrón principal y puede contener un único carácter "*" que coincide con cualquier cadena. Each __Value__ representa una lista separada por comas de los patrones secundarios que deben mostrarse anidados bajo un principal determinado. Los patrones secundarios pueden contener varios tokens especiales:
  // - "${captura}": Coincide con el valor resuelto del "*" del patrón principal
  // - "${basename}": Coincide con el nombre base del archivo principal, el "archivo" en "file.ts".
  // - "${extname}": Coincide con la extensión del archivo principal, el "ts" en "file.ts".
  // - "${dirname}": Coincide con el nombre del directorio del archivo principal, el "src" en "src/file.ts"
  // - "*":  Coincide con cualquier cadena, solo puede utilizarse una vez por patrón secundario
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
  },

  // Controla qué estrategia de nomenclatura se usa cuando se da un nuevo nombre a un elemento del Explorador duplicado al pegar.
  //  - simple: Agrega la palabra "copia" al final del nombre potencialmente duplicado seguida de un número.
  //  - smart: Agrega un número al final del nombre duplicado. Si algún número ya forma parte del nombre, intenta aumentar ese número.
  //  - disabled: Deshabilita la nomenclatura incremental. Si existen dos archivos con el mismo nombre, se le pedirá que sobrescriba el archivo existente.
  "explorer.incrementalNaming": "simple",

  // Número mínimo de ranuras de editores que se muestran en el panel Abrir editores. Si se establece en 0, el panel Abrir editores cambiará de tamaño dinámicamente en función del número de editores.
  "explorer.openEditors.minVisible": 0,

  // Controla el criterio de ordenación de los editores en el panel Editores abiertos.
  //  - editorOrder: Los editores se disponen en el mismo orden en el que se muestran las pestañas del editor.
  //  - alphabetical: Los editores se ordenan alfabéticamente por nombre de pestaña dentro de cada grupo de editores.
  //  - fullPath: Los editores se ordenan alfabéticamente por ruta de acceso completa dentro de cada grupo de editores.
  "explorer.openEditors.sortOrder": "editorOrder",

  // Número máximo de editores que se muestran en el panel Abrir editores. Si se establece en 0, se oculta dicho panel.
  "explorer.openEditors.visible": 9,

  // Controla la ordenación basada en propiedades de archivos y carpetas en el explorador. Cuando '#explorer.fileNesting.enabled#' está habilitado, también controla la ordenación de los archivos anidados.
  //  - default: Los archivos y carpetas se ordenan por su nombre. Las carpetas se muestran antes que los archivos.
  //  - mixed: Los archivos y las carpetas se clasifican por su nombre. Los archivos se entrelazan con las carpetas.
  //  - filesFirst: Los archivos y carpetas se ordenan por su nombre. Los archivos se muestran antes que las carpetas.
  //  - type: Los archivos y carpetas se agrupan por tipo de extensión y luego se ordenan por sus nombres. Las carpetas se muestran antes que los archivos.
  //  - modified: Los archivos y las carpetas se clasifican por la última fecha de modificación en orden descendente. Las carpetas se muestran antes que los archivos.
  //  - foldersNestsFiles: Los archivos y carpetas se ordenan por sus nombres. Las carpetas se muestran antes que los archivos. Los archivos con elementos secundarios anidados se muestran antes que otros archivos.
  "explorer.sortOrder": "default",

  // Controla la ordenación lexicográfica de los nombres de archivos y carpetas en el Explorador.
  //  - default: Los nombres en mayúsculas y minúsculas se mezclan.
  //  - upper: Los nombres en mayúsculas se agrupan antes de los nombres en minúsculas.
  //  - lower: Los nombres en minúscula se agrupan antes de los nombres en mayúscula.
  //  - unicode: Los nombres se clasifican en orden Unicode.
  "explorer.sortOrderLexicographicOptions": "default"

},
{
  // Specifies the command to be executed when an _authors_ CodeLens is clicked
  //  - false: Disables click interaction
  //  - gitlens.toggleFileBlame: Toggles file blame
  //  - gitlens.toggleFileHeatmap: Toggles file heatmap
  //  - gitlens.toggleFileChanges: Toggles file changes since before the commit
  //  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
  //  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit
  //  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
  //  - gitlens.showCommitsInView: Searches for commits within the range
  //  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
  //  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
  //  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
  //  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
  //  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
  //  - gitlens.copyRemoteCommitUrl: Copies the remote commit URL to the clipboard (when available)
  //  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
  //  - gitlens.copyRemoteFileUrl: Copies the remote file URL to the clipboard (when available)
  "gitlens.codeLens.authors.command": "gitlens.toggleFileBlame",

  // Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)
  "gitlens.codeLens.authors.enabled": true,

  // Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.codeLens.dateFormat": null,

  // Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window
  "gitlens.codeLens.enabled": true,

  // Specifies whether to provide any Git CodeLens on symbols that span only a single line
  "gitlens.codeLens.includeSingleLineSymbols": false,

  // Specifies the command to be executed when a _recent change_ CodeLens is clicked
  //  - false: Disables click interaction
  //  - gitlens.toggleFileBlame: Toggles file blame
  //  - gitlens.toggleFileHeatmap: Toggles file heatmap
  //  - gitlens.toggleFileChanges: Toggles file changes since before the commit
  //  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
  //  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit
  //  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
  //  - gitlens.showCommitsInView: Shows the commit details
  //  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
  //  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
  //  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
  //  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
  //  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
  //  - gitlens.copyRemoteCommitUrl: Copies the remote commit URL to the clipboard (when available)
  //  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
  //  - gitlens.copyRemoteFileUrl: Copies the remote file URL to the clipboard (when available)
  "gitlens.codeLens.recentChange.command": "gitlens.showQuickCommitFileDetails",

  // Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block
  "gitlens.codeLens.recentChange.enabled": true,

  // Specifies where Git CodeLens will be shown in the document
  //  - document: Adds CodeLens at the top of the document
  //  - containers: Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)
  //  - blocks: Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines
  "gitlens.codeLens.scopes": [
    "document",
    "containers"
  ],

  // Deprecated. Use the per-language `gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes` settings instead
  // 
  "gitlens.codeLens.scopesByLanguage": null,

  // Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`
  "gitlens.codeLens.symbolScopes": [],

  // Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes
  "gitlens.strings.codeLens.unsavedChanges.authorsOnly": "$(ellipsis)",

  // Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes
  "gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": "$(ellipsis)",

  // Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes
  "gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": "$(ellipsis)"

},
{
  // Specifies the blame alignment in the status bar
  //  - left: Aligns to the left
  //  - right: Aligns to the right
  "gitlens.statusBar.alignment": "right",

  // Specifies the command to be executed when the blame status bar item is clicked
  //  - gitlens.toggleFileBlame: Toggles file blame
  //  - gitlens.toggleFileHeatmap: Toggles file heatmap
  //  - gitlens.toggleFileChanges: Toggles file changes since before the commit
  //  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
  //  - gitlens.toggleCodeLens: Toggles Git CodeLens
  //  - gitlens.diffWithPrevious: Compares the current line commit with the previous
  //  - gitlens.diffWithWorking: Compares the current line commit with the working tree
  //  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
  //  - gitlens.showCommitsInView: Shows the commit details
  //  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
  //  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
  //  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
  //  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
  //  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
  //  - gitlens.copyRemoteCommitUrl: Copies the remote commit URL to the clipboard (when available)
  //  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
  //  - gitlens.copyRemoteFileUrl: Copies the remote file URL to the clipboard (when available)
  "gitlens.statusBar.command": "gitlens.showQuickCommitDetails",

  // Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.statusBar.dateFormat": null,

  // Specifies whether to provide blame information in the status bar
  "gitlens.statusBar.enabled": true,

  // Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.statusBar.dateFormat` setting
  "gitlens.statusBar.format": "${author}, ${agoOrDate}${' via 'pullRequest}",

  // Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.statusBar.pullRequests.enabled": true,

  // Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar "flashing"
  "gitlens.statusBar.reduceFlicker": true,

  // Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.statusBar.tooltipFormat": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}"

},
{
  // Controla el posicionamiento de la actionbar en las filas en la vista de búsqueda.
  //  - auto: Posicione el actionbar a la derecha cuando la vista de búsqueda es estrecha, e inmediatamente después del contenido cuando la vista de búsqueda es amplia.
  //  - right: Posicionar siempre el actionbar a la derecha.
  "search.actionsPosition": "right",

  // Controla si los resultados de la búsqueda estarán contraídos o expandidos.
  //  - auto: Los archivos con menos de 10 resultados se expanden. El resto están colapsados.
  //  - alwaysCollapse
  //  - alwaysExpand
  "search.collapseResults": "alwaysExpand",

  // Controla si las decoraciones de archivo deben usar distintivos.
  "search.decorations.badges": true,

  // Controla si las decoraciones de archivo deben usar colores.
  "search.decorations.colors": true,

  // Controla el modo de vista de resultados de búsqueda predeterminado.
  //  - tree: Muestra los resultados de la búsqueda como un árbol.
  //  - list: Muestra los resultados de la búsqueda como una lista.
  "search.defaultViewMode": "list",

  // Configure [patrones globales](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) para excluir archivos y carpetas en búsquedas de texto completo y abrir los patrones de uso rápido. Hereda todos los patrones globales de la configuración "#files.exclude".
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true
  },

  // Controla si se va a usar la búsqueda de cuaderno experimental en la búsqueda global. Actualice la búsqueda de cambios en esta configuración para que surta efecto.
  "search.experimental.notebookSearch": false,

  // Controla si debe seguir enlaces simbólicos durante la búsqueda.
  "search.followSymlinks": true,

  // Este ajuste está obsoleto. En su lugar, puede arrastrar el icono de búsqueda a una nueva ubicación.
  // Controla si la búsqueda se muestra como una vista en la barra lateral o como un panel en el área de paneles para disponer de más espacio horizontal.
  "search.location": "sidebar",

  // La caché de búsqueda se mantiene en el host de extensiones, el cual nunca se cierra, por lo que esta configuración ya no es necesaria.
  // Cuando está habilitado, el proceso de servicio de búsqueda se mantendrá habilitado en lugar de cerrarse después de una hora de inactividad. Esto mantendrá la caché de búsqueda de archivos en la memoria.
  "search.maintainFileSearchCache": false,

  // Controla el número máximo de resultados de búsqueda; se puede establecer en "null" (vacío) para devolver resultados ilimitados.
  "search.maxResults": 20000,

  // Controla dónde se producen las nuevas operaciones “Buscar en archivos” y “Buscar en carpeta”: en la vista de búsqueda o en un editor de búsqueda.
  //  - view: Busca en la vista de búsqueda, ya sea en el panel o en las barras laterales.
  //  - reuseEditor: Busca en un editor de búsqueda existente si está presente; de lo contrario, en un editor de búsqueda nuevo.
  //  - newEditor: Busca en un editor de búsqueda nuevo.
  "search.mode": "view",

  // Controla el orden de clasificación del historial del editor en apertura rápida al filtrar.
  //  - default: Las entradas de historial se ordenan por pertinencia en función del valor de filtro utilizado. Las entradas más pertinentes aparecen primero.
  //  - recency: Las entradas de historial se ordenan por uso reciente. Las entradas abiertas más recientemente aparecen primero.
  "search.quickOpen.history.filterSortOrder": "default",

  // Indica si se incluyen resultados de archivos abiertos recientemente en los resultados de archivos de Quick Open.
  "search.quickOpen.includeHistory": true,

  // Indica si se incluyen resultados de una búsqueda global de símbolos en los resultados de archivos de Quick Open.
  "search.quickOpen.includeSymbols": false,

  // Número predeterminado de líneas de contexto circundantes que se van a usar al crear editores de búsqueda. Si se utiliza "#search. searchEditor.reusePriorSearchConfiguration#", se puede establecer en "null" (vacío) para usar la configuración del editor de búsqueda anterior.
  "search.searchEditor.defaultNumberOfContextLines": 1,

  // Configure el efecto de hacer doble clic en un resultado en un editor de búsqueda.
  //  - selectWord: Al hacer doble clic, se selecciona la palabra debajo del cursor.
  //  - goToLocation: Al hacer doble clic, se abre el resultado en el grupo de editor activo.
  //  - openLocationToSide: Al hacer doble clic, se abre el resultado en el grupo de editores, creando uno si aún no existe.
  "search.searchEditor.doubleClickBehaviour": "goToLocation",

  // Cuando está habilitado, los nuevos editores de búsqueda reutilizarán los elementos de inclusión, los elementos de exclusión y las marcas del editor de búsqueda abierto anteriormente.
  "search.searchEditor.reusePriorSearchConfiguration": false,

  // Busque todos los archivos a medida que escribe.
  "search.searchOnType": true,

  // Cuando `search.searchOnType#` está habilitado, controla el tiempo de espera en milisegundos entre un carácter que se escribe y el inicio de la búsqueda. No tiene ningún efecto cuando `#search.searchOnType` está deshabilitado.
  "search.searchOnTypeDebouncePeriod": 300,

  // Actualiza la consulta de búsqueda al texto seleccionado del editor al enfocar la vista de búsqueda. Esto ocurre al hacer clic o al desencadenar el comando "workbench.views.search.focus".
  "search.seedOnFocus": false,

  // Habilite la búsqueda de propagación a partir de la palabra más cercana al cursor cuando el editor activo no tiene ninguna selección.
  "search.seedWithNearestWord": false,

  // Controla si deben mostrarse los números de línea en los resultados de la búsqueda.
  "search.showLineNumbers": false,

  // Buscar sin distinción de mayúsculas y minúsculas si el patrón es todo en minúsculas; de lo contrario, buscar con distinción de mayúsculas y minúsculas.
  "search.smartCase": false,

  // Controla el orden de los resultados de búsqueda.
  //  - default: Los resultados se ordenan por nombre de carpeta y archivo, en orden alfabético.
  //  - fileNames: Los resultados estan ordenados alfabéticamente por nombres de archivo, ignorando el orden de las carpetas.
  //  - type: Los resultados se ordenan por extensiones de archivo, en orden alfabético.
  //  - modified: Los resultados se ordenan por la última fecha de modificación del archivo, en orden descendente.
  //  - countDescending: Los resultados se ordenan de forma descendente por conteo de archivos.
  //  - countAscending: Los resultados se ordenan por recuento por archivo, en orden ascendente.
  "search.sortOrder": "default",

  // Controla si se debe usar el archivo gitignore global (por ejemplo, desde "$HOME/.config/git/ignore") al buscar archivos. Requiere que se habilite '#search.useIgnoreFiles#'.
  "search.useGlobalIgnoreFiles": false,

  // Controla si se deben usar los archivos ".gitignore" e ".ignore" al buscar archivos.
  "search.useIgnoreFiles": true,

  // Controle si se deben usar los archivos globales ".gitignore" e ".ignore" en los directorios primarios al buscar archivos. Requiere que se habilite "#search.useIgnoreFiles#".
  "search.useParentIgnoreFiles": false,

  // En desuso. Se usará PCRE2 automáticamente al utilizar características de regex que solo se admiten en PCRE2.
  // Si se utiliza el motor de expresión regular PCRE2 en la búsqueda de texto. Esto permite utilizar algunas características avanzadas de regex como la búsqueda anticipada y las referencias inversas. Sin embargo, no todas las características de PCRE2 son compatibles: solo las características que también admite JavaScript.
  "search.usePCRE2": false,

  // Controla si debe abrirse la vista previa de reemplazo cuando se selecciona o reemplaza una coincidencia.
  "search.useReplacePreview": true,

  // En desuso. Considere la utilización de "search.usePCRE2" para admitir la característica de expresiones regulares avanzadas.
  // Esta opción están en desuso y ahora se utiliza "search.usePCRE2".
  "search.useRipgrep": true

},
{
  // Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations
  "gitlens.hovers.annotations.changes": true,

  // Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations
  "gitlens.hovers.annotations.details": true,

  // Specifies whether to provide any hovers when showing blame annotations
  "gitlens.hovers.annotations.enabled": true,

  // Specifies when to trigger hovers when showing blame annotations
  //  - annotation: Only shown when hovering over the line annotation
  //  - line: Shown when hovering anywhere over the line
  "gitlens.hovers.annotations.over": "line",

  // Specifies whether to automatically link external resources in commit messages
  "gitlens.hovers.autolinks.enabled": true,

  // Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.hovers.autolinks.enhanced": true,

  // Specifies whether to show avatar images in hovers
  "gitlens.hovers.avatars": true,

  // Specifies the size of the avatar images in hovers
  "gitlens.hovers.avatarSize": 32,

  // Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover
  //  - line: Shows only the changes to the line
  //  - hunk: Shows the set of related changes
  "gitlens.hovers.changesDiff": "line",

  // Specifies whether to provide a _changes (diff)_ hover for the current line
  "gitlens.hovers.currentLine.changes": true,

  // Specifies whether to provide a _commit details_ hover for the current line
  "gitlens.hovers.currentLine.details": true,

  // Specifies whether to provide any hovers for the current line
  "gitlens.hovers.currentLine.enabled": true,

  // Specifies when to trigger hovers for the current line
  //  - annotation: Only shown when hovering over the line annotation
  //  - line: Shown when hovering anywhere over the line
  "gitlens.hovers.currentLine.over": "annotation",

  // Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.hovers.detailsMarkdownFormat": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",

  // Specifies whether to provide any hovers
  "gitlens.hovers.enabled": true,

  // Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.hovers.pullRequests.enabled": true

},
{
  // Este valor está en desuso, use "update.mode" en su lugar.
  // Configure si desea recibir actualizaciones automáticas. Requiere un reinicio después del cambio. Las actualizaciones se obtienen de un servicio en línea de Microsoft.
  "update.channel": "default",

  // Habilítelo para descargar e instalar nuevas versiones de VS Code en segundo plano en Windows.
  "update.enableWindowsBackgroundUpdates": true,

  // Configure si desea recibir actualizaciones automáticas. Requiere un reinicio después del cambio. Las actualizaciones se obtienen de un servicio en línea de Microsoft.
  //  - none: Desactivar las actualizaciones.
  //  - manual: Desactivar las comprobaciones automáticas de actualizaciones en segundo plano. Las actualizaciones estarán disponibles si comprueba manualmente las actualizaciones.
  //  - start: Comprobar si hay actualizaciones solo al iniciarse. Deshabilitar las comprobaciones automáticas de actualización en segundo plano.
  //  - default: Habilitar la comprobación automática de actualizaciones. El código comprobará las actualizaciones automática y periódicamente.
  "update.mode": "default",

  // Mostrar notas de la revisión tras actualizar. Las notas de la revisión son obtenidas desde un servicio en línea de Microsoft.
  "update.showReleaseNotes": true

},
{
  // La configuración de proxy que se usará. Si no se establece, se heredará de las variables de entorno "http_proxy" y "https_proxy".
  "http.proxy": "",

  // El valor para enviar como el encabezado "Autenticación de proxy" para cada solicitud de red.
  "http.proxyAuthorization": null,

  // Controla si el certificado del servidor proxy debe comprobarse en la lista de entidades de certificación proporcionada.
  "http.proxyStrictSSL": true,

  // Utilice el soporte de proxy para extensiones.
  //  - off: Deshabilite la compatibilidad de proxy para las extensiones.
  //  - on: Habilite la compatibilidad de proxy para extensiones.
  //  - fallback: Habilitar compatibilidad con proxy para extensiones, revertir a opciones de solicitud cuando no se encuentre ningún proxy.
  //  - override: Habilite la compatibilidad de proxy para las extensiones, invalide las opciones de solicitud.
  "http.proxySupport": "override",

  // Controla si los certificados de entidad de certificación deben cargarse desde el SO. (En Windows y macOS, se requiere una recarga de la ventana después de desactivar esta opción).
  "http.systemCertificates": true

},
{
  // Controla si el modificador AltGraph+ debe tratarse como Ctrl+Alt+.
  "keyboard.mapAltGrToCtrlAlt": false

},
{
  // Esta configuración está en desuso en favor de `comments.openView`.
  // Controles cuándo se debe abrir el panel de comentarios.
  "comments.openPanel": "openOnSessionStartWithComments",

  // Controla cuándo debe abrirse la vista de comentarios.
  //  - never: La vista de comentarios nunca se abrirá.
  //  - file: La vista de comentarios se abrirá cuando un archivo con comentarios esté activo.
  //  - firstFile: Si la vista de comentarios aún no se ha abierto durante esta sesión, se abrirá por primera vez durante una sesión en la que un archivo con comentarios está activo.
  "comments.openView": "firstFile",

  // Determina si se usará la hora relativa en las marcas de tiempo de comentarios (por ejemplo, "hace 1 día").
  "comments.useRelativeTime": true,

  // Controla la visibilidad de la barra de comentarios y los hilos de comentarios en los editores que tienen rangos de comentarios y comentarios. Los comentarios siguen siendo accesibles a través de la vista Comentarios y harán que los comentarios se activen de la misma manera que se ejecuta el comando "Comentarios: Alternar comentarios del editor" para alternar los comentarios.
  "comments.visible": true

},
{
  // Permite establecer puntos de interrupción en cualquier archivo.
  "debug.allowBreakpointsEverywhere": false,

  // Mostrar automáticamente los valores de las variables que el depurador resuelve diferido, como son captadores.
  "debug.autoExpandLazyVariables": false,

  // Controla si se debe confirmar cuándo se cierra la ventana si hay sesiones de depuración activas.
  //  - never: No confirmar nunca.
  //  - always: Confirmar siempre si hay sesiones de depuración.
  "debug.confirmOnExit": "never",

  // Controla si las sugerencias deben ser aceptadas al entrar en la consola de depuración. La tecla Entrar también se utiliza para evaluar lo que se escribe en la consola de depuración.
  "debug.console.acceptSuggestionOnEnter": "off",

  // Controla si la consola de depuración debe cerrarse automáticamente cuando finaliza la sesión de depuración.
  "debug.console.closeOnEnd": false,

  // Controla si la consola de depuración debe contraer las líneas idénticas y mostrar un número de repeticiones con un distintivo.
  "debug.console.collapseIdenticalLines": true,

  // Controla la familia de fuentes en la consola de depuración.
  "debug.console.fontFamily": "default",

  // Controla el tamaño de fuente en píxeles en la consola de depuración.
  "debug.console.fontSize": 14,

  // Controla si la Consola de depuración debe sugerir la entrada escrita previamente.
  "debug.console.historySuggestions": true,

  // Controla la altura de la línea en píxeles en la consola de depuración. Use 0 para calcular la altura de la línea del tamaño de fuente.
  "debug.console.lineHeight": 0,

  // Controla si las líneas deben ajustarse en la consola de depuración.
  "debug.console.wordWrap": true,

  // Mostrar código fuente en vista de desensamblado.
  "debug.disassemblyView.showSourceCode": true,

  // Barra de estado de color cuando el depurador está activo
  "debug.enableStatusBarColor": true,

  // Controla si el editor debe centrarse cuando se interrumpe el depurador.
  "debug.focusEditorOnBreak": true,

  // Controla si la ventana del área de trabajo debe centrarse cuando se interrumpe el depurador.
  "debug.focusWindowOnBreak": true,

  // Muestre valores de variable en línea en el editor durante la depuración.
  //  - on: Muestra siempre valores de variable en línea en el editor durante la depuración.
  //  - off: No muestra nunca los valores de variable en línea en el editor durante la depuración.
  //  - auto: Muestra los valores de variable insertados en el editor durante la depuración cuando el lenguaje admite ubicaciones de valores insertados.
  "debug.inlineValues": "auto",

  // Controla cuándo debe abrirse la consola de depuración interna.
  "debug.internalConsoleOptions": "openOnFirstSessionStart",

  // Controla qué hacer cuando se encuentran errores después de ejecutar preLaunchTask.
  //  - debugAnyway: Ignore los errores de la tarea e inicie la depuración.
  //  - showErrors: Muestre la vista Problemas y no inicie la depuración.
  //  - prompt: Preguntar al usuario.
  //  - abort: Cancele la depuración.
  "debug.onTaskErrors": "prompt",

  // Controla cuándo debe abrirse la vista de depuración.
  "debug.openDebug": "openOnDebugBreak",

  // Abra automáticamente la vista de explorador al final de una sesión de depuración.
  "debug.openExplorerOnEnd": false,

  // Controla qué editores deben guardarse antes de iniciar una sesión de depuración.
  //  - allEditorsInActiveGroup: Guarde todos los editores del grupo activo antes de iniciar una sesión de depuración.
  //  - nonUntitledEditorsInActiveGroup: Guarde todos los editores del grupo activo, excepto aquellos que no tengan título, antes de iniciar una sesión de depuración.
  //  - none: No guarde ningún editor antes de iniciar una sesión de depuración.
  "debug.saveBeforeStart": "allEditorsInActiveGroup",

  // Controla si los puntos de interrupción deben mostrarse en la regla de información general.
  "debug.showBreakpointsInOverviewRuler": false,

  // Controla si se deben mostrar las decoraciones de candidatos de puntos de interrupción de líneas en el editor mientras se realiza la depuración.
  "debug.showInlineBreakpointCandidates": true,

  // Controla cuándo debe estar visible la barra de estado de depuración.
  //  - never: Nunca mostrar debug en la barra de estado
  //  - always: Mostrar siempre la depuración en la barra de estado
  //  - onFirstSessionStart: Mostrar debug en la barra de estado solamente después del primero uso de debug
  "debug.showInStatusBar": "onFirstSessionStart",

  // Controla si las subsesiones de depuración se muestran en la barra de herramientas de depuración. Cuando esta opción es false, el comando de parada de una subsesión detendrá también la sesión principal.
  "debug.showSubSessionsInToolBar": false,

  // Antes de iniciar una nueva sesión de depuración en un terminal integrado o externo, borre el terminal.
  "debug.terminal.clearBeforeReusing": false,

  // Controla la ubicación de la barra de herramientas de depuración. "floating" en todas las vistas, "docked" en la vista de depuración o "hidden".
  "debug.toolBarLocation": "floating",

  // Configuración de lanzamiento de depuración global. Puede usarse como alternativa a "launch.json" que se comparte a través de áreas de trabajo.
  "launch": {
    "configurations": [],
    "compounds": []
  }

},
{
  // Habilita o deshabilita el cierre automático de las etiquetas HTML.
  "html.autoClosingTags": true,

  // Habilita o deshabilita la creación automática de comillas para la asignación de atributos HTML. '#html.completion.attributeDefaultValue#' puede configurar el tipo de comillas.
  "html.autoCreateQuotes": true,

  // Controla el valor predeterminado de los atributos cuando se acepta la finalización.
  //  - doublequotes: El valor del atributo se establece en "".
  //  - singlequotes: El valor del atributo se establece en ''.
  //  - empty: El valor del atributo no está establecido.
  "html.completion.attributeDefaultValue": "doublequotes",

  // Una lista de rutas de archivo relativas que apuntan a archivos JSON siguiendo el [formato de datos personalizados](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).
  // 
  // VS Code carga los datos personalizados al iniciarse para mejorar su soporte HTML para las etiquetas HTML personalizadas, los atributos y los valores de atributos que usted especifica en los archivos JSON.
  // 
  // Las rutas de los archivos son relativas al área de trabajo y sólo se tiene en cuenta la configuración de la carpeta del área de trabajo.
  "html.customData": [],

  // Lista de etiquetas, separadas por comas, en las que el contenido no debe volver a formatearse. "null" se establece de manera predeterminada en la etiqueta "pre".
  "html.format.contentUnformatted": "pre,code,textarea",

  // Habilitar o deshabilitar el formateador HTML predeterminado.
  "html.format.enable": true,

  // Lista de etiquetas, separadas por comas, que deben tener una nueva línea adicional delante. "null" tiene como valores predeterminados "head, body, /html".
  "html.format.extraLiners": "head, body, /html",

  // Formato y sangría {{#foo}} y {{/foo}}.
  "html.format.indentHandlebars": false,

  // Aplique sangría a las secciones "<head>" y "<body>".
  "html.format.indentInnerHtml": false,

  // Número máximo de saltos de línea que deben conservarse en un fragmento. Use "null" para que el número sea ilimitado.
  "html.format.maxPreserveNewLines": null,

  // Controla si los saltos de línea existentes delante de los elementos deben conservarse. Solo funciona delante de los elementos, no dentro de las etiquetas ni con texto.
  "html.format.preserveNewLines": true,

  // Respete las etiquetas de los lenguajes de plantillas django, erb, handlebars y php.
  "html.format.templating": false,

  // Lista de etiquetas, separadas por comas, a las que no se debe volver a aplicar formato. El valor predeterminado de "null" son todas las etiquetas mostradas en https://www.w3.org/TR/html5/dom.html#phrasing-content.
  "html.format.unformatted": "wbr",

  // Agrupe el contenido de texto entre esta cadena.
  "html.format.unformattedContentDelimiter": "",

  // Ajustar atributos.
  //  - auto: Ajustar atributos solo cuando se supera la longitud de la línea.
  //  - force: Ajustar todos los atributos excepto el primero.
  //  - force-aligned: Ajustar todos los atributos excepto el primero y mantener la alineación.
  //  - force-expand-multiline: Ajustar todos los atributos.
  //  - aligned-multiple: Ajusta cuando se supera la longitud de línea y alinea los atributos verticalmente.
  //  - preserve: Preserva el ajuste de atributos.
  //  - preserve-aligned: Conservar el ajuste de atributos pero alinear.
  "html.format.wrapAttributes": "auto",

  // Aplicar sangría a los atributos ajustados después de N caracteres. Use "null" para usar el tamaño de sangría predeterminado. Se omite si '#html.format.wrapAttributes#' está establecido en “aligned”.
  "html.format.wrapAttributesIndentSize": null,

  // Cantidad máxima de caracteres por línea (0 = deshabilitar).
  "html.format.wrapLineLength": 120,

  // Mostrar la documentación de atributos y etiquetas mediante movimiento del mouse.
  "html.hover.documentation": true,

  // Mostrar las referencias a MDN mediante movimiento del mouse.
  "html.hover.references": true,

  // En desuso en favor de "editor.linkedEditing"
  // Habilitar o deshabilitar el reflejo del cursor en la etiqueta HTML coincidente.
  "html.mirrorCursorOnMatchingTag": false,

  // Controla si la compatibilidad con el lenguaje HTML integrada sugiere etiquetas, propiedades y valores de HTML5.
  "html.suggest.html5": true,

  // Hace un seguimiento de la comunicación entre VSCode y el servidor de lenguaje HTML.
  "html.trace.server": "off",

  // Controla si la compatibilidad con el lenguaje HTML integrada valida los scripts incrustados.
  "html.validate.scripts": true,

  // Controla si la compatibilidad con el lenguaje HTML integrada valida los estilos incrustados.
  "html.validate.styles": true

},
{
  // El valor "json.colorDecorators.enable" está en desuso en favor de "editor.colorDecorators".
  // Habilita o deshabilita decoradores de color
  "json.colorDecorators.enable": true,

  // Habilitar o deshabilitar el formateador JSON predeterminado
  "json.format.enable": true,

  // Conservar todas las líneas nuevas existentes al formatear.
  "json.format.keepLines": false,

  // El número máximo de símbolos del esquema y regiones de plegado calculados (limitado por motivos de rendimiento).
  "json.maxItemsComputed": 5000,

  // Cuando está habilitado, los esquemas JSON se pueden capturar desde ubicaciones http y https.
  "json.schemaDownload.enable": true,

  // Asocia esquemas a archivos JSON en el proyecto actual.
  "json.schemas": [],

  // Realiza el seguimiento de la comunicación entre VS Code y el servidor de lenguaje JSON.
  "json.trace.server": "off",

  // Habilita o deshabilita la validación json.
  "json.validate.enable": true

},
{
  // Habilite la colocación de archivos en un editor de Markdown manteniendo presionada la tecla Mayús. Requiere habilitar `editor.dropIntoEditor.enabled`.
  "markdown.editor.drop.enabled": true,

  // Define dónde deben crearse los archivos copiados en un documento de Markdown. Este es un mapa de patrones globales que coinciden en el documento de Markdown con destinos.
  // 
  // Los destinos pueden usar las siguientes variables:
  // 
  // - "${documentFileName}": nombre de archivo completo del documento de Markdown, por ejemplo, "readme.md".
  // - "${documentBaseName}": nombre base del documento de Markdown, por ejemplo "Léame".
  // - "${documentExtName}": extensión del documento de Markdown, por ejemplo "md".
  // - "${documentDirName}": nombre del directorio primario del documento Markdown.
  // - "${documentWorkspaceFolder}": carpeta del área de trabajo del documento de Markdown, por ejemplo, "/Users/me/myProject". Es igual que "${documentDirName}" si el archivo no forma parte de un área de trabajo.
  // - "${fileName}": nombre de archivo del archivo quitado, por ejemplo"image.png".
  "markdown.experimental.copyFiles.destination": {},

  // Al habilitar el pegado de archivos en un editor de Markdown, se insertan vínculos de Markdown. Requiere habilitar "#editor.experimental.pasteActions.enabled#".
  "markdown.experimental.editor.pasteLinks.enabled": true,

  // Controla dónde se deben abrir los vínculos de los archivos Markdown.
  //  - currentGroup: Abra vínculos en el grupo de editor activo.
  //  - beside: Abrir enlaces junto al editor activo.
  "markdown.links.openLocation": "currentGroup",

  // Habilite el resaltado de las apariciones de vínculos en el documento actual.
  "markdown.occurrencesHighlight.enabled": false,

  // Controla si se agregan o no extensiones de archivo (por ejemplo, `.md`) para los vínculos a archivos Markdown. Esta configuración se usa cuando las rutas de acceso de archivo se agregan mediante herramientas como finalizaciones de rutas de acceso o cambios de nombre de archivo.
  //  - auto: Para las rutas de acceso existentes, intente mantener el estilo de extensión de archivo. Para nuevas rutas de acceso, agregue extensiones de archivo.
  //  - includeExtension: Prefiere incluir la extensión de archivo. Por ejemplo, las finalizaciones de ruta de acceso a un archivo denominado `file.md` insertarán `file.md`.
  //  - removeExtension: Prefiere quitar la extensión de archivo. Por ejemplo, las finalizaciones de ruta de acceso a un archivo denominado `file.md` insertarán `file` sin `.md`.
  "markdown.preferredMdPathExtensionStyle": "auto",

  // Establece cómo se representan los saltos de línea en la vista previa de Markdown. Si se establece en "true", se crea <br> para las líneas nuevas dentro de los párrafos.
  "markdown.preview.breaks": false,

  // Haga doble clic en la vista previa de Markdown para cambiar al editor.
  "markdown.preview.doubleClickToSwitchToEditor": true,

  // Controla la familia de fuentes que se usa en la vista previa de Markdown.
  "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",

  // Controla el tamaño de fuente en píxeles que se usa en la vista previa de Markdown.
  "markdown.preview.fontSize": 14,

  // Controla la altura de línea que se usa en la vista previa de Markdown. Este número es relativo al tamaño de fuente.
  "markdown.preview.lineHeight": 1.6,

  // Convierta texto de tipo URL a vínculos en la vista previa de Markdown.
  "markdown.preview.linkify": true,

  // Marca la selección del editor actual en la vista previa de Markdown.
  "markdown.preview.markEditorSelection": true,

  // Controla cómo deben abrirse los vínculos hacia otros archivos Markdown en la vista previa de Markdown.
  //  - inPreview: Intenta abrir los vínculos en la vista previa de Markdown.
  //  - inEditor: Intenta abrir los vínculos en el editor.
  "markdown.preview.openMarkdownLinks": "inPreview",

  // Al desplazarse en la vista previa de Markdown, se actualiza la vista del editor.
  "markdown.preview.scrollEditorWithPreview": true,

  // Al desplazarse en el editor de Markdown, se actualiza la vista de la previsualización.
  "markdown.preview.scrollPreviewWithEditor": true,

  // Habilita algunos embellecimientos de comillas y reemplazos independientes del idioma en la vista previa de Markdown.
  "markdown.preview.typographer": false,

  // Lista de direcciones URL o rutas de acceso locales a hojas de estilo CSS que se van a usar desde la vista previa de Markdown. Las rutas de acceso relativas se interpretan en relación con la carpeta abierta en el Explorador. Si no hay ninguna carpeta abierta, se interpretan en relación con la ubicación del archivo Markdown. Todo '\' debe escribirse como '\\'.
  "markdown.styles": [],

  // Habilite las sugerencias de ruta de acceso mientras escribe vínculos en archivos Markdown.
  "markdown.suggest.paths.enabled": true,

  // Habilite sugerencias para encabezados en otros archivos Markdown en el área de trabajo actual. Al aceptar una de estas sugerencias, se inserta la ruta de acceso completa al encabezado en ese archivo; por ejemplo, `[link text](/path/to/file.md#header)`.
  //  - never: Deshabilite las sugerencias de encabezado del área de trabajo.
  //  - onDoubleHash: Habilite las sugerencias de encabezado del área de trabajo después de escribir `#` en una ruta de acceso, por ejemplo `[link text](#`.
  //  - onSingleOrDoubleHash: Habilite las sugerencias de encabezado del área de trabajo después de escribir `#` o `#` en una ruta de acceso; por ejemplo, `[link text](#` or `[link text](#`.
  "markdown.suggest.paths.includeWorkspaceHeaderCompletions": "onDoubleHash",

  // Habilita el registro de depuración para las extensiones de Markdown. 
  "markdown.trace.extension": "off",

  // Realiza un seguimiento de la comunicación entre VS Code y el servidor de lenguaje Markdown.
  "markdown.trace.server": "off",

  // Intente actualizar los vínculos de los archivos Markdown cuando se cambie el nombre o se mueva un archivo en el área de trabajo. Use `markdown.updateLinksOnFileMove.include` para configurar los archivos que desencadenan las actualizaciones de vínculos.
  //  - prompt: Preguntar en cada movimiento de archivos.
  //  - always: Actualizar siempre los enlaces automáticamente.
  //  - never: No intentar nunca actualizar el vínculo y no preguntar.
  "markdown.updateLinksOnFileMove.enabled": "never",

  // Habilite la actualización de vínculos cuando se mueve o cambia el nombre de un directorio en el área de trabajo.
  "markdown.updateLinksOnFileMove.enableForDirectories": true,

  // Patrones globales que especifican qué archivos desencadenan actualizaciones automáticas de vínculos. Vea "#markdown.updateLinksOnFileMove.enabled#" para más información sobre esta característica.
  "markdown.updateLinksOnFileMove.include": [
    "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
    "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
  ],

  // Valide las definiciones duplicadas en el archivo actual.
  "markdown.validate.duplicateLinkDefinitions.enabled": "warning",

  // Habilite todos los informes de errores en los archivos Markdown.
  "markdown.validate.enabled": false,

  // Validar los enlaces a otros archivos en los archivos Markdown, por ejemplo "[enlace](/path/to/file.md)". Esto comprueba que los archivos de destino existen. Requiere la activación de "#markdown.validate.enabled#".
  "markdown.validate.fileLinks.enabled": "warning",

  // Validar la parte del fragmento de los enlaces a las cabeceras de otros archivos en los archivos Markdown, por ejemplo "[enlace](/path/to/file.md#header)". Hereda el valor de ajuste de "#markdown.validate.fragmentLinks.enabled#" por defecto.
  "markdown.validate.fileLinks.markdownFragmentLinks": "inherit",

  // Validar los enlaces de los fragmentos a los encabezados en el archivo Markdown actual, por ejemplo "[link](#header)". Requiere activar "#markdown.validate.enabled#".
  "markdown.validate.fragmentLinks.enabled": "warning",

  // Configure vínculos que no deben validarse. Por ejemplo, agregar `/about` no validaría el vínculo `[about](/about)`, mientras que el valor global `/assets/**/*.svg` le permitirá omitir la validación de cualquier vínculo a archivos `.svg` en el directorio `assets`.
  "markdown.validate.ignoredLinks": [],

  // Validar los enlaces de referencia en los archivos Markdown, por ejemplo "[link][ref]". Requiere activar "#markdown.validate.enabled#".
  "markdown.validate.referenceLinks.enabled": "warning",

  // Valide las definiciones de vínculo que no se usan en el archivo actual.
  "markdown.validate.unusedLinkDefinitions.enabled": "hint"

},
{
  // Controla si se habilitan las sugerencias del lenguaje PHP integradas. La asistencia sugiere variables y opciones globales de PHP.
  "php.suggest.basic": true,

  // Habilita o deshabilita la validación integrada de PHP.
  "php.validate.enable": true,

  // Señala al ejecutable PHP.
  "php.validate.executablePath": null,

  // Indica si linter se ejecuta al guardar o al escribir.
  "php.validate.run": "onSave"

},
{
  // Habilita o deshabilita el cierre automático de las etiquetas JSX.
  "javascript.autoClosingTags": true,

  // Habilita o deshabilita el formateador predeterminado de JavaScript.
  "javascript.format.enable": true,

  // Define el tratamiento del espacio después de un delimitador de coma.
  "javascript.format.insertSpaceAfterCommaDelimiter": true,

  // Define el tratamiento de los espacios después de la palabra clave de constructor.
  "javascript.format.insertSpaceAfterConstructor": false,

  // Define el tratamiento del espacio después de la palabra clave function para las funciones anónimas.
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

  // Define el tratamiento del espacio después de las palabras clave en una instrucción de flujo de control.
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

  // Define el tratamiento de los espacios después de una llave de apertura y antes de una llave de cierre vacías.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

  // Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de expresiones JSX.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

  // Define el tratamiento de los espacios después de la llave de apertura y antes de la llave de cierre en instrucciones que no están vacías.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

  // Define el manejo del espacio después de abrir y antes de cerrar los soportes no vacíos.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

  // Define el manejo del espacio después de abrir y antes de cerrar paréntesis no vacíos.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

  // Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de cadenas de plantilla.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

  // Define el tratamiento del espacio después de punto y coma en una instrucción for.
  "javascript.format.insertSpaceAfterSemicolonInForStatements": true,

  // Define el tratamiento del espacio después de un operador binario.
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

  // Define el tratamiento del espacio antes de los paréntesis de argumentos de función.
  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,

  // Define si una llave de apertura se incluye en una nueva línea para los bloques de control o no.
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,

  // Define si una llave de apertura se incluye en una nueva línea para las funciones o no.
  "javascript.format.placeOpenBraceOnNewLineForFunctions": false,

  // Define el tratamiento de puntos y comas opcionales.
  //  - ignore: No inserte ni quite los puntos y comas.
  //  - insert: Inserte punto y coma en los extremos de la instrucción.
  //  - remove: Elimine los puntos y comas innecesarios.
  "javascript.format.semicolons": "ignore",

  // Esta configuración está en desuso en favor de "js/ts.implicitProjectConfig.checkJs".
  // Habilita o deshabilita la comprobación semántica de los archivos de JavaScript. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta opción.
  "javascript.implicitProjectConfig.checkJs": false,

  // Esta configuración está en desuso en favor de "js/ts.implicitProjectConfig.experimentalDecorators".
  // Habilite o deshabilite "experimentalDecorators" en los archivos de JavaScript que no forman parte de un proyecto. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta opción.
  "javascript.implicitProjectConfig.experimentalDecorators": false,

  // Activar/desactivar las sugerencias de relleno para los valores de los miembros en las declaraciones de enum:
  // ``typescript
  // 
  // enum MiValor {
  // 	A /* = 0 */;
  // 	B /* = 1 */;
  // }
  //  
  // ```
  "javascript.inlayHints.enumMemberValues.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos de retorno implícitos en las firmas de las funciones:
  // ``typescript
  // 
  // function foo() /* :number */ {
  // 	return Date.now();
  // } 
  //  
  // ```
  "javascript.inlayHints.functionLikeReturnTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los nombres de los parámetros:
  // ``typescript
  // 
  // parseInt(/* str: */ '123', /* radix: */ 8)
  //  
  // ```
  //  - none: Deshabilitar las sugerencias de nombre de parámetro.
  //  - literals: Habilitar las sugerencias de nombre de parámetro solo para los argumentos literales.
  //  - all: Habilitar las sugerencias de nombre de parámetro para argumentos literales y no literales.
  "javascript.inlayHints.parameterNames.enabled": "none",

  // Suprimir las sugerencias de nombre de parámetro en argumentos cuyo texto sea idéntico al nombre del parámetro.
  "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

  // Activar/desactivar las sugerencias de relleno para los tipos de parámetros implícitos:
  // ``typescript
  // 
  // el.addEventListener('click', e /* :MouseEvent */ => ...)
  //  
  // ```
  "javascript.inlayHints.parameterTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos implícitos en las declaraciones de propiedades:
  // ``typescript
  // 
  // clase Foo {
  // 	prop /* :number */ = Date.now();
  // }
  //  
  // ```
  "javascript.inlayHints.propertyDeclarationTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos de variables implícitas:
  // ``typescript
  // 
  // const foo /* :number */ = Date.now();
  //  
  // ```
  "javascript.inlayHints.variableTypes.enabled": false,

  // Suprima sugerencias de tipo en las variables cuyo nombre sea idéntico al nombre de tipo. Requiere el uso de TypeScript 4.8+ en el área de trabajo.
  "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

  // Especifique patrones globales de archivos que se excluirán de las importaciones automáticas. Requiere el uso de TypeScript 4.8 o posterior en el área de trabajo.
  "javascript.preferences.autoImportFileExcludePatterns": [],

  // Estilo de ruta de acceso preferido para las importaciones automáticas.
  //  - shortest: Prefiere una importación no relativa solo si hay alguna disponible que tenga menos segmentos de trazado que una importación relativa.
  //  - relative: Prefiere una ruta de acceso relativa a la ubicación del archivo importado.
  //  - non-relative: Prefiere una importación no relativa basada en los elementos "baseUrl" o "paths" configurados en "jsconfig.json" o "tsconfig.json".
  //  - project-relative: Prefiere una importación no relativa solo si la ruta de acceso de importación relativa deja el directorio del proyecto o paquete.
  "javascript.preferences.importModuleSpecifier": "shortest",

  // Finalización de ruta preferida para las importaciones automáticas.
  //  - auto: Utilice la configuración del proyecto para seleccionar un valor predeterminado.
  //  - minimal: Acorte "./component/index.js" a "./component".
  //  - index: Acorte "./component/index.js" a "./component/index".
  //  - js: No acorte los finales de ruta; incluyen la extensión ".js".
  "javascript.preferences.importModuleSpecifierEnding": "auto",

  // Estilo preferido para las finalizaciones de atributos JSX.
  //  - auto: Inserte `={}` o `=""` después de los nombres de atributo según el tipo de propiedad. Consulte `javascript.preferences.quoteStyle` para controlar el tipo de comillas usadas para los atributos de cadena.
  //  - braces: Inserta '={}' después de los nombres de atributo.
  //  - none: Inserte solo nombres de atributo.
  "javascript.preferences.jsxAttributeCompletionStyle": "auto",

  // Estilo de comillas preferido para las correcciones rápidas.
  //  - auto: Inferir el tipo de comillas a partir del código existente
  //  - single: Siempre use comillas simples: `'`
  //  - double: Siempre use comillas dobles: `"`
  "javascript.preferences.quoteStyle": "auto",

  // El valor "typescript.preferences.renameShorthandProperties" ha quedado en desuso en favor de "typescript.preferences.useAliasesForRenames"
  // Habilite o deshabilite la introducción de alias para propiedades abreviadas de objetos durante los cambios de nombre.
  "javascript.preferences.renameShorthandProperties": true,

  // Habilite o deshabilite la introducción de alias para propiedades abreviadas de objetos durante los cambios de nombre.
  "javascript.preferences.useAliasesForRenames": true,

  // Habilitar/deshabilitar las referencias de CodeLens en los archivos de JavaScript.
  "javascript.referencesCodeLens.enabled": false,

  // Habilitar o deshabilitar CodeLens de referencias en todas las funciones de los archivos de JavaScript.
  "javascript.referencesCodeLens.showOnAllFunctions": false,

  // Habilita o deshabilita las sugerencias de importación automática.
  "javascript.suggest.autoImports": true,

  // Activar/desactivar la finalización de fragmentos para los miembros de la clase.
  "javascript.suggest.classMemberSnippets.enabled": true,

  // Complete las funciones con la signatura de parámetro.
  "javascript.suggest.completeFunctionCalls": false,

  // Habilitar/deshabilitar sugerencia para completar comentarios JSDoc.
  "javascript.suggest.completeJSDocs": true,

  // Sugerencias de Autocomplete habilitadas/deshabilitadas.
  "javascript.suggest.enabled": true,

  // Habilite/deshabilite la visualización de terminaciones en valores potencialmente indefinidos que insertan una llamada en cadena opcional. Requiere que las comprobaciones estrictas de elementos nulos.estén habilitadas.
  "javascript.suggest.includeAutomaticOptionalChainCompletions": true,

  // Habilita o deshabilita las finalizaciones del estilo de importación automática en las instrucciones de importación escritas parcialmente.
  "javascript.suggest.includeCompletionsForImportStatements": true,

  // Habilite o deshabilite la generación de anotaciones "@returns" para plantillas JSDoc.
  "javascript.suggest.jsdoc.generateReturns": true,

  // Habilite/deshabilite la inclusión de nombres únicos del archivo en las sugerencias de JavaScript. Tenga en cuenta que las sugerencias de nombre siempre están deshabilitadas en el código JavaScript que se comprueba semánticamente mediante "@ts-check" o "checkJs".
  "javascript.suggest.names": true,

  // Habilite/deshabilite las sugerencias para rutas de acceso en instrucciones de importación y requiera llamadas.
  "javascript.suggest.paths": true,

  // Habilita o deshabilita el diagnóstico de sugerencias para los archivos de JavaScript en el editor.
  "javascript.suggestionActions.enabled": true,

  // Habilita o deshabilita la actualización automática de las rutas de acceso de importación al mover un archivo o cambiarle el nombre en VS Code.
  //  - prompt: Preguntar cada vez que se cambie de nombre.
  //  - always: Actualizar siempre las rutas de acceso automáticamente.
  //  - never: No cambiar nunca el nombre de las rutas de acceso y no preguntar.
  "javascript.updateImportsOnFileMove.enabled": "prompt",

  // Habilita o deshabilita la validación de JavaScript.
  "javascript.validate.enable": true,

  // Habilita o deshabilita la comprobación semántica de los archivos de JavaScript. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta opción.
  "js/ts.implicitProjectConfig.checkJs": false,

  // Habilite o deshabilite "experimentalDecorators" en los archivos de JavaScript que no forman parte de un proyecto. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta opción.
  "js/ts.implicitProjectConfig.experimentalDecorators": false,

  // Establece el sistema de módulos para el programa. Más información: https://www.typescriptlang.org/tsconfig#module.
  "js/ts.implicitProjectConfig.module": "ESNext",

  // Habilite o deshabilite [los tipos de función estrictos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) en los archivos de JavaScript y TypeScript que no forman parte de un proyecto. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta configuración.
  "js/ts.implicitProjectConfig.strictFunctionTypes": true,

  // Habilita o deshabilita [las comprobaciones estrictas de elementos nulos.](https://www.typescriptlang.org/tsconfig#strictNullChecks) en los archivos de JavaScript y TypeScript que no forman parte de un proyecto. Los archivos "jsconfig.json" o "tsconfig.json" existentes invalidan esta configuración.
  "js/ts.implicitProjectConfig.strictNullChecks": true,

  // Establezca la versión del lenguaje JavaScript de destino para las declaraciones JavaScript emitidas e incluya las declaraciones de biblioteca. Más información: https://www.typescriptlang.org/tsconfig#target.
  "js/ts.implicitProjectConfig.target": "ES2020",

  // Habilita o deshabilita el cierre automático de las etiquetas JSX.
  "typescript.autoClosingTags": true,

  // Comprobar si npm está instalado para [Adquisición automática de tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
  "typescript.check.npmIsInstalled": true,

  // Deshabilita [adquisición automática de tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). La adquisición automática de tipos obtiene los paquetes "@types" de npm para mejorar el IntelliSense de las bibliotecas externas.
  "typescript.disableAutomaticTypeAcquisition": false,

  // Permite solicitar a los usuarios el uso de la versión de TypeScript configurada en el área de trabajo para IntelliSense.
  "typescript.enablePromptUseWorkspaceTsdk": false,

  // Habilita o deshabilita IntelliSense en todo el proyecto en la web. Requiere que VS Code se ejecute en un contexto de confianza.
  "typescript.experimental.tsserver.web.enableProjectWideIntellisense": false,

  // Habilita o deshabilita el formateador predeterminado de TypeScript.
  "typescript.format.enable": true,

  // Define el tratamiento del espacio después de un delimitador de coma.
  "typescript.format.insertSpaceAfterCommaDelimiter": true,

  // Define el tratamiento de los espacios después de la palabra clave de constructor.
  "typescript.format.insertSpaceAfterConstructor": false,

  // Define el tratamiento del espacio después de la palabra clave function para las funciones anónimas.
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

  // Define el tratamiento del espacio después de las palabras clave en una instrucción de flujo de control.
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

  // Define el tratamiento de los espacios después de una llave de apertura y antes de una llave de cierre vacías.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

  // Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de expresiones JSX.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

  // Define el tratamiento de los espacios después de la llave de apertura y antes de la llave de cierre en instrucciones que no están vacías.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

  // Define el manejo del espacio después de abrir y antes de cerrar los soportes no vacíos.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

  // Define el manejo del espacio después de abrir y antes de cerrar paréntesis no vacíos.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

  // Define el tratamiento del espacio después de la llave de apertura y antes de la llave de cierre de cadenas de plantilla.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

  // Define el tratamiento del espacio después de punto y coma en una instrucción for.
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,

  // Define el tratamiento de los espacios después de las aserciones de tipos en TypeScript.
  "typescript.format.insertSpaceAfterTypeAssertion": false,

  // Define el tratamiento del espacio después de un operador binario.
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

  // Define el tratamiento del espacio antes de los paréntesis de argumentos de función.
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,

  // Define si una llave de apertura se incluye en una nueva línea para los bloques de control o no.
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

  // Define si una llave de apertura se incluye en una nueva línea para las funciones o no.
  "typescript.format.placeOpenBraceOnNewLineForFunctions": false,

  // Define el tratamiento de puntos y comas opcionales.
  //  - ignore: No inserte ni quite los puntos y comas.
  //  - insert: Inserte punto y coma en los extremos de la instrucción.
  //  - remove: Elimine los puntos y comas innecesarios.
  "typescript.format.semicolons": "ignore",

  // Habilite o deshabilite las implementaciones de CodeLens. Esta instancia de CodeLens muestra los implementadores de una interfaz.
  "typescript.implementationsCodeLens.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los valores de los miembros en las declaraciones de enum:
  // ``typescript
  // 
  // enum MiValor {
  // 	A /* = 0 */;
  // 	B /* = 1 */;
  // }
  //  
  // ```
  "typescript.inlayHints.enumMemberValues.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos de retorno implícitos en las firmas de las funciones:
  // ``typescript
  // 
  // function foo() /* :number */ {
  // 	return Date.now();
  // } 
  //  
  // ```
  "typescript.inlayHints.functionLikeReturnTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los nombres de los parámetros:
  // ``typescript
  // 
  // parseInt(/* str: */ '123', /* radix: */ 8)
  //  
  // ```
  //  - none: Deshabilitar las sugerencias de nombre de parámetro.
  //  - literals: Habilitar las sugerencias de nombre de parámetro solo para los argumentos literales.
  //  - all: Habilitar las sugerencias de nombre de parámetro para argumentos literales y no literales.
  "typescript.inlayHints.parameterNames.enabled": "none",

  // Suprimir las sugerencias de nombre de parámetro en argumentos cuyo texto sea idéntico al nombre del parámetro.
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

  // Activar/desactivar las sugerencias de relleno para los tipos de parámetros implícitos:
  // ``typescript
  // 
  // el.addEventListener('click', e /* :MouseEvent */ => ...)
  //  
  // ```
  "typescript.inlayHints.parameterTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos implícitos en las declaraciones de propiedades:
  // ``typescript
  // 
  // clase Foo {
  // 	prop /* :number */ = Date.now();
  // }
  //  
  // ```
  "typescript.inlayHints.propertyDeclarationTypes.enabled": false,

  // Activar/desactivar las sugerencias de relleno para los tipos de variables implícitas:
  // ``typescript
  // 
  // const foo /* :number */ = Date.now();
  //  
  // ```
  "typescript.inlayHints.variableTypes.enabled": false,

  // Suprima sugerencias de tipo en las variables cuyo nombre sea idéntico al nombre de tipo. Requiere el uso de TypeScript 4.8+ en el área de trabajo.
  "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

  // Establece la configuración regional que se usa para notificar errores de JavaScript y TypeScript. De forma predeterminada, se usa la configuración regional de VS Code.
  "typescript.locale": "auto",

  // Especifica la ruta del ejecutable npm utilizado para la [Adquisición automática de tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
  "typescript.npm": "",

  // Especifique patrones globales de archivos que se excluirán de las importaciones automáticas. Requiere el uso de TypeScript 4.8 o posterior en el área de trabajo.
  "typescript.preferences.autoImportFileExcludePatterns": [],

  // Estilo de ruta de acceso preferido para las importaciones automáticas.
  //  - shortest: Prefiere una importación no relativa solo si hay alguna disponible que tenga menos segmentos de trazado que una importación relativa.
  //  - relative: Prefiere una ruta de acceso relativa a la ubicación del archivo importado.
  //  - non-relative: Prefiere una importación no relativa basada en los elementos "baseUrl" o "paths" configurados en "jsconfig.json" o "tsconfig.json".
  //  - project-relative: Prefiere una importación no relativa solo si la ruta de acceso de importación relativa deja el directorio del proyecto o paquete.
  "typescript.preferences.importModuleSpecifier": "shortest",

  // Finalización de ruta preferida para las importaciones automáticas.
  //  - auto: Utilice la configuración del proyecto para seleccionar un valor predeterminado.
  //  - minimal: Acorte "./component/index.js" a "./component".
  //  - index: Acorte "./component/index.js" a "./component/index".
  //  - js: No acorte los finales de ruta; incluyen la extensión ".js".
  "typescript.preferences.importModuleSpecifierEnding": "auto",

  // Habilite o deshabilite la búsqueda de dependencias "package.json" para las importaciones automáticas disponibles.
  //  - auto: Busque las dependencias en función del impacto estimado en el rendimiento.
  //  - on: Busque siempre las dependencias.
  //  - off: No busque nunca las dependencias.
  "typescript.preferences.includePackageJsonAutoImports": "auto",

  // Estilo preferido para las finalizaciones de atributos JSX.
  //  - auto: Inserte `={}` o `=""` después de los nombres de atributo según el tipo de propiedad. Consulte `typescript.preferences.quoteStyle` para controlar el tipo de comillas usadas para los atributos de cadena.
  //  - braces: Inserta '={}' después de los nombres de atributo.
  //  - none: Inserte solo nombres de atributo.
  "typescript.preferences.jsxAttributeCompletionStyle": "auto",

  // Estilo de comillas preferido para las correcciones rápidas.
  //  - auto: Inferir el tipo de comillas a partir del código existente
  //  - single: Siempre use comillas simples: `'`
  //  - double: Siempre use comillas dobles: `"`
  "typescript.preferences.quoteStyle": "auto",

  // El valor "typescript.preferences.renameShorthandProperties" ha quedado en desuso en favor de "typescript.preferences.useAliasesForRenames"
  // Habilite o deshabilite la introducción de alias para propiedades abreviadas de objetos durante los cambios de nombre.
  "typescript.preferences.renameShorthandProperties": true,

  // Habilite o deshabilite la introducción de alias para propiedades abreviadas de objetos durante los cambios de nombre.
  "typescript.preferences.useAliasesForRenames": true,

  // Habilita o deshabilita CodeLens de referencias en archivos de TypeScript.
  "typescript.referencesCodeLens.enabled": false,

  // Habilitar/deshabilitar referencias CodeLens en todas las funciones en archivos TypeScript.
  "typescript.referencesCodeLens.showOnAllFunctions": false,

  // Notifique las comprobaciones de estilo como advertencias.
  "typescript.reportStyleChecksAsWarnings": true,

  // Habilita o deshabilita las sugerencias de importación automática.
  "typescript.suggest.autoImports": true,

  // Activar/desactivar la finalización de fragmentos para los miembros de la clase.
  "typescript.suggest.classMemberSnippets.enabled": true,

  // Complete las funciones con la signatura de parámetro.
  "typescript.suggest.completeFunctionCalls": false,

  // Habilitar/deshabilitar sugerencia para completar comentarios JSDoc.
  "typescript.suggest.completeJSDocs": true,

  // Sugerencias de Autocomplete habilitadas/deshabilitadas.
  "typescript.suggest.enabled": true,

  // Habilite/deshabilite la visualización de terminaciones en valores potencialmente indefinidos que insertan una llamada en cadena opcional. Requiere que las comprobaciones estrictas de elementos nulos.estén habilitadas.
  "typescript.suggest.includeAutomaticOptionalChainCompletions": true,

  // Habilita o deshabilita las finalizaciones del estilo de importación automática en las instrucciones de importación escritas parcialmente.
  "typescript.suggest.includeCompletionsForImportStatements": true,

  // Habilite o deshabilite la generación de anotaciones "@returns" para plantillas JSDoc.
  "typescript.suggest.jsdoc.generateReturns": true,

  // Activar/desactivar la finalización de fragmentos de métodos en los literales de objetos. Requiere el uso de TypeScript 4.7+ en el área de trabajo.
  "typescript.suggest.objectLiteralMethodSnippets.enabled": true,

  // Habilite/deshabilite las sugerencias para rutas de acceso en instrucciones de importación y requiera llamadas.
  "typescript.suggest.paths": true,

  // Habilita o deshabilita el diagnóstico de sugerencias para los archivos de TypeScript en el editor.
  "typescript.suggestionActions.enabled": true,

  // Habilitar/deshabilitar las encuestas ocasionales que nos ayudan a mejorar la compatibilidad de JavaScript y TypeScript en VS Code.
  "typescript.surveys.enabled": true,

  // Controla la detección automática de las tareas TSC.
  //  - on: Cree tanto tareas de compilación como de inspección.
  //  - off: Deshabilite esta característica.
  //  - build: Cree únicamente tareas de compilación de una sola ejecución.
  //  - watch: Cree únicamente tareas de compilación y de inspección.
  "typescript.tsc.autoDetect": "on",

  // Especificar la ruta de la carpeta de los archivos tsserver y `lib*.d.ts` bajo una instalación de TypeScript para usarla en IntelliSense, por ejemplo: `./node_modules/typescript/lib`.
  // 
  // - Cuando se especifica como una configuración de usuario, la versión de TypeScript de `typescript.tsdk` reemplaza automáticamente la versión de TypeScript incorporada.
  // - Cuando se especifica como una configuración del área de trabajo, `typescript.tsdk` le permite cambiar para usar esa versión de TypeScript del área de trabajo para IntelliSense con el comando `TypeScript: Select TypeScript version`.
  // 
  // Consulte la [documentación de TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) para obtener más detalles sobre la administración de las versiones de TypeScript.
  "typescript.tsdk": "",

  // Habilita el seguimiento del rendimiento del servidor TS en un directorio. Estos archivos de seguimiento se pueden usar para diagnosticar problemas de rendimiento del servidor TS. El registro puede contener rutas de acceso, código fuente e información potencialmente confidencial acerca del proyecto.
  "typescript.tsserver.enableTracing": false,

  // (Experimental) Habilita los informes de errores de todo el proyecto.
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,

  // Habilita los registros del servidor TS a un archivo. Este registro se puede utilizar para diagnosticar problemas en el servidor TS. Este registro puede contener rutas de acceso, código fuente y posiblemente otra información sensitiva acerca del proyecto.
  "typescript.tsserver.log": "off",

  // La cantidad máxima de memoria (en MB) a asignar al proceso del servidor TypeScript.
  "typescript.tsserver.maxTsServerMemory": 3072,

  // Rutas de acceso adicionales para detectar complementos del servicio de lenguaje TypeScript.
  "typescript.tsserver.pluginPaths": [],

  // Habilita el seguimiento de mensajes al servidor TS. Este seguimiento se puede utilizar para diagnosticar problemas en el servidor TS. Este seguimiento puede contener rutas de acceso, código fuente y posiblemente otra información sensitiva acerca del proyecto.
  "typescript.tsserver.trace": "off",

  // Esta configuración ha quedado en desuso en favor de "typescript.tsserver.useSyntaxServer".
  // Habilite o deshabilite la generación de un servidor TypeScript independiente que pueda responder más rápidamente a las operaciones relacionadas con la sintaxis, como el cálculo de los símbolos de documento de plegado o de proceso.
  "typescript.tsserver.useSeparateSyntaxServer": true,

  // Controla si TypeScript inicia un servidor dedicado para controlar de forma más rápida las operaciones relacionadas con la sintaxis, como calcular el plegado de código.
  //  - always: Use un servidor de sintaxis más ligero para controlar todas las operaciones de IntelliSense. Este servidor de sintaxis solo puede proporcionar IntelliSense para los archivos abiertos.
  //  - never: No use un servidor de sintaxis dedicado. Use un único servidor para controlar todas las operaciones de IntelliSense.
  //  - auto: Generar tanto un servidor completo como uno más ligero dedicado a las operaciones de sintaxis. El servidor de sintaxis se usa para acelerar las operaciones de sintaxis y proporcionar IntelliSense mientras se cargan los proyectos.
  "typescript.tsserver.useSyntaxServer": "auto",

  // Configure qué estrategias de observación se deben utilizar para realizar un seguimiento de los archivos y directorios.
  "typescript.tsserver.watchOptions": {},

  // Habilita o deshabilita la actualización automática de las rutas de acceso de importación al mover un archivo o cambiarle el nombre en VS Code.
  //  - prompt: Preguntar cada vez que se cambie de nombre.
  //  - always: Actualizar siempre las rutas de acceso automáticamente.
  //  - never: No cambiar nunca el nombre de las rutas de acceso y no preguntar.
  "typescript.updateImportsOnFileMove.enabled": "prompt",

  // Habilita o deshabilita la validación de TypeScript.
  "typescript.validate.enable": true,

  // Controla los archivos que busca [ir al símbolo en el área de trabajo](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).
  //  - allOpenProjects: Busque símbolos en todos los proyectos de JavaScript o TypeScript abiertos.
  //  - currentProject: Busque solo símbolos en el proyecto de JavaScript o TypeScript actual.
  "typescript.workspaceSymbols.scope": "allOpenProjects"

},
{
  // Deprecated. Use `gitlens.views.formats.commits.description` instead
  // 
  "gitlens.views.commitDescriptionFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.description` instead
  // 
  "gitlens.views.commitFileDescriptionFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.label` instead
  // 
  "gitlens.views.commitFileFormat": null,

  // Deprecated. Use `gitlens.views.commits.files.label` instead
  // 
  "gitlens.views.commitFormat": null,

  // Specifies the default number of items to show in a view list. Use 0 to specify no limit
  "gitlens.views.defaultItemLimit": 10,

  // Specifies whether to enable experimental multi-select support in the views.
  // **NOTE**: Requires a restart to take effect.
  "gitlens.views.experimental.multiSelect.enabled": false,

  // Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.commits.description": "${author, }${agoOrDate}",

  // Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.commits.label": "${❰ tips ❱➤  }${message}",

  // Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.commits.tooltip": "${link}${' via 'pullRequest}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",

  // Specifies the tooltip format (in markdown) of "file" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.commits.tooltipWithStatus": "${link}${' via 'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",

  // Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs
  "gitlens.views.formats.files.description": "${directory}${  ←  originalPath}",

  // Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs
  "gitlens.views.formats.files.label": "${working  }${file}",

  // Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.stashes.description": "${stashOnRef, }${agoOrDate}",

  // Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
  "gitlens.views.formats.stashes.label": "${message}",

  // Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit
  "gitlens.views.pageItemLimit": 40,

  // Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views
  "gitlens.views.showRelativeDateMarkers": true,

  // Deprecated. Use `gitlens.views.formats.stashes.description` instead
  // 
  "gitlens.views.stashDescriptionFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.description` instead
  // 
  "gitlens.views.stashFileDescriptionFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.label` instead
  // 
  "gitlens.views.stashFileFormat": null,

  // Deprecated. Use `gitlens.views.stashes.files.label` instead
  // 
  "gitlens.views.stashFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.description` instead
  // 
  "gitlens.views.statusFileDescriptionFormat": null,

  // Deprecated. Use `gitlens.views.formats.files.label` instead
  // 
  "gitlens.views.statusFileFormat": null

},
{
  // Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view
  "gitlens.views.commits.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `gitlens.views.commits.files.layout` is set to `tree` or `auto`
  "gitlens.views.commits.files.compact": true,

  // Specifies how the _Commits_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.commits.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.commits.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `gitlens.views.commits.files.layout` is set to `auto`
  "gitlens.views.commits.files.threshold": 5,

  // Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.commits.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.commits.pullRequests.showForBranches": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.commits.pullRequests.showForCommits": true,

  // Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.commits.reveal": true,

  // Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Commits_ view
  //  - false: Hides the branch comparison
  //  - branch: Compares the current branch with a user-selected reference
  //  - working: Compares the working tree with a user-selected reference
  "gitlens.views.commits.showBranchComparison": "working"

},
{
  // Mostrar siempre la prueba ejecutada cuando "#testing.followRunningTest#" está activado. Si esta configuración está desactivada, solo se revelarán las pruebas con errores.
  "testing.alwaysRevealTestOnStateChange": false,

  // Configura cuándo se abre la vista de inspección de errores de forma automática.
  //  - failureAnywhere: Abrir automáticamente, sin importar dónde se produce el error.
  //  - failureInVisibleDocument: Abrir automáticamente cuando una prueba genera error en un documento visible.
  //  - never: Nunca abrir automáticamente.
  "testing.automaticallyOpenPeekView": "failureInVisibleDocument",

  // Controla si la vista de inspección debe abrirse de forma automática durante el modo de ejecución continua.
  "testing.automaticallyOpenPeekViewDuringAutoRun": false,

  // Tiempo que se debe esperar, en milisegundos, después de que una prueba se haya marcado como obsoleta y empezar una nueva ejecución.
  "testing.autoRun.delay": 1000,

  // Controla la acción que se realiza cuando se hace clic con el botón izquierdo en una decoración de prueba en el medianil.
  //  - run: Ejecute la prueba.
  //  - debug: Depure la prueba.
  //  - contextMenu: Abra el menú contextual para ver más opciones.
  "testing.defaultGutterClickAction": "run",

  // Controla si la prueba en ejecución debe ser seguida en la vista del explorador de pruebas.
  "testing.followRunningTest": true,

  // Controla si se muestran las decoraciones de prueba en el medianil del editor.
  "testing.gutterEnabled": true,

  // Controla cuándo debe abrirse la vista de pruebas.
  //  - neverOpen: No abrir nunca automáticamente la vista de pruebas
  //  - openOnTestStart: Abrir la vista de pruebas cuando se inicien las pruebas
  //  - openOnTestFailure: Abrir la vista de pruebas en caso de error de prueba
  "testing.openTesting": "openOnTestStart",

  // Controla si se guardan todos los editores con modificaciones antes de ejecutar una prueba.
  "testing.saveBeforeTest": true

},
{
  // Specifies whether to automatically link external resources in commit messages
  "gitlens.views.commitDetails.autolinks.enabled": true,

  // Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.commitDetails.autolinks.enhanced": true,

  // Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view
  "gitlens.views.commitDetails.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `gitlens.views.commitDetails.files.layout` is set to `tree` or `auto`
  "gitlens.views.commitDetails.files.compact": true,

  // Specifies how the _Commit Details_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.commitDetails.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.commitDetails.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `gitlens.views.commitDetails.files.layout` is set to `auto`
  "gitlens.views.commitDetails.files.threshold": 5,

  // Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.commitDetails.pullRequests.enabled": true

},
{
  // Inserta punto y coma al final de la línea al completar las propiedades CSS.
  "css.completion.completePropertyWithSemicolon": true,

  // De forma predeterminada, VS Code desencadena la finalización de valores de propiedad tras seleccionar una propiedad CSS. Use esta opción para deshabilitar este comportamiento.
  "css.completion.triggerPropertyValueCompletion": true,

  // Una lista de rutas de archivo relativas que apuntan a archivos JSON siguiendo el [formato de datos personalizados](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).
  // 
  // VS Code carga los datos personalizados al iniciarse para mejorar su soporte de CSS para las propiedades CSS personalizadas, las directivas, las pseudoclases y los pseudoelementos que especifique en los archivos JSON.
  // 
  // Las rutas de los archivos son relativas al espacio de trabajo y sólo se consideran las configuraciones de la carpeta del espacio de trabajo.
  "css.customData": [],

  // Ponga llaves en la misma línea que las reglas ('collapse') o coloque llaves en su propia línea ('expand').
  "css.format.braceStyle": "collapse",

  // Habilita o deshabilita el formateador CSS predeterminado.
  "css.format.enable": true,

  // Número máximo de saltos de línea que se conservarán en un fragmento cuando `css.format.preserveNewLines` esté habilitado.
  "css.format.maxPreserveNewLines": null,

  // Separe los conjuntos de reglas con una línea en blanco.
  "css.format.newlineBetweenRules": true,

  // Separa los selectores con una nueva línea.
  "css.format.newlineBetweenSelectors": true,

  // Indica si se deben conservar los saltos de línea existentes antes de los elementos.
  "css.format.preserveNewLines": true,

  // Asegúrate de que haya un carácter de espacio alrededor de los separadores de selector '>', '+', '~' (por ejemplo, 'a > b').
  "css.format.spaceAroundSelectorSeparator": false,

  // Mostrar la documentación de atributos y etiquetas mediante movimientos del puntero de CSS.
  "css.hover.documentation": true,

  // Mostrar las referencias a MDN mediante movimientos del puntero de CSS.
  "css.hover.references": true,

  // Número de parámetros incorrecto.
  "css.lint.argumentsInColorFunction": "error",

  // No use "width" o "height" al usar "padding" o "border".
  "css.lint.boxModel": "ignore",

  // Cuando use un prefijo específico del proveedor, compruebe que también haya incluido el resto de propiedades específicas del proveedor.
  "css.lint.compatibleVendorPrefixes": "ignore",

  // No use definiciones de estilo duplicadas.
  "css.lint.duplicateProperties": "ignore",

  // No use conjuntos de reglas vacíos.
  "css.lint.emptyRules": "warning",

  // Le recomendamos no usar "float". Los valores float producen CSS frágiles que pueden dañarse fácilmente si cambia cualquier aspecto del diseño.
  "css.lint.float": "ignore",

  // La regla "@font-face" debe definir las propiedades "src" y "font-family".
  "css.lint.fontFaceProperties": "warning",

  // Los colores hexadecimales deben estar formados por tres o seis números hexadecimales.
  "css.lint.hexColorLength": "error",

  // Los selectores no deben contener identificadores porque estas reglas están estrechamente ligadas a HTML.
  "css.lint.idSelector": "ignore",

  // Las modificaciones de IE solo son necesarias cuando se admite IE7 y versiones anteriores.
  "css.lint.ieHack": "ignore",

  // Evite usar `!important`. Es una indicación que la especificidad de todo el CSS se ha salido de control y debe ser refactorizada.
  "css.lint.important": "ignore",

  // Las instrucciones Import no se cargan en paralelo.
  "css.lint.importStatement": "ignore",

  // La propiedad se ignora a causa de la pantalla. Por ejemplo, con "display: inline", las propiedades "width", "height", "margin-top", "margin-bottom" y "float" no tienen ningún efecto.
  "css.lint.propertyIgnoredDueToDisplay": "warning",

  // Se sabe que el selector universal ("*") es lento.
  "css.lint.universalSelector": "ignore",

  // Regla At desconocida.
  "css.lint.unknownAtRules": "warning",

  // Propiedad desconocida.
  "css.lint.unknownProperties": "warning",

  // Propiedad específica del proveedor desconocida.
  "css.lint.unknownVendorSpecificProperties": "ignore",

  // Lista de propiedades que no se validan con la regla "unknownProperties".
  "css.lint.validProperties": [],

  // Cuando use un prefijo específico del proveedor, incluya también la propiedad estándar.
  "css.lint.vendorPrefix": "warning",

  // No se necesita una unidad para cero.
  "css.lint.zeroUnits": "ignore",

  // Hace un seguimiento de la comunicación entre VSCode y el servidor de lenguaje CSS.
  "css.trace.server": "off",

  // Habilita o deshabilita todas las validaciones.
  "css.validate": true

},
{
  // Inserta punto y coma al final de la línea al completar las propiedades CSS.
  "less.completion.completePropertyWithSemicolon": true,

  // De forma predeterminada, VS Code desencadena la finalización de valores de propiedad tras seleccionar una propiedad CSS. Use esta opción para deshabilitar este comportamiento.
  "less.completion.triggerPropertyValueCompletion": true,

  // Ponga llaves en la misma línea que las reglas ('collapse') o coloque llaves en su propia línea ('expand').
  "less.format.braceStyle": "collapse",

  // Habilite o deshabilite el formateador LESS predeterminado.
  "less.format.enable": true,

  // Número máximo de saltos de línea que se conservarán en un fragmento cuando `less.format.preserveNewLines` esté habilitado.
  "less.format.maxPreserveNewLines": null,

  // Separa los conjuntos de reglas con una línea en blanco.
  "less.format.newlineBetweenRules": true,

  // Separa los selectores con una nueva línea.
  "less.format.newlineBetweenSelectors": true,

  // Indica si se deben conservar los saltos de línea existentes antes de los elementos.
  "less.format.preserveNewLines": true,

  // Asegúrate de que haya un carácter de espacio alrededor de los separadores de selector '>', '+', '~' (por ejemplo, 'a > b').
  "less.format.spaceAroundSelectorSeparator": false,

  // Mostrar la documentación de atributos y etiquetas mediante movimientos del puntero de LESS.
  "less.hover.documentation": true,

  // Mostrar las referencias a MDN mediante movimientos del puntero de LESS.
  "less.hover.references": true,

  // Número de parámetros incorrecto.
  "less.lint.argumentsInColorFunction": "error",

  // No use "width" o "height" al usar "padding" o "border".
  "less.lint.boxModel": "ignore",

  // Cuando use un prefijo específico del proveedor, compruebe que también haya incluido el resto de propiedades específicas del proveedor.
  "less.lint.compatibleVendorPrefixes": "ignore",

  // No use definiciones de estilo duplicadas.
  "less.lint.duplicateProperties": "ignore",

  // No use conjuntos de reglas vacíos.
  "less.lint.emptyRules": "warning",

  // Le recomendamos no usar "float". Los valores float producen CSS frágiles que pueden dañarse fácilmente si cambia cualquier aspecto del diseño.
  "less.lint.float": "ignore",

  // La regla "@font-face" debe definir las propiedades "src" y "font-family".
  "less.lint.fontFaceProperties": "warning",

  // Los colores hexadecimales deben estar formados por tres o seis números hexadecimales.
  "less.lint.hexColorLength": "error",

  // Los selectores no deben contener identificadores porque estas reglas están estrechamente ligadas a HTML.
  "less.lint.idSelector": "ignore",

  // Las modificaciones de IE solo son necesarias cuando se admite IE7 y versiones anteriores.
  "less.lint.ieHack": "ignore",

  // Evite usar `!important`. Es una indicación que la especificidad de todo el CSS se ha salido de control y debe ser refactorizada.
  "less.lint.important": "ignore",

  // Las instrucciones Import no se cargan en paralelo.
  "less.lint.importStatement": "ignore",

  // La propiedad se ignora a causa de la pantalla. Por ejemplo, con "display: inline", las propiedades "width", "height", "margin-top", "margin-bottom" y "float" no tienen ningún efecto.
  "less.lint.propertyIgnoredDueToDisplay": "warning",

  // Se sabe que el selector universal ("*") es lento.
  "less.lint.universalSelector": "ignore",

  // Regla At desconocida.
  "less.lint.unknownAtRules": "warning",

  // Propiedad desconocida.
  "less.lint.unknownProperties": "warning",

  // Propiedad específica del proveedor desconocida.
  "less.lint.unknownVendorSpecificProperties": "ignore",

  // Lista de propiedades que no se validan con la regla "unknownProperties".
  "less.lint.validProperties": [],

  // Cuando use un prefijo específico del proveedor, incluya también la propiedad estándar.
  "less.lint.vendorPrefix": "warning",

  // No se necesita una unidad para cero.
  "less.lint.zeroUnits": "ignore",

  // Habilita o deshabilita todas las validaciones.
  "less.validate": true

},
{
  // Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes
  "gitlens.views.repositories.autoRefresh": true,

  // Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files
  "gitlens.views.repositories.autoReveal": true,

  // Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view
  "gitlens.views.repositories.avatars": true,

  // Specifies how the _Repositories_ view will display branches
  //  - list: Displays branches as a list
  //  - tree: Displays branches as a tree when branch names contain slashes `/`
  "gitlens.views.repositories.branches.layout": "tree",

  // Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _Repositories_ view
  //  - false: Hides the branch comparison
  //  - branch: Compares the branch with a user-selected reference
  "gitlens.views.repositories.branches.showBranchComparison": "branch",

  // Specifies whether to show the _Repositories_ view in a compact display density
  "gitlens.views.repositories.compact": false,

  // Deprecated. This setting is no longer used
  // 
  "gitlens.views.repositories.enabled": null,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `tree` or `auto`
  "gitlens.views.repositories.files.compact": true,

  // Specifies how the _Repositories_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.repositories.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.repositories.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `auto`
  "gitlens.views.repositories.files.threshold": 5,

  // Specifies whether to include working tree file status for each repository in the _Repositories_ view
  "gitlens.views.repositories.includeWorkingTree": false,

  // Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.repositories.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.repositories.pullRequests.showForBranches": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.repositories.pullRequests.showForCommits": true,

  // Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Repositories_ view
  //  - false: Hides the branch comparison
  //  - branch: Compares the current branch with a user-selected reference
  //  - working: Compares the working tree with a user-selected reference
  "gitlens.views.repositories.showBranchComparison": "working",

  // Specifies whether to show the branches for each repository in the _Repositories_ view
  "gitlens.views.repositories.showBranches": true,

  // Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view
  "gitlens.views.repositories.showCommits": true,

  // Specifies whether to show the contributors for each repository in the _Repositories_ view
  "gitlens.views.repositories.showContributors": true,

  // Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view
  "gitlens.views.repositories.showIncomingActivity": false,

  // Specifies whether to show the remotes for each repository in the _Repositories_ view
  "gitlens.views.repositories.showRemotes": true,

  // Specifies whether to show the stashes for each repository in the _Repositories_ view
  "gitlens.views.repositories.showStashes": true,

  // Specifies whether to show the tags for each repository in the _Repositories_ view
  "gitlens.views.repositories.showTags": true,

  // Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view
  "gitlens.views.repositories.showUpstreamStatus": true,

  // Specifies whether to show the worktrees for each repository in the _Repositories_ view
  "gitlens.views.repositories.showWorktrees": true

},
{
  // Specifies whether file histories will follow renames — will affect how merge commits are shown in histories
  "gitlens.advanced.fileHistoryFollowsRenames": false,

  // Specifies whether file histories will show commits from all branches
  "gitlens.advanced.fileHistoryShowAllBranches": false,

  // Specifies whether to show avatar images instead of status icons in the _File History_ view
  "gitlens.views.fileHistory.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies to folder history and when `gitlens.views.fileHistory.files.layout` is set to `tree` or `auto`
  "gitlens.views.fileHistory.files.compact": true,

  // Specifies how the _File History_ view will display files when showing the history of a folder
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.fileHistory.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.fileHistory.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies to folder history and when `gitlens.views.fileHistory.files.layout` is set to `auto`
  "gitlens.views.fileHistory.files.threshold": 5

},
{
  // Inserta punto y coma al final de la línea al completar las propiedades CSS.
  "scss.completion.completePropertyWithSemicolon": true,

  // De forma predeterminada, VS Code desencadena la finalización de valores de propiedad tras seleccionar una propiedad CSS. Use esta opción para deshabilitar este comportamiento.
  "scss.completion.triggerPropertyValueCompletion": true,

  // Ponga llaves en la misma línea que las reglas ('collapse') o coloque llaves en su propia línea ('expand').
  "scss.format.braceStyle": "collapse",

  // Habilita o deshabilita el formateador SCSS predeterminado.
  "scss.format.enable": true,

  // Número máximo de saltos de línea que se conservarán en un fragmento cuando `scss.format.preserveNewLines` esté habilitado.
  "scss.format.maxPreserveNewLines": null,

  // Separa los conjuntos de reglas con una línea en blanco.
  "scss.format.newlineBetweenRules": true,

  // Separa los selectores con una nueva línea.
  "scss.format.newlineBetweenSelectors": true,

  // Indica si se deben conservar los saltos de línea existentes antes de los elementos.
  "scss.format.preserveNewLines": true,

  // Asegúrate de que haya un carácter de espacio alrededor de los separadores de selector '>', '+', '~' (por ejemplo, 'a > b').
  "scss.format.spaceAroundSelectorSeparator": false,

  // Mostrar la documentación de atributos y etiquetas mediante movimientos del puntero de SCSS.
  "scss.hover.documentation": true,

  // Mostrar las referencias a MDN mediante movimientos del puntero de SCSS.
  "scss.hover.references": true,

  // Número de parámetros incorrecto.
  "scss.lint.argumentsInColorFunction": "error",

  // No use "width" o "height" al usar "padding" o "border".
  "scss.lint.boxModel": "ignore",

  // Cuando use un prefijo específico del proveedor, compruebe que también haya incluido el resto de propiedades específicas del proveedor.
  "scss.lint.compatibleVendorPrefixes": "ignore",

  // No use definiciones de estilo duplicadas.
  "scss.lint.duplicateProperties": "ignore",

  // No use conjuntos de reglas vacíos.
  "scss.lint.emptyRules": "warning",

  // Le recomendamos no usar "float". Los valores float producen CSS frágiles que pueden dañarse fácilmente si cambia cualquier aspecto del diseño.
  "scss.lint.float": "ignore",

  // La regla "@font-face" debe definir las propiedades "src" y "font-family".
  "scss.lint.fontFaceProperties": "warning",

  // Los colores hexadecimales deben estar formados por tres o seis números hexadecimales.
  "scss.lint.hexColorLength": "error",

  // Los selectores no deben contener identificadores porque estas reglas están estrechamente ligadas a HTML.
  "scss.lint.idSelector": "ignore",

  // Las modificaciones de IE solo son necesarias cuando se admite IE7 y versiones anteriores.
  "scss.lint.ieHack": "ignore",

  // Evite usar `!important`. Es una indicación que la especificidad de todo el CSS se ha salido de control y debe ser refactorizada.
  "scss.lint.important": "ignore",

  // Las instrucciones Import no se cargan en paralelo.
  "scss.lint.importStatement": "ignore",

  // La propiedad se ignora a causa de la pantalla. Por ejemplo, con "display: inline", las propiedades "width", "height", "margin-top", "margin-bottom" y "float" no tienen ningún efecto.
  "scss.lint.propertyIgnoredDueToDisplay": "warning",

  // Se sabe que el selector universal ("*") es lento.
  "scss.lint.universalSelector": "ignore",

  // Regla de entrada desconocida.
  "scss.lint.unknownAtRules": "warning",

  // Propiedad desconocida.
  "scss.lint.unknownProperties": "warning",

  // Propiedad específica del proveedor desconocida.
  "scss.lint.unknownVendorSpecificProperties": "ignore",

  // Lista de propiedades que no se validan con la regla "unknownProperties".
  "scss.lint.validProperties": [],

  // Cuando use un prefijo específico del proveedor, incluya también la propiedad estándar.
  "scss.lint.vendorPrefix": "warning",

  // No se necesita una unidad para cero.
  "scss.lint.zeroUnits": "ignore",

  // Habilita o deshabilita todas las validaciones.
  "scss.validate": true

},
{
  // Specifies whether to show avatar images instead of status icons in the _Line History_ view
  "gitlens.views.lineHistory.avatars": true,

  // Deprecated. This setting is no longer used
  // 
  "gitlens.views.lineHistory.enabled": null

},
{
  // Specifies how branches are sorted in quick pick menus and views
  //  - date:desc: Sorts branches by the most recent commit date in descending order
  //  - date:asc: Sorts branches by the most recent commit date in ascending order
  //  - name:asc: Sorts branches by name in ascending order
  //  - name:desc: Sorts branches by name in descending order
  "gitlens.sortBranchesBy": "date:desc",

  // Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view
  "gitlens.views.branches.avatars": true,

  // Specifies how the _Branches_ view will display branches
  //  - list: Displays branches as a list
  //  - tree: Displays branches as a tree when branch names contain slashes `/`
  "gitlens.views.branches.branches.layout": "tree",

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `gitlens.views.branches.files.layout` is set to `tree` or `auto`
  "gitlens.views.branches.files.compact": true,

  // Specifies how the _Branches_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.branches.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.branches.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `gitlens.views.branches.files.layout` is set to `auto`
  "gitlens.views.branches.files.threshold": 5,

  // Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.branches.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.branches.pullRequests.showForBranches": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.branches.pullRequests.showForCommits": true,

  // Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.branches.reveal": true,

  // Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) in the _Branches_ view
  //  - false: Hides the branch comparison
  //  - branch: Compares the branch with a user-selected reference
  "gitlens.views.branches.showBranchComparison": "branch"

},
{
  // Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view
  "gitlens.views.remotes.avatars": true,

  // Specifies how the _Remotes_ view will display branches
  //  - list: Displays branches as a list
  //  - tree: Displays branches as a tree when branch names contain slashes `/`
  "gitlens.views.remotes.branches.layout": "tree",

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `gitlens.views.remotes.files.layout` is set to `tree` or `auto`
  "gitlens.views.remotes.files.compact": true,

  // Specifies how the _Remotes_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.remotes.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.remotes.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `gitlens.views.remotes.files.layout` is set to `auto`
  "gitlens.views.remotes.files.threshold": 5,

  // Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.remotes.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.remotes.pullRequests.showForBranches": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.remotes.pullRequests.showForCommits": true,

  // Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.remotes.reveal": true

},
{
  // Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `gitlens.views.stashes.files.layout` is set to `tree` or `auto`
  "gitlens.views.stashes.files.compact": true,

  // Specifies how the _Stashes_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.stashes.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.stashes.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `gitlens.views.stashes.files.layout` is set to `auto`
  "gitlens.views.stashes.files.threshold": 5,

  // Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.stashes.reveal": true

},
{
  // Specifies how tags are sorted in quick pick menus and views
  //  - date:desc: Sorts tags by date in descending order
  //  - date:asc: Sorts tags by date in ascending order
  //  - name:asc: Sorts tags by name in ascending order
  //  - name:desc: Sorts tags by name in descending order
  "gitlens.sortTagsBy": "date:desc",

  // Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view
  "gitlens.views.tags.avatars": true,

  // Specifies how the _Tags_ view will display tags
  //  - list: Displays tags as a list
  //  - tree: Displays tags as a tree when tags names contain slashes `/`
  "gitlens.views.tags.branches.layout": "tree",

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `gitlens.views.tags.files.layout` is set to `tree` or `auto`
  "gitlens.views.tags.files.compact": true,

  // Specifies how the _Tags_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.tags.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.tags.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `gitlens.views.tags.files.layout` is set to `auto`
  "gitlens.views.tags.files.threshold": 5,

  // Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.tags.reveal": true

},
{
  // Cuando se habilita, comprueba automáticamente las extensiones para las actualizaciones. Si una extensión tiene una actualización, se marca como obsoleta en la vista de extensiones. Las actualizaciones se obtienen de un servicio en línea de Microsoft.
  "extensions.autoCheckUpdates": true,

  // Controla el comportamiento de actualización automática de las extensiones. Las actualizaciones se obtienen de un servicio en línea de Microsoft.
  //  - true: Se omiten las actualizaciones de descarga e instalación automáticas para todas las extensiones excepto para esas actualizaciones.
  //  - onlyEnabledExtensions: Descargar e instalar actualizaciones automáticamente solo para las extensiones habilitadas, excepto para esas actualizaciones, se omiten. Las extensiones deshabilitadas no se actualizan automáticamente.
  //  - false: Las extensiones no se actualizan automáticamente.
  "extensions.autoUpdate": true,

  // Cuando esta opción está habilitada, los editores con detalles de la extensión se cerrarán automáticamente al salir de la vista de extensiones. 
  "extensions.closeExtensionDetailsOnViewChange": false,

  // Cuando una extensión aparece aquí, no se mostrará un mensaje de confirmación cuando esa extensión gestione un URI.
  "extensions.confirmedUriHandlerExtensionIds": [],

  // Configura una extensión para que se ejecute en un proceso de host de extensión diferente.
  "extensions.experimental.affinity": {},

  // Cuando se habilita, las extensiones que declaran el evento de activación "onStartupFinished" se activarán después de un tiempo de espera.
  "extensions.experimental.deferredStartupFinishedActivation": false,

  // Cuando esta opción está habilitada, las notificaciones para las recomendaciones de la extensión no se mostrarán.
  "extensions.ignoreRecommendations": false,

  // Esta configuración está en desuso. Use la configuración extensions.ignoreRecommendations para controlar las notificaciones de recomendación. Utilice las acciones de visibilidad de la vista Extensiones para ocultar la vista de recomendadas de forma predeterminada.
  // 
  "extensions.showRecommendationsOnlyOnDemand": false,

  // Reemplazar el soporte de área de trabajo no confiable de una extensión. Las extensiones que usen "true" estarán siempre habilitadas. Las extensiones que usen "limited" estarán siempre habilitadas, y la extensión ocultará la funcionalidad que requiera confianza. Las extensiones que usen "false" solo se habilitarán cuando el área de trabajo sea de confianza.
  "extensions.supportUntrustedWorkspaces": {},

  // Reemplazar el soporte de áreas de trabajo virtuales de una extensión.
  "extensions.supportVirtualWorkspaces": {},

  // Habilite el host de extensiones de trabajo web.
  //  - true: Siempre se iniciará el host de extensiones del rol de trabajo.
  //  - false: Nunca se iniciará el host de extensiones del rol de trabajo.
  //  - auto: El host de extensiones del rol de trabajo se iniciará cuando lo requiera una extensión Web.
  "extensions.webWorker": "auto"

},
{
  // Habilite/desactive la función de desplazamiento inteligente en la vista de salida. El desplazamiento inteligente le permite bloquear el desplazamiento automáticamente al hacer clic en la vista de salida y se desbloquea al hacer clic en la última línea.
  "output.smartScroll.enabled": true

},
{
  // Lista de extensiones que se omitirán durante la sincronización. El identificador de una extensión es siempre "${publisher}.${name}". Por ejemplo: "vscode.csharp".
  "settingsSync.ignoredExtensions": [],

  // Configure los ajustes que se omitirán durante la sincronización.
  "settingsSync.ignoredSettings": [],

  // Sincronice los enlaces de teclado para cada plataforma.
  "settingsSync.keybindingsPerPlatform": true

},
{
  // Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view
  "gitlens.views.worktrees.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `gitlens.views.worktrees.files.layout` is set to `tree` or `auto`
  "gitlens.views.worktrees.files.compact": true,

  // Specifies how the _Worktrees_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.worktrees.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.worktrees.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `gitlens.views.worktrees.files.layout` is set to `auto`
  "gitlens.views.worktrees.files.threshold": 5,

  // Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.worktrees.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.worktrees.pullRequests.showForBranches": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.worktrees.pullRequests.showForCommits": true,

  // Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.worktrees.reveal": true,

  // Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag. etc) in the _Worktrees_ view
  //  - false: Hides the branch comparison
  //  - branch: Compares the worktree branch with a user-selected reference
  "gitlens.views.worktrees.showBranchComparison": "working",

  // Specifies the default path in which new worktrees will be created
  "gitlens.worktrees.defaultLocation": null,

  // Specifies how and when to open a worktree after it is created
  //  - always: Always open the new worktree in the current window
  //  - alwaysNewWindow: Always open the new worktree in a new window
  //  - onlyWhenEmpty: Only open the new worktree in the current window when no folder is opened
  //  - never: Never open the new worktree
  //  - prompt: Always prompt to open the new worktree
  "gitlens.worktrees.openAfterCreate": "prompt",

  // Specifies whether to prompt for a path when creating new worktrees
  "gitlens.worktrees.promptForLocation": true

},
{
  // Specifies how contributors are sorted in quick pick menus and views
  //  - count:desc: Sorts contributors by commit count in descending order
  //  - count:asc: Sorts contributors by commit count in ascending order
  //  - date:desc: Sorts contributors by the most recent commit date in descending order
  //  - date:asc: Sorts contributors by the most recent commit date in ascending order
  //  - name:asc: Sorts contributors by name in ascending order
  //  - name:desc: Sorts contributors by name in descending order
  "gitlens.sortContributorsBy": "count:desc",

  // Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view
  "gitlens.views.contributors.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `gitlens.views.contributors.files.layout` is set to `tree` or `auto`
  "gitlens.views.contributors.files.compact": true,

  // Specifies how the _Contributors_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.contributors.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.contributors.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `gitlens.views.contributors.files.layout` is set to `auto`
  "gitlens.views.contributors.files.threshold": 5,

  // Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.contributors.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.contributors.pullRequests.showForCommits": true,

  // Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view
  "gitlens.views.contributors.reveal": true,

  // Specifies whether to show commits from all branches in the _Contributors_ view
  "gitlens.views.contributors.showAllBranches": false,

  // Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size
  "gitlens.views.contributors.showStatistics": false

},
{
  // Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view
  "gitlens.views.searchAndCompare.avatars": true,

  // Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `gitlens.views.searchAndCompare.files.layout` is set to `tree` or `auto`
  "gitlens.views.searchAndCompare.files.compact": true,

  // Specifies how the _Search & Compare_ view will display files
  //  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.searchAndCompare.files.threshold` value and the number of files at each nesting level
  //  - list: Displays files as a list
  //  - tree: Displays files as a tree
  "gitlens.views.searchAndCompare.files.layout": "auto",

  // Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `gitlens.views.searchAndCompare.files.layout` is set to `auto`
  "gitlens.views.searchAndCompare.files.threshold": 5,

  // Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.searchAndCompare.pullRequests.enabled": true,

  // Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.views.searchAndCompare.pullRequests.showForCommits": true

},
{
  // Controla si las celdas de código de la ventana interactiva están contraídas de forma predeterminada.
  "interactiveWindow.collapseCellInputCode": "fromEditor",

  // Cuando se habilita, las rutas de navegación de bloc de notas contienen celdas de código.
  "notebook.breadcrumbs.showCodeCells": true,

  // Controla dónde se representa el indicador de foco, ya sea a lo largo de los bordes de la celda o en el medianil izquierdo.
  "notebook.cellFocusIndicator": "gutter",

  // Indica si la barra de herramientas de celdas debe mostrarse u ocultarse.
  "notebook.cellToolbarLocation": {
    "default": "right"
  },

  // Indica si la barra de herramientas de celda debe aparecer al pasar el cursor o hacer clic.
  "notebook.cellToolbarVisibility": "click",

  // Controlar si el editor del bloc de notas debe representarse en un formato compacto. Por ejemplo, cuando se activa, disminuirá el ancho del margen izquierdo.
  "notebook.compactView": true,

  // Controla si la acción de los resultados se debe representar en la barra de herramientas de salida.
  "notebook.consolidatedOutputButton": true,

  // Controla si se muestran acciones adicionales en una lista desplegable junto al botón ejecutar.
  "notebook.consolidatedRunButton": false,

  // Indica si se va a usar el editor de diferencias de texto mejorado para el bloc de notas.
  "notebook.diff.enablePreview": true,

  // Ocultar las diferencias de los metadatos
  "notebook.diff.ignoreMetadata": false,

  // Ocultar las diferencias de los resultados
  "notebook.diff.ignoreOutputs": false,

  // Lista de prioridades para los tipos de mimo de salida
  "notebook.displayOrder": [],

  // Controla si el editor del bloc de notas debe permitir mover celdas mediante arrastrar y colocar.
  "notebook.dragAndDropEnabled": true,

  // Configuración de los editores de código utilizados en los blocs de notas. Se puede usar para personalizar la mayoría de las opciones del editor*.
  "notebook.editorOptionsCustomizations": {},

  // Usar una región desplazable para la salida del bloc de notas cuando supere el límite
  "notebook.experimental.outputScrolling": false,

  // Controla si se debe representar una barra de herramientas global dentro del editor de bloc de notas.
  "notebook.globalToolbar": true,

  // Controla si las acciones de la barra de herramientas del Bloc de notas deben representar la etiqueta o no.
  "notebook.globalToolbarShowLabel": "always",

  // Controlar dónde deberían aparecer las acciones de inserción de celda.
  //  - betweenCells: Barra de herramientas que aparece al mantener el mouse entre las celdas.
  //  - notebookToolbar: Barra de herramientas situada en la parte superior del editor del Bloc de notas.
  //  - both: Ambas barras de herramientas.
  //  - hidden: Las acciones de inserción no aparecen en ningún lugar.
  "notebook.insertToolbarLocation": "both",

  // Controle el tipo de selector de kernel que desea usar.
  //  - all: Mostrar todos los kernel.
  //  - mru: Experimento: mostrar los kernel usados recientemente.
  "notebook.kernelPicker.type": "mru",

  // Controla la visualización de los números de línea en el editor de celdas.
  "notebook.lineNumbers": "off",

  // Controla el tamaño de fuente en píxeles de la revisión representada en los blocs de notas. Cuando se establece en `0`, se usa el 120 % de `editor.fontSize`.
  "notebook.markup.fontSize": 0,

  // Cuando se activa el cursor puede navegar a la celda siguiente o anterior cuando el cursor actual en el editor de celdas está en la primera o la última línea.
  "notebook.navigation.allowNavigateToSurroundingCells": true,

  // Cuando se habilita, el esquema del bloc de notas muestra celdas de código.
  "notebook.outline.showCodeCells": false,

  // Controla el número de líneas de texto que se representan en una salida de texto.
  "notebook.output.textLineLimit": 30,

  // Controla si las líneas de la salida deben encapsularse.
  "notebook.output.wordWrap": false,

  // Familia de fuentes del texto de salida de las celdas del bloc de notas. Cuando se establece en vacío, se usa `editor.fontFamily`.
  "notebook.outputFontFamily": "",

  // Tamaño de fuente del texto de salida de las celdas del bloc de notas. Cuando se establece en 0, se usa `editor.fontSize`.
  "notebook.outputFontSize": 0,

  // Alto de línea del texto de salida para las celdas del bloc de notas.
  //  - Cuando se establece en 0, se usa el alto de línea del editor.
  //  - Los valores entre 0 y 8 se usarán como multiplicador con el tamaño de fuente.
  //  - Los valores mayores o iguales que 8 se usarán como valores efectivos.
  "notebook.outputLineHeight": 0,

  // Indica si se debe mostrar la barra de estado de la celda.
  //  - hidden: La barra de estado de la celda siempre está oculta.
  //  - visible: La barra de estado de la celda siempre está visible.
  //  - visibleAfterExecute: La barra de estado de la celda se oculta hasta que se ha ejecutado la celda. A continuación, se hace visible para mostrar el estado de ejecución.
  "notebook.showCellStatusBar": "visible",

  // Controla cuándo se muestra la flecha de plegado del encabezado de Markdown.
  //  - always: Los controles plegables siempre están visibles.
  //  - never: No mostrar nunca los controles de plegado y reducir el tamaño del medianil.
  //  - mouseover: Los controles plegables sólo son visibles al pasar el mouse.
  "notebook.showFoldingControls": "mouseover",

  // Indica si se debe utilizar una pila para deshacer o rehacer separada para cada celda.
  "notebook.undoRedoPerCell": true

},
{
  // Desplazar automáticamente la ventana interactiva para mostrar la salida de la última instrucción ejecutada. Si este valor es falso, la ventana solo se desplazará si la última celda era ya aquella a la que se había desplazado.
  "interactiveWindow.alwaysScrollOnNewCell": true,

  // Controla si las sesiones o el historial de la ventana interactiva deben restaurarse a través de recargas de ventana. Si el estado de los controladores usados en Windows Interactivo se conserva entre recargas de ventana se controla mediante extensiones que contribuyen a los controladores.
  "interactiveWindow.restore": false

},
{
  // Cuando está habilitado, los representadores lentos se generan automáticamente.
  "application.experimental.rendererProfiling": false

},
{
  // Specifies whether to show avatar images in the file blame annotations
  "gitlens.blame.avatars": true,

  // Specifies whether to compact (deduplicate) matching adjacent file blame annotations
  "gitlens.blame.compact": true,

  // Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.blame.dateFormat": null,

  // Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.blame.dateFormat` setting
  "gitlens.blame.format": "${message|50?} ${agoOrDate|14-}",

  // Specifies whether to provide a heatmap indicator in the file blame annotations
  "gitlens.blame.heatmap.enabled": true,

  // Specifies where the heatmap indicators will be shown in the file blame annotations
  //  - left: Adds a heatmap indicator on the left edge of the file blame annotations
  //  - right: Adds a heatmap indicator on the right edge of the file blame annotations
  "gitlens.blame.heatmap.location": "right",

  // Specifies whether to highlight lines associated with the current line
  "gitlens.blame.highlight.enabled": true,

  // Specifies where the associated line highlights will be shown
  //  - gutter: Adds an indicator to the gutter
  //  - line: Adds a full-line highlight background color
  //  - overview: Adds an indicator to the scroll bar
  "gitlens.blame.highlight.locations": [
    "gutter",
    "line",
    "overview"
  ],

  // Specifies whether file blame annotations will be separated by a small gap
  "gitlens.blame.separateLines": true,

  // Specifies how the file blame annotations will be toggled
  //  - file: Toggles each file individually
  //  - window: Toggles the window, i.e. all files at once
  "gitlens.blame.toggleMode": "file"

},
{
  // Habilitar tareas automáticas: tenga en cuenta que las tareas no se ejecutarán en un área de trabajo que no sea de confianza.
  //  - on: Siempre
  //  - off: Nunca
  "task.allowAutomaticTasks": "on",

  // Controla la habilitación de "provideTasks" para toda la extensión del proveedor de tareas. Si el comando Tasks: Run Task es lento, la deshabilitación de la detección automática para los proveedores de tareas puede ayudar. Las extensiones individuales también pueden proporcionar ajustes que deshabiliten la detección automática.
  "task.autoDetect": "on",

  // Configura si se debe mostrar el símbolo del sistema del emparejador del problema al ejecutar una tarea. Establézcalo en "true" para que no se pregunte nunca, o use un diccionario de tipos de tarea para desactivar la solicitud solo para tipos de tarea específicos.
  "task.problemMatchers.neverPrompt": false,

  // Controla si se debe mostrar el detalle de tarea para tareas que contienen un detalle en las selecciones rápidas de tareas, como Ejecutar tarea.
  "task.quickOpen.detail": true,

  // Controla el número de elementos recientes a los que se hace un seguimiento en el cuadro de diálogo de apertura rápida de la tarea.
  "task.quickOpen.history": 30,

  // Hace que el comando Tareas: Ejecutar tarea use el comportamiento "Mostrar todo" más lento en lugar del selector de dos niveles más rápido, en el que las tareas se agrupan por proveedor.
  "task.quickOpen.showAll": false,

  // Controla si la selección rápida de la tarea se omite cuando solo hay una tarea para elegir.
  "task.quickOpen.skip": false,

  // Al volver a cargar la ventana, vuelva a conectarse a las tareas que tengan buscadores de coincidencias de problemas.
  "task.reconnection": true,

  // Guarda todos los editores con modificaciones antes de ejecutar una tarea.
  //  - always: Guarda siempre todos los editores antes de la ejecución.
  //  - never: Nunca guarda los editores antes de la ejecución.
  //  - prompt: Pregunta si deben guardarse los editores antes de la ejecución.
  "task.saveBeforeRun": "always",

  // Configura si se muestra una advertencia cuando un proveedor es lento
  "task.slowProviderWarning": true

},
{
  // Al abrir un archivo desde el explorador en un terminal, determina qué tipo de terminal se iniciará
  //  - integrated: Use el terminal integrado de VS Code.
  //  - external: Use el terminal externo configurado.
  "terminal.explorerKind": "integrated",

  // Personaliza qué terminal debe ejecutarse en Linux.
  "terminal.external.linuxExec": "xterm",

  // Personaliza qué aplicación terminal se ejecutará en macOS.
  "terminal.external.osxExec": "Terminal.app",

  // Personaliza qué terminal debe ejecutarse en Windows.
  "terminal.external.windowsExec": "C:\\Windows\\System32\\cmd.exe"

},
{
  // Indica si se permiten o no los enlaces de teclado de presión simultánea en el terminal. Tenga en cuenta que cuando es true y la pulsación de tecla da como resultado una presión simultánea, se omitirá `terminal.integrated.commandsToSkipShell`, establecer este valor en false resulta particularmente útil cuando quiere que ctrl+k vaya al shell (no a VS Code).
  "terminal.integrated.allowChords": true,

  // Indica si se va a permitir que las teclas de acceso de la barra de menús (por ejemplo, Alt+F) desencadenen la apertura de dicha barra. Tenga en cuenta que esto hará que todas las pulsaciones de teclas Alt omitan el shell cuando el valor es true. Esta acción no hace nada en macOS.
  "terminal.integrated.allowMnemonics": false,

  // Si se habilita, al hacer Alt/opción + clic se cambiará la posición del cursor de mensaje debajo del mouse cuando `editor.multiCursorModifier` esté establecido en `'alt'` (valor predeterminado). En función del shell, puede que esto no funcione de forma confiable.
  "terminal.integrated.altClickMovesCursor": true,

  // Perfil del terminal que se va a usar en Linux para el uso de terminales relacionados con la automatización, como tareas y depuración. Esta configuración se omitirá actualmente si se establece `terminal.integrated.automationShell.linux` (ahora en desuso).
  "terminal.integrated.automationProfile.linux": null,

  // Perfil del terminal que se va a emplear para el uso de terminales relacionados con la automatización, como tareas y depuración. Esta configuración se omitirá actualmente si se establece `terminal.integrated.automationShell.osx` (ahora en desuso).
  "terminal.integrated.automationProfile.osx": null,

  // Perfil del terminal que se va a usar para el uso de terminales relacionados con la automatización, como tareas y depuración. Esta configuración se omitirá actualmente si se establece `terminal.integrated.automationShell.windows` (ahora en desuso).
  "terminal.integrated.automationProfile.windows": null,

  // Esto está en desuso, la nueva manera recomendada de configurar el shell de automatización es crear un perfil de automatización de terminal con `terminal.integrated.automationProfile.linux`. Esto tendrá prioridad sobre la nueva configuración del perfil de automatización, aunque cambiará en el futuro.
  // Ruta de acceso que, cuando se establece, invalida `terminal.integrated.shell.linux` e ignora los valores de `shellArgs` para el uso del terminal relacionado con la automatización, como las tareas y la depuración.
  "terminal.integrated.automationShell.linux": null,

  // Esto está en desuso, la nueva manera recomendada de configurar el shell de automatización es crear un perfil de automatización de terminal con `terminal.integrated.automationProfile.osx`. Esto tendrá prioridad sobre la nueva configuración del perfil de automatización, aunque cambiará en el futuro.
  // Ruta de acceso que, cuando se establece, invalida `terminal.integrated.shell.osx` e ignora los valores de `shellArgs` para el uso del terminal relacionado con la automatización, como las tareas y la depuración.
  "terminal.integrated.automationShell.osx": null,

  // Esto está en desuso, la nueva manera recomendada de configurar el shell de automatización es crear un perfil de automatización de terminal con `terminal.integrated.automationProfile.windows`. Esto tendrá prioridad sobre la nueva configuración del perfil de automatización, aunque cambiará en el futuro.
  // Ruta de acceso que, cuando se establece, invalida `terminal.integrated.shell.windows` e ignora los valores de `shellArgs` para el uso del terminal relacionado con la automatización, como las tareas y la depuración.
  "terminal.integrated.automationShell.windows": null,

  // Un conjunto de mensajes a los que, cuando se encuentre en el terminal, se responderá automáticamente. Siempre que el mensaje sea lo suficientemente específico, esto puede ayudar a automatizar las respuestas comunes.
  // 
  // Notas:
  // 
  // : use `"Terminate batch job (Y/N)": "Y\r"` para responder automáticamente al mensaje de finalización del trabajo por lotes en Windows.
  // : el mensaje incluye secuencias de escape para que la respuesta no se produzca con texto con estilo.
  // : cada respuesta solo puede producirse una vez cada segundo.
  // : use `"\r"` en la respuesta para indicar la tecla Entrar.
  // : para anular una clave predeterminada, establezca el valor en NULL.
  // : reinicie VS Code si no se aplican nuevos.
  "terminal.integrated.autoReplies": {},

  // Número de milisegundos que se mostrará la campana en una pestaña del terminal cuando se desencadene.
  "terminal.integrated.bellDuration": 1000,

  // Conjunto de identificadores de comando cuyos enlaces de teclado no se enviarán al shell, sino que siempre se controlarán con VS Code. Esto permite que los enlaces de teclado que normalmente consumiría el shell actúen igual que cuando el terminal no tiene el foco; por ejemplo, "Ctrl+P" para iniciar Quick Open.
  // 
  // &nbsp;
  // 
  //  Muchos comandos se omiten de forma predeterminada. Para reemplazar un valor predeterminado y pasar mejor al shell el enlace de teclado de dicho comando, agregue el comando precedido por el carácter "-". Por ejemplo, agregue "-workbench.action.quickOpen" para que "Ctrl+P" llegue al shell.
  // 
  // &nbsp;
  // 
  //  La siguiente lista de comandos omitidos predeterminados se trunca cuando se visualiza en el editor de configuraciones. Para ver la lista completa, [abrir el archivo JSON de configuración predeterminada](command:workbench.action.openRawDefaultSettings 'Abrir la configuración predeterminada (JSON)') y busque el primer comando de la lista siguiente.
  // 
  // &nbsp;
  // 
  // Comandos omitidos predeterminados:
  // 
  // - editor.action.toggleTabFocusMode
  // - notifications.hideList
  // - notifications.hideToasts
  // - workbench.action.closeQuickOpen
  // - workbench.action.debug.continue
  // - workbench.action.debug.pause
  // - workbench.action.debug.restart
  // - workbench.action.debug.run
  // - workbench.action.debug.start
  // - workbench.action.debug.stepInto
  // - workbench.action.debug.stepOut
  // - workbench.action.debug.stepOver
  // - workbench.action.debug.stop
  // - workbench.action.firstEditorInGroup
  // - workbench.action.focusActiveEditorGroup
  // - workbench.action.focusEighthEditorGroup
  // - workbench.action.focusFifthEditorGroup
  // - workbench.action.focusFirstEditorGroup
  // - workbench.action.focusFourthEditorGroup
  // - workbench.action.focusLastEditorGroup
  // - workbench.action.focusNextPart
  // - workbench.action.focusPreviousPart
  // - workbench.action.focusSecondEditorGroup
  // - workbench.action.focusSeventhEditorGroup
  // - workbench.action.focusSixthEditorGroup
  // - workbench.action.focusThirdEditorGroup
  // - workbench.action.lastEditorInGroup
  // - workbench.action.navigateDown
  // - workbench.action.navigateLeft
  // - workbench.action.navigateRight
  // - workbench.action.navigateUp
  // - workbench.action.nextEditor
  // - workbench.action.nextEditorInGroup
  // - workbench.action.nextPanelView
  // - workbench.action.nextSideBarView
  // - workbench.action.openNextRecentlyUsedEditor
  // - workbench.action.openNextRecentlyUsedEditorInGroup
  // - workbench.action.openPreviousRecentlyUsedEditor
  // - workbench.action.openPreviousRecentlyUsedEditorInGroup
  // - workbench.action.previousEditor
  // - workbench.action.previousEditorInGroup
  // - workbench.action.previousPanelView
  // - workbench.action.previousSideBarView
  // - workbench.action.quickOpen
  // - workbench.action.quickOpenLeastRecentlyUsedEditor
  // - workbench.action.quickOpenLeastRecentlyUsedEditorInGroup
  // - workbench.action.quickOpenPreviousEditor
  // - workbench.action.quickOpenPreviousRecentlyUsedEditor
  // - workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup
  // - workbench.action.quickOpenView
  // - workbench.action.showCommands
  // - workbench.action.tasks.build
  // - workbench.action.tasks.reRunTask
  // - workbench.action.tasks.restartTask
  // - workbench.action.tasks.runTask
  // - workbench.action.tasks.showLog
  // - workbench.action.tasks.showTasks
  // - workbench.action.tasks.terminate
  // - workbench.action.tasks.test
  // - workbench.action.terminal.acceptSelectedSuggestion
  // - workbench.action.terminal.clear
  // - workbench.action.terminal.clearSelection
  // - workbench.action.terminal.copyAndClearSelection
  // - workbench.action.terminal.copyLastCommandOutput
  // - workbench.action.terminal.copySelection
  // - workbench.action.terminal.copySelectionAsHtml
  // - workbench.action.terminal.deleteToLineStart
  // - workbench.action.terminal.deleteWordLeft
  // - workbench.action.terminal.deleteWordRight
  // - workbench.action.terminal.findNext
  // - workbench.action.terminal.findPrevious
  // - workbench.action.terminal.focus
  // - workbench.action.terminal.focusAtIndex1
  // - workbench.action.terminal.focusAtIndex2
  // - workbench.action.terminal.focusAtIndex3
  // - workbench.action.terminal.focusAtIndex4
  // - workbench.action.terminal.focusAtIndex5
  // - workbench.action.terminal.focusAtIndex6
  // - workbench.action.terminal.focusAtIndex7
  // - workbench.action.terminal.focusAtIndex8
  // - workbench.action.terminal.focusAtIndex9
  // - workbench.action.terminal.focusFind
  // - workbench.action.terminal.focusNext
  // - workbench.action.terminal.focusNextPane
  // - workbench.action.terminal.focusPrevious
  // - workbench.action.terminal.focusPreviousPane
  // - workbench.action.terminal.goToRecentDirectory
  // - workbench.action.terminal.hideFind
  // - workbench.action.terminal.hideSuggestWidget
  // - workbench.action.terminal.kill
  // - workbench.action.terminal.killEditor
  // - workbench.action.terminal.moveToEditor
  // - workbench.action.terminal.moveToLineEnd
  // - workbench.action.terminal.moveToLineStart
  // - workbench.action.terminal.moveToTerminalPanel
  // - workbench.action.terminal.new
  // - workbench.action.terminal.newInActiveWorkspace
  // - workbench.action.terminal.paste
  // - workbench.action.terminal.pasteSelection
  // - workbench.action.terminal.quickFix
  // - workbench.action.terminal.resizePaneDown
  // - workbench.action.terminal.resizePaneLeft
  // - workbench.action.terminal.resizePaneRight
  // - workbench.action.terminal.resizePaneUp
  // - workbench.action.terminal.runActiveFile
  // - workbench.action.terminal.runRecentCommand
  // - workbench.action.terminal.runSelectedText
  // - workbench.action.terminal.scrollDown
  // - workbench.action.terminal.scrollDownPage
  // - workbench.action.terminal.scrollToBottom
  // - workbench.action.terminal.scrollToNextCommand
  // - workbench.action.terminal.scrollToPreviousCommand
  // - workbench.action.terminal.scrollToTop
  // - workbench.action.terminal.scrollUp
  // - workbench.action.terminal.scrollUpPage
  // - workbench.action.terminal.selectAll
  // - workbench.action.terminal.selectNextPageSuggestion
  // - workbench.action.terminal.selectNextSuggestion
  // - workbench.action.terminal.selectPrevPageSuggestion
  // - workbench.action.terminal.selectPrevSuggestion
  // - workbench.action.terminal.selectToNextCommand
  // - workbench.action.terminal.selectToNextLine
  // - workbench.action.terminal.selectToPreviousCommand
  // - workbench.action.terminal.selectToPreviousLine
  // - workbench.action.terminal.sendSequence
  // - workbench.action.terminal.showAccessibilityHelp
  // - workbench.action.terminal.sizeToContentWidth
  // - workbench.action.terminal.split
  // - workbench.action.terminal.splitInActiveWorkspace
  // - workbench.action.terminal.toggleFindCaseSensitive
  // - workbench.action.terminal.toggleFindRegex
  // - workbench.action.terminal.toggleFindWholeWord
  // - workbench.action.terminal.toggleTerminal
  // - workbench.action.toggleFullScreen
  // - workbench.action.toggleMaximizedPanel
  // - workbench.action.togglePanel
  "terminal.integrated.commandsToSkipShell": [],

  // Controla si se debe confirmar cuándo se cierra la ventana si hay sesiones de terminal activas.
  //  - never: No confirmar nunca.
  //  - always: Confirmar siempre si hay terminales.
  //  - hasChildProcesses: Confirme si hay algún terminal que tenga procesos secundarios.
  "terminal.integrated.confirmOnExit": "never",

  // Controla si se debe confirmar la terminación de los terminales cuando tengan procesos secundarios. Cuando se establece en el editor, los terminales del área del editor se marcarán como modificados cuando tengan procesos secundarios. Tenga en cuenta que es posible que la detección de procesos secundarios no funcione bien para shells como Git Bash, que no ejecutan sus procesos como procesos secundarios del shell.
  //  - never: No confirmar nunca.
  //  - editor: Confirme si el terminal está en el editor.
  //  - panel: Confirme si el terminal está en el panel.
  //  - always: Confirma si el terminal está en el editor o en el panel.
  "terminal.integrated.confirmOnKill": "editor",

  // Controla si el texto seleccionado en el terminal se copiará en el Portapapeles.
  "terminal.integrated.copyOnSelection": false,

  // Controla si el cursor del terminal parpadea.
  "terminal.integrated.cursorBlinking": false,

  // Controla el estilo de cursor del terminal.
  "terminal.integrated.cursorStyle": "block",

  // Controla el ancho del cursor cuando `terminal.integrated.cursorStyle` se establece en `line`.
  "terminal.integrated.cursorWidth": 1,

  // Indica si se deben dibujar glifos personalizados para los caracteres de dibujo de elementos de bloque y cuadros en lugar de usar la fuente, lo que normalmente produce una mejor representación con líneas continuas. Tenga en cuenta que esto no funciona con el representador DOM.
  "terminal.integrated.customGlyphs": true,

  // Una ruta de acceso de inicio explícita en la que se iniciará el terminal; se usa como el directorio de trabajo actual (cwd) para el proceso de shell. Puede resultar especialmente útil en una configuración de área de trabajo si la raíz de directorio no es un cwd práctico.
  "terminal.integrated.cwd": "",

  // Controla dónde aparecerán los terminales recién creados.
  //  - editor: Crear terminales en el editor
  //  - view: Crear terminales en la vista de terminal
  "terminal.integrated.defaultLocation": "view",

  // El perfil predeterminado utilizado en Linux. Esta configuración se ignorará si se establecen `terminal.integrated.shell.linux` o `terminal.integrated.shellArgs.linux`.
  "terminal.integrated.defaultProfile.linux": null,

  // El perfil predeterminado utilizado en macOS. Esta configuración se ignorará si se establecen `terminal.integrated.shell.osx` o `terminal.integrated.shellArgs.osx`.
  "terminal.integrated.defaultProfile.osx": null,

  // El perfil predeterminado utilizado en Windows. Esta configuración se ignorará si se establecen `terminal.integrated.shell.windows` o `terminal.integrated.shellArgs.windows`.
  //  - null: Detectar automáticamente el valor predeterminado
  //  - PowerShell: $(terminal-powershell) PowerShell
  // - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
  //  - Windows PowerShell: $(terminal-powershell) Windows PowerShell
  // - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
  //  - Git Bash: $(terminal) Git Bash
  // - path: C:\Program Files\Git\bin\bash.exe
  // - args: ['--login','-i']
  //  - Command Prompt: $(terminal-cmd) Command Prompt
  // - path: C:\Windows\System32\cmd.exe
  // - args: []
  //  - Terminal de depuración de JavaScript: $($(debug)) Terminal de depuración de JavaScript
  // - extensionIdentifier: ms-vscode.js-debug
  "terminal.integrated.defaultProfile.windows": null,

  // Controla si debe detectarse y establecerse la variable de entorno "$LANG" en una opción compatible con UTF-8, ya que el terminal de VS Code solo admite datos con codificación UTF-8 procedentes del shell.
  //  - auto: Establezca la variable de entorno "$LANG" si la variable no existe o no termina en "'.UTF-8'".
  //  - off: No establezca la variable de entorno "$LANG".
  //  - on: Establezca siempre la variable de entorno "$LANG".
  "terminal.integrated.detectLocale": "auto",

  // Controla si el texto en negrita del terminal usará siempre la variante de color de ANSI "bright".
  "terminal.integrated.drawBoldTextInBrightColors": true,

  // Controla si la campana de terminal está habilitada. Se muestra como una campana visual junto al nombre del terminal.
  "terminal.integrated.enableBell": false,

  // Indica si se deben habilitar los vínculos de archivo en los terminales. Los vínculos pueden ser lentos cuando se trabaja en una unidad de red en particular porque cada vínculo de archivo se comprueba en el sistema de archivos. Cambiar esto solo surtirá efecto en los terminales nuevos.
  //  - off: Siempre desactivado.
  //  - on: Siempre activado.
  //  - notRemote: Habilitar solo cuando no está en un área de trabajo remota.
  "terminal.integrated.enableFileLinks": "on",

  // Muestra un cuadro de diálogo de advertencia al pegar varias líneas en el terminal. El cuadro de diálogo no muestra cuando:
  // 
  // - El modo de pegado entre corchetes está habilitado (el shell admite pegar varias líneas de forma nativa)
  // - La línea de lectura del shell controla el pegado (en el caso de pwsh)
  "terminal.integrated.enableMultiLinePasteWarning": true,

  // Conservar las sesiones de terminal o el historial del área de trabajo entre recargas de ventana.
  "terminal.integrated.enablePersistentSessions": true,

  // Objeto con variables de entorno que se agregarán al proceso de VS Code que el terminal va a usar en Linux. Establézcalo en "null" para eliminar la variable de entorno.
  "terminal.integrated.env.linux": {},

  // Objeto con variables de entorno que se agregarán al proceso de VS Code que el terminal va a usar en macOS. Establézcalo en "null" para eliminar la variable de entorno.
  "terminal.integrated.env.osx": {},

  // Objeto con variables de entorno que se agregarán al proceso de VS Code que el terminal va a usar en Windows. Establézcalo en "null" para eliminar la variable de entorno.
  "terminal.integrated.env.windows": {},

  // Indica si se va a mostrar el indicador de cambios del entorno en cada terminal, que explica si las extensiones han realizado o quieren realizar cambios en el entorno del terminal.
  //  - off: Deshabilite el indicador.
  //  - on: Habilite el indicador.
  //  - warnonly: Mostrar solo el indicador de advertencia cuando el entorno de un terminal está "obsoleto", no el indicador de información que muestra que una extensión ha modificado el entorno de un terminal.
  "terminal.integrated.environmentChangesIndicator": "warnonly",

  // Indica si se deben reiniciar los terminales de forma automática en caso de que la extensión quiera contribuir a su entorno y aún no se haya interactuado con ellos.
  "terminal.integrated.environmentChangesRelaunch": true,

  // Desplazamiento del multiplicador de velocidad al presionar "Alt".
  "terminal.integrated.fastScrollSensitivity": 5,

  // Controla la familia de fuentes del terminal. De forma predeterminada, el valor es `editor.fontFamily`.
  "terminal.integrated.fontFamily": "",

  // Controla el tamaño de la fuente en píxeles del terminal.
  "terminal.integrated.fontSize": 14,

  // Grosor de fuente que se va a usar en el terminal para texto que no esté en negrita. Acepta las palabras clave "normal" y "bold" o números entre 1 y 1000.
  "terminal.integrated.fontWeight": "normal",

  // Grosor de fuente que se va a usar en el terminal para texto en negrita. Acepta las palabras clave "normal" y "bold" o números entre 1 y 1000.
  "terminal.integrated.fontWeightBold": "bold",

  // Controla si el terminal va a aprovechar la GPU para su proceso de representación.
  //  - auto: Deje que VS Code detecte qué representador ofrecerá la mejor experiencia.
  //  - on: Habilite la aceleración de GPU en el terminal.
  //  - off: Deshabilite la aceleración de GPU en el terminal. El terminal se representará mucho más lento cuando la aceleración de GPU esté desactivada, aunque debería funcionar de forma confiable en todos los sistemas.
  //  - canvas: Use el representador de lienzo de reserva del terminal el cual usa un contexto 2D en lugar de webgl que puede funcionar mejor en algunos sistemas. Tenga en cuenta que algunas características están limitadas en el representador de lienzo como la selección opaca.
  "terminal.integrated.gpuAcceleration": "auto",

  // Conjunto de nombres de proceso que se omitirán al usar la configuración de `terminal.integrated.confirmOnKill`.
  "terminal.integrated.ignoreProcessNames": [
    "starship",
    "oh-my-posh",
    "bash",
    "zsh"
  ],

  // Si los nuevos shells deben heredar su entorno de VS Code, lo que puede generar un shell de inicio de sesión para asegurarse de que se inicializan $PATH y otras variables de desarrollo. Esto no tiene ningún efecto en Windows.
  "terminal.integrated.inheritEnv": true,

  // Controla el espaciado entre letras del terminal. Se trata de un valor entero que representa el número de píxeles adicionales que se van a agregar entre caracteres.
  "terminal.integrated.letterSpacing": 0,

  // Controla el alto de línea del terminal. Este número se multiplica por el tamaño de la fuente del terminal para obtener la altura de línea real en píxeles.
  "terminal.integrated.lineHeight": 1,

  // Cuándo se debe habilitar el eco local. Esto invalidará `terminal.integrated.localEchoLatencyThreshold`
  //  - on: Siempre habilitado
  //  - off: Siempre deshabilitado
  //  - auto: Habilitado solo para áreas de trabajo remotas
  "terminal.integrated.localEchoEnabled": "auto",

  // El eco local se deshabilitará cuando se encuentre cualquiera de estos nombres de programa en el título del terminal.
  "terminal.integrated.localEchoExcludePrograms": [
    "vim",
    "vi",
    "nano",
    "tmux"
  ],

  // Duración del retraso de red, en milisegundos, donde las ediciones locales se mostrarán en el terminal sin esperar al reconocimiento del servidor. Si es "0", el eco local siempre estará activado y si es "-1" se deshabilitará.
  "terminal.integrated.localEchoLatencyThreshold": 30,

  // Estilo del terminal del texto con eco local; es un estilo de fuente o un color RGB.
  "terminal.integrated.localEchoStyle": "dim",

  // Controla si debe forzarse la selección al usar Opción + clic en macOS. Forzará una selección (de línea) normal y no permitirá el uso del modo de selección de columnas. Esto permite copiar y pegar con la selección de terminal normal, por ejemplo, cuando el modo de mouse está habilitado en tmux.
  "terminal.integrated.macOptionClickForcesSelection": false,

  // Controla si la tecla de opción debe tratarse como la tecla meta del terminal en macOS.
  "terminal.integrated.macOptionIsMeta": false,

  // Cuando se establezca, el color de primer plano de cada celda cambiará para intentar cumplir la relación de contraste especificada. Tenga en cuenta que esto no se aplicará a los caracteres `powerline` según N.º 146406. Valores de ejemplo:
  // 
  // - 1: No hacer nada y usar los colores del tema estándar.
  // - 4.5: [Cumplimiento de AA de WCAG (mínimo)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (valor predeterminado).
  // - 7: [Cumplimiento de AA de WCAG(mejorado)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).
  // - 21: Blanco sobre negro o negro sobre blanco.
  "terminal.integrated.minimumContrastRatio": 4.5,

  // Multiplicador que se va a usar en los eventos de desplazamiento de la rueda del mouse "deltaY".
  "terminal.integrated.mouseWheelScrollSensitivity": 1,

  // Cuando el proceso de la terminal debe cerrarse (por ejemplo, al cerrar una ventana o una aplicación), esto determina cuándo debe restaurarse el contenido/la historia de la sesión anterior de la terminal y los procesos deben volver a crearse cuando se abra de nuevo el espacio de trabajo.
  // 
  // Advertencias:
  // 
  // - La restauración del directorio de trabajo actual del proceso depende de si está soportado por el shell.
  // - El tiempo para persistir la sesión durante el cierre es limitado, por lo que puede ser abortado cuando se utilizan conexiones remotas de alta latencia.
  //  - onExit: Reactive los procesos después de cerrar la última ventana en Windows o Linux o cuando se desencadene el comando "workbench.action.quit" (paleta de comandos, enlace de teclado, menú).
  //  - onExitAndWindowClose: Reactive los procesos después de cerrar la última ventana en Windows o Linux o cuando se desencadene el comando "workbench.action.quit" (paleta de comandos, enlace de teclado, menú) o cuando se cierre la ventana.
  //  - never: No restaurar nunca los búferes de terminal ni volver a crear el proceso.
  "terminal.integrated.persistentSessionReviveProcess": "onExit",

  // Controla la cantidad máxima de líneas que se restaurarán al volver a conectarse a una sesión de terminal persistente. Si aumenta este número, se restaurarán más líneas de scrollback con el costo de más memoria asociado y aumentará el tiempo que se tarda en conectarse a los terminales al iniciarse. Esta configuración requiere un reinicio para que se aplique y debe establecerse en un valor menor o igual a "#terminal.integrated.scrollback#".
  "terminal.integrated.persistentSessionScrollback": 100,

  // Perfiles de Linux que se van a presentar al crear un nuevo terminal a través de la lista desplegable de terminales. Establezca manualmente la propiedad `path` con un `args` opcional.
  // 
  // Establezca un perfil existente en `null` para ocultar el perfil de la lista, por ejemplo: `"bash": null`.
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },

  // Perfiles de macOS que se van a presentar al crear un nuevo terminal a través de la lista desplegable de terminales. Establezca manualmente la propiedad `path` con un `args` opcional.
  // 
  // Establezca un perfil existente en `null` para ocultar el perfil de la lista, por ejemplo: `"bash": null`.
  "terminal.integrated.profiles.osx": {
    "bash": {
      "path": "bash",
      "args": [
        "-l"
      ],
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh",
      "args": [
        "-l"
      ]
    },
    "fish": {
      "path": "fish",
      "args": [
        "-l"
      ]
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },

  // Perfiles de Windows que se van a presentar al crear un nuevo terminal a través de la lista desplegable de terminales. Use la propiedad `source` para detectar automáticamente la ubicación del shell. O bien, establezca la propiedad `path` manualmente con una `args` opcional.
  // 
  // Establezca un perfil existente en `null` para ocultar el perfil de la lista, por ejemplo: `"Ubuntu-20.04 (WSL)": null`.
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  },

  // Controla cómo reacciona el terminal cuando se hace clic con el botón derecho.
  //  - default: Muestra el menú contextual.
  //  - copyPaste: Copia cuando hay una selección; de lo contrario, pega.
  //  - paste: Pega al hacer clic con el botón derecho.
  //  - selectWord: Selecciona la palabra bajo el cursor y muestra el menú contextual.
  //  - nothing: No hacer nada y pasar el evento al terminal.
  "terminal.integrated.rightClickBehavior": "copyPaste",

  // Controla el número máximo de líneas que el terminal mantiene en su búfer.
  "terminal.integrated.scrollback": 1000,

  // Envía la mayoría de los enlaces de teclado al terminal en lugar del área de trabajo y reemplaza `terminal.integrated.commandsToSkipShell`, que se puede usar como alternativa para el ajuste.
  "terminal.integrated.sendKeybindingsToShell": false,

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.linux#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.linux`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Ruta de acceso del shell que el terminal usa en Linux. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shell.linux": null,

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.osx#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.osx`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Ruta de acceso del shell que el terminal usa en macOS. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shell.osx": null,

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.windows#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.windows`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Ruta de acceso del shell que el terminal usa en Windows. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shell.windows": null,

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.linux#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.linux`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Argumentos de la línea de comandos que se van a usar en el terminal de Linux. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shellArgs.linux": [],

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.osx#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.osx`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Argumentos de la línea de comandos que se van a usar en el terminal de macOS. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shellArgs.osx": [
    "-l"
  ],

  // Esto está en desuso, la nueva forma recomendada para configurar el shell predeterminado es crear un perfil de terminal en `terminal.integrated.profiles.windows#` y establecer el nombre de su perfil como el predeterminado en `#terminal.integrated.defaultProfile.windows`. Actualmente, esto tendrá prioridad sobre la configuración de los nuevos perfiles, aunque esto cambiará en el futuro.
  // Argumentos de la línea de comandos que se van a usar en el terminal de Windows. [Obtener más información acerca de la configuración del shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
  "terminal.integrated.shellArgs.windows": [],

  // Cuando la integración de shell está habilitada, agrega una decoración para cada comando.
  //  - both: Mostrar decoraciones en el medianil (izquierda) y regla de información general (derecha)
  //  - gutter: Mostrar decoraciones de medianil a la izquierda del terminal
  //  - overviewRuler: Mostrar decoraciones de regla general a la derecha del terminal
  //  - never: No mostrar decoraciones
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",

  // Determina si la integración del shell se inserta automáticamente para admitir características como el seguimiento mejorado de comandos y la detección actual del directorio de trabajo. 
  // 
  //  La integración del shell funciona insertando el shell con un script de inicio. El script proporciona VS Code información sobre lo que sucede en el terminal.
  // 
  //  Shells admitidos:
  // 
  // Linux/macOS: bash, fish, pwsh, zsh
  //  - Windows: pwsh
  // 
  // Esta configuración solo se aplica cuando se crean terminales, por lo que deberá reiniciar los terminales para que surta efecto.
  // 
  // Tenga en cuenta que es posible que la inserción de scripts no funcione si tiene argumentos personalizados definidos en el perfil de terminal, ha habilitado `editor.accessibilitySupport#`, tiene un [bash complejo 'PROMPT_COMMAND'](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand) u otra configuración no admitida. Para deshabilitar las decoraciones, consulte `#terminal.integrated.shellIntegrations.decorationsEnabled`
  "terminal.integrated.shellIntegration.enabled": true,

  // Controla el número de comandos utilizados recientemente que se mantendrán en el historial de la paleta de comandos. Establezca el valor a 0 para desactivar el historial de comandos.
  "terminal.integrated.shellIntegration.history": 100,

  // Activa las sugerencias experimentales de Intellisense de terminal para los shells admitidos cuando `terminal.integrated.shellIntegration.enabled` se establece en `true`. Si la integración del shell se instala manualmente, `VSCODE_SUGGEST` debe establecerse en `1` antes de llamar al script.
  "terminal.integrated.shellIntegration.suggestEnabled": false,

  // Controla si se va a mostrar la alerta "El proceso del terminal finalizó con el código de salida" cuando el código de salida es distinto de cero.
  "terminal.integrated.showExitAlert": true,

  // Indica si se deben mostrar los desplazamientos de los vínculos en la salida de terminal.
  "terminal.integrated.showLinkHover": true,

  // Controla si el terminal se desplazará con una animación.
  "terminal.integrated.smoothScrolling": false,

  // Controla el directorio de trabajo con el que comienza un terminal dividido.
  //  - workspaceRoot: Un nuevo terminal dividido usará la raíz del área de trabajo como directorio de trabajo. En un área de trabajo con varias raíces, se ofrece la opción de elegir la carpeta raíz que se va a usar.
  //  - initial: Un nuevo terminal dividido usará el directorio de trabajo con el que comenzó el terminal principal.
  //  - inherited: En macOS y Linux, un nuevo terminal dividido usará el directorio de trabajo del terminal principal. En Windows, este se comporta igual que el inicial.
  "terminal.integrated.splitCwd": "inherited",

  // Controla si la terminal recibe las pestañas o las aplaza al área de trabajo para la navegación.
  "terminal.integrated.tabFocusMode": false,

  // Identificador de color del tema que se va a asociar a los iconos de terminal de forma predeterminada.
  "terminal.integrated.tabs.defaultColor": null,

  // Id. de codicon que se va a asociar a los iconos de terminal de forma predeterminada.
  //  - add: $(add)
  //  - plus: $(plus)
  //  - gist-new: $(gist-new)
  //  - repo-create: $(repo-create)
  //  - lightbulb: $(lightbulb)
  //  - light-bulb: $(light-bulb)
  //  - repo: $(repo)
  //  - repo-delete: $(repo-delete)
  //  - gist-fork: $(gist-fork)
  //  - repo-forked: $(repo-forked)
  //  - git-pull-request: $(git-pull-request)
  //  - git-pull-request-abandoned: $(git-pull-request-abandoned)
  //  - record-keys: $(record-keys)
  //  - keyboard: $(keyboard)
  //  - tag: $(tag)
  //  - tag-add: $(tag-add)
  //  - tag-remove: $(tag-remove)
  //  - person: $(person)
  //  - person-follow: $(person-follow)
  //  - person-outline: $(person-outline)
  //  - person-filled: $(person-filled)
  //  - git-branch: $(git-branch)
  //  - git-branch-create: $(git-branch-create)
  //  - git-branch-delete: $(git-branch-delete)
  //  - source-control: $(source-control)
  //  - mirror: $(mirror)
  //  - mirror-public: $(mirror-public)
  //  - star: $(star)
  //  - star-add: $(star-add)
  //  - star-delete: $(star-delete)
  //  - star-empty: $(star-empty)
  //  - comment: $(comment)
  //  - comment-add: $(comment-add)
  //  - alert: $(alert)
  //  - warning: $(warning)
  //  - search: $(search)
  //  - search-save: $(search-save)
  //  - log-out: $(log-out)
  //  - sign-out: $(sign-out)
  //  - log-in: $(log-in)
  //  - sign-in: $(sign-in)
  //  - eye: $(eye)
  //  - eye-unwatch: $(eye-unwatch)
  //  - eye-watch: $(eye-watch)
  //  - circle-filled: $(circle-filled)
  //  - primitive-dot: $(primitive-dot)
  //  - close-dirty: $(close-dirty)
  //  - debug-breakpoint: $(debug-breakpoint)
  //  - debug-breakpoint-disabled: $(debug-breakpoint-disabled)
  //  - debug-hint: $(debug-hint)
  //  - primitive-square: $(primitive-square)
  //  - edit: $(edit)
  //  - pencil: $(pencil)
  //  - info: $(info)
  //  - issue-opened: $(issue-opened)
  //  - gist-private: $(gist-private)
  //  - git-fork-private: $(git-fork-private)
  //  - lock: $(lock)
  //  - mirror-private: $(mirror-private)
  //  - close: $(close)
  //  - remove-close: $(remove-close)
  //  - x: $(x)
  //  - repo-sync: $(repo-sync)
  //  - sync: $(sync)
  //  - clone: $(clone)
  //  - desktop-download: $(desktop-download)
  //  - beaker: $(beaker)
  //  - microscope: $(microscope)
  //  - vm: $(vm)
  //  - device-desktop: $(device-desktop)
  //  - file: $(file)
  //  - file-text: $(file-text)
  //  - more: $(more)
  //  - ellipsis: $(ellipsis)
  //  - kebab-horizontal: $(kebab-horizontal)
  //  - mail-reply: $(mail-reply)
  //  - reply: $(reply)
  //  - organization: $(organization)
  //  - organization-filled: $(organization-filled)
  //  - organization-outline: $(organization-outline)
  //  - new-file: $(new-file)
  //  - file-add: $(file-add)
  //  - new-folder: $(new-folder)
  //  - file-directory-create: $(file-directory-create)
  //  - trash: $(trash)
  //  - trashcan: $(trashcan)
  //  - history: $(history)
  //  - clock: $(clock)
  //  - folder: $(folder)
  //  - file-directory: $(file-directory)
  //  - symbol-folder: $(symbol-folder)
  //  - logo-github: $(logo-github)
  //  - mark-github: $(mark-github)
  //  - github: $(github)
  //  - terminal: $(terminal)
  //  - console: $(console)
  //  - repl: $(repl)
  //  - zap: $(zap)
  //  - symbol-event: $(symbol-event)
  //  - error: $(error)
  //  - stop: $(stop)
  //  - variable: $(variable)
  //  - symbol-variable: $(symbol-variable)
  //  - array: $(array)
  //  - symbol-array: $(symbol-array)
  //  - symbol-module: $(symbol-module)
  //  - symbol-package: $(symbol-package)
  //  - symbol-namespace: $(symbol-namespace)
  //  - symbol-object: $(symbol-object)
  //  - symbol-method: $(symbol-method)
  //  - symbol-function: $(symbol-function)
  //  - symbol-constructor: $(symbol-constructor)
  //  - symbol-boolean: $(symbol-boolean)
  //  - symbol-null: $(symbol-null)
  //  - symbol-numeric: $(symbol-numeric)
  //  - symbol-number: $(symbol-number)
  //  - symbol-structure: $(symbol-structure)
  //  - symbol-struct: $(symbol-struct)
  //  - symbol-parameter: $(symbol-parameter)
  //  - symbol-type-parameter: $(symbol-type-parameter)
  //  - symbol-key: $(symbol-key)
  //  - symbol-text: $(symbol-text)
  //  - symbol-reference: $(symbol-reference)
  //  - go-to-file: $(go-to-file)
  //  - symbol-enum: $(symbol-enum)
  //  - symbol-value: $(symbol-value)
  //  - symbol-ruler: $(symbol-ruler)
  //  - symbol-unit: $(symbol-unit)
  //  - activate-breakpoints: $(activate-breakpoints)
  //  - archive: $(archive)
  //  - arrow-both: $(arrow-both)
  //  - arrow-down: $(arrow-down)
  //  - arrow-left: $(arrow-left)
  //  - arrow-right: $(arrow-right)
  //  - arrow-small-down: $(arrow-small-down)
  //  - arrow-small-left: $(arrow-small-left)
  //  - arrow-small-right: $(arrow-small-right)
  //  - arrow-small-up: $(arrow-small-up)
  //  - arrow-up: $(arrow-up)
  //  - bell: $(bell)
  //  - bold: $(bold)
  //  - book: $(book)
  //  - bookmark: $(bookmark)
  //  - debug-breakpoint-conditional-unverified: $(debug-breakpoint-conditional-unverified)
  //  - debug-breakpoint-conditional: $(debug-breakpoint-conditional)
  //  - debug-breakpoint-conditional-disabled: $(debug-breakpoint-conditional-disabled)
  //  - debug-breakpoint-data-unverified: $(debug-breakpoint-data-unverified)
  //  - debug-breakpoint-data: $(debug-breakpoint-data)
  //  - debug-breakpoint-data-disabled: $(debug-breakpoint-data-disabled)
  //  - debug-breakpoint-log-unverified: $(debug-breakpoint-log-unverified)
  //  - debug-breakpoint-log: $(debug-breakpoint-log)
  //  - debug-breakpoint-log-disabled: $(debug-breakpoint-log-disabled)
  //  - briefcase: $(briefcase)
  //  - broadcast: $(broadcast)
  //  - browser: $(browser)
  //  - bug: $(bug)
  //  - calendar: $(calendar)
  //  - case-sensitive: $(case-sensitive)
  //  - check: $(check)
  //  - checklist: $(checklist)
  //  - chevron-down: $(chevron-down)
  //  - drop-down-button: $(drop-down-button)
  //  - chevron-left: $(chevron-left)
  //  - chevron-right: $(chevron-right)
  //  - chevron-up: $(chevron-up)
  //  - chrome-close: $(chrome-close)
  //  - chrome-maximize: $(chrome-maximize)
  //  - chrome-minimize: $(chrome-minimize)
  //  - chrome-restore: $(chrome-restore)
  //  - circle: $(circle)
  //  - circle-outline: $(circle-outline)
  //  - debug-breakpoint-unverified: $(debug-breakpoint-unverified)
  //  - circle-slash: $(circle-slash)
  //  - circuit-board: $(circuit-board)
  //  - clear-all: $(clear-all)
  //  - clippy: $(clippy)
  //  - close-all: $(close-all)
  //  - cloud-download: $(cloud-download)
  //  - cloud-upload: $(cloud-upload)
  //  - code: $(code)
  //  - collapse-all: $(collapse-all)
  //  - color-mode: $(color-mode)
  //  - comment-discussion: $(comment-discussion)
  //  - compare-changes: $(compare-changes)
  //  - credit-card: $(credit-card)
  //  - dash: $(dash)
  //  - dashboard: $(dashboard)
  //  - database: $(database)
  //  - debug-continue: $(debug-continue)
  //  - debug-disconnect: $(debug-disconnect)
  //  - debug-pause: $(debug-pause)
  //  - debug-restart: $(debug-restart)
  //  - debug-start: $(debug-start)
  //  - debug-step-into: $(debug-step-into)
  //  - debug-step-out: $(debug-step-out)
  //  - debug-step-over: $(debug-step-over)
  //  - debug-stop: $(debug-stop)
  //  - debug: $(debug)
  //  - device-camera-video: $(device-camera-video)
  //  - device-camera: $(device-camera)
  //  - device-mobile: $(device-mobile)
  //  - diff-added: $(diff-added)
  //  - diff-ignored: $(diff-ignored)
  //  - diff-modified: $(diff-modified)
  //  - diff-removed: $(diff-removed)
  //  - diff-renamed: $(diff-renamed)
  //  - diff: $(diff)
  //  - discard: $(discard)
  //  - editor-layout: $(editor-layout)
  //  - empty-window: $(empty-window)
  //  - exclude: $(exclude)
  //  - extensions: $(extensions)
  //  - eye-closed: $(eye-closed)
  //  - file-binary: $(file-binary)
  //  - file-code: $(file-code)
  //  - file-media: $(file-media)
  //  - file-pdf: $(file-pdf)
  //  - file-submodule: $(file-submodule)
  //  - file-symlink-directory: $(file-symlink-directory)
  //  - file-symlink-file: $(file-symlink-file)
  //  - file-zip: $(file-zip)
  //  - files: $(files)
  //  - filter: $(filter)
  //  - flame: $(flame)
  //  - fold-down: $(fold-down)
  //  - fold-up: $(fold-up)
  //  - fold: $(fold)
  //  - folder-active: $(folder-active)
  //  - folder-opened: $(folder-opened)
  //  - gear: $(gear)
  //  - gift: $(gift)
  //  - gist-secret: $(gist-secret)
  //  - gist: $(gist)
  //  - git-commit: $(git-commit)
  //  - git-compare: $(git-compare)
  //  - git-merge: $(git-merge)
  //  - github-action: $(github-action)
  //  - github-alt: $(github-alt)
  //  - globe: $(globe)
  //  - grabber: $(grabber)
  //  - graph: $(graph)
  //  - gripper: $(gripper)
  //  - heart: $(heart)
  //  - home: $(home)
  //  - horizontal-rule: $(horizontal-rule)
  //  - hubot: $(hubot)
  //  - inbox: $(inbox)
  //  - issue-closed: $(issue-closed)
  //  - issue-reopened: $(issue-reopened)
  //  - issues: $(issues)
  //  - italic: $(italic)
  //  - jersey: $(jersey)
  //  - json: $(json)
  //  - bracket: $(bracket)
  //  - kebab-vertical: $(kebab-vertical)
  //  - key: $(key)
  //  - law: $(law)
  //  - lightbulb-autofix: $(lightbulb-autofix)
  //  - link-external: $(link-external)
  //  - link: $(link)
  //  - list-ordered: $(list-ordered)
  //  - list-unordered: $(list-unordered)
  //  - live-share: $(live-share)
  //  - loading: $(loading)
  //  - location: $(location)
  //  - mail-read: $(mail-read)
  //  - mail: $(mail)
  //  - markdown: $(markdown)
  //  - megaphone: $(megaphone)
  //  - mention: $(mention)
  //  - milestone: $(milestone)
  //  - mortar-board: $(mortar-board)
  //  - move: $(move)
  //  - multiple-windows: $(multiple-windows)
  //  - mute: $(mute)
  //  - no-newline: $(no-newline)
  //  - note: $(note)
  //  - octoface: $(octoface)
  //  - open-preview: $(open-preview)
  //  - package: $(package)
  //  - paintcan: $(paintcan)
  //  - pin: $(pin)
  //  - play: $(play)
  //  - run: $(run)
  //  - plug: $(plug)
  //  - preserve-case: $(preserve-case)
  //  - preview: $(preview)
  //  - project: $(project)
  //  - pulse: $(pulse)
  //  - question: $(question)
  //  - quote: $(quote)
  //  - radio-tower: $(radio-tower)
  //  - reactions: $(reactions)
  //  - references: $(references)
  //  - refresh: $(refresh)
  //  - regex: $(regex)
  //  - remote-explorer: $(remote-explorer)
  //  - remote: $(remote)
  //  - remove: $(remove)
  //  - replace-all: $(replace-all)
  //  - replace: $(replace)
  //  - repo-clone: $(repo-clone)
  //  - repo-force-push: $(repo-force-push)
  //  - repo-pull: $(repo-pull)
  //  - repo-push: $(repo-push)
  //  - report: $(report)
  //  - request-changes: $(request-changes)
  //  - rocket: $(rocket)
  //  - root-folder-opened: $(root-folder-opened)
  //  - root-folder: $(root-folder)
  //  - rss: $(rss)
  //  - ruby: $(ruby)
  //  - save-all: $(save-all)
  //  - save-as: $(save-as)
  //  - save: $(save)
  //  - screen-full: $(screen-full)
  //  - screen-normal: $(screen-normal)
  //  - search-stop: $(search-stop)
  //  - server: $(server)
  //  - settings-gear: $(settings-gear)
  //  - settings: $(settings)
  //  - shield: $(shield)
  //  - smiley: $(smiley)
  //  - sort-precedence: $(sort-precedence)
  //  - split-horizontal: $(split-horizontal)
  //  - split-vertical: $(split-vertical)
  //  - squirrel: $(squirrel)
  //  - star-full: $(star-full)
  //  - star-half: $(star-half)
  //  - symbol-class: $(symbol-class)
  //  - symbol-color: $(symbol-color)
  //  - symbol-customcolor: $(symbol-customcolor)
  //  - symbol-constant: $(symbol-constant)
  //  - symbol-enum-member: $(symbol-enum-member)
  //  - symbol-field: $(symbol-field)
  //  - symbol-file: $(symbol-file)
  //  - symbol-interface: $(symbol-interface)
  //  - symbol-keyword: $(symbol-keyword)
  //  - symbol-misc: $(symbol-misc)
  //  - symbol-operator: $(symbol-operator)
  //  - symbol-property: $(symbol-property)
  //  - wrench: $(wrench)
  //  - wrench-subaction: $(wrench-subaction)
  //  - symbol-snippet: $(symbol-snippet)
  //  - tasklist: $(tasklist)
  //  - telescope: $(telescope)
  //  - text-size: $(text-size)
  //  - three-bars: $(three-bars)
  //  - thumbsdown: $(thumbsdown)
  //  - thumbsup: $(thumbsup)
  //  - tools: $(tools)
  //  - triangle-down: $(triangle-down)
  //  - triangle-left: $(triangle-left)
  //  - triangle-right: $(triangle-right)
  //  - triangle-up: $(triangle-up)
  //  - twitter: $(twitter)
  //  - unfold: $(unfold)
  //  - unlock: $(unlock)
  //  - unmute: $(unmute)
  //  - unverified: $(unverified)
  //  - verified: $(verified)
  //  - versions: $(versions)
  //  - vm-active: $(vm-active)
  //  - vm-outline: $(vm-outline)
  //  - vm-running: $(vm-running)
  //  - watch: $(watch)
  //  - whitespace: $(whitespace)
  //  - whole-word: $(whole-word)
  //  - window: $(window)
  //  - word-wrap: $(word-wrap)
  //  - zoom-in: $(zoom-in)
  //  - zoom-out: $(zoom-out)
  //  - list-filter: $(list-filter)
  //  - list-flat: $(list-flat)
  //  - list-selection: $(list-selection)
  //  - selection: $(selection)
  //  - list-tree: $(list-tree)
  //  - debug-breakpoint-function-unverified: $(debug-breakpoint-function-unverified)
  //  - debug-breakpoint-function: $(debug-breakpoint-function)
  //  - debug-breakpoint-function-disabled: $(debug-breakpoint-function-disabled)
  //  - debug-stackframe-active: $(debug-stackframe-active)
  //  - circle-small-filled: $(circle-small-filled)
  //  - debug-stackframe-dot: $(debug-stackframe-dot)
  //  - debug-stackframe: $(debug-stackframe)
  //  - debug-stackframe-focused: $(debug-stackframe-focused)
  //  - debug-breakpoint-unsupported: $(debug-breakpoint-unsupported)
  //  - symbol-string: $(symbol-string)
  //  - debug-reverse-continue: $(debug-reverse-continue)
  //  - debug-step-back: $(debug-step-back)
  //  - debug-restart-frame: $(debug-restart-frame)
  //  - call-incoming: $(call-incoming)
  //  - call-outgoing: $(call-outgoing)
  //  - menu: $(menu)
  //  - expand-all: $(expand-all)
  //  - feedback: $(feedback)
  //  - group-by-ref-type: $(group-by-ref-type)
  //  - ungroup-by-ref-type: $(ungroup-by-ref-type)
  //  - account: $(account)
  //  - bell-dot: $(bell-dot)
  //  - debug-console: $(debug-console)
  //  - library: $(library)
  //  - output: $(output)
  //  - run-all: $(run-all)
  //  - sync-ignored: $(sync-ignored)
  //  - pinned: $(pinned)
  //  - github-inverted: $(github-inverted)
  //  - debug-alt: $(debug-alt)
  //  - server-process: $(server-process)
  //  - server-environment: $(server-environment)
  //  - pass: $(pass)
  //  - stop-circle: $(stop-circle)
  //  - play-circle: $(play-circle)
  //  - record: $(record)
  //  - debug-alt-small: $(debug-alt-small)
  //  - vm-connect: $(vm-connect)
  //  - cloud: $(cloud)
  //  - merge: $(merge)
  //  - export: $(export)
  //  - graph-left: $(graph-left)
  //  - magnet: $(magnet)
  //  - notebook: $(notebook)
  //  - redo: $(redo)
  //  - check-all: $(check-all)
  //  - pinned-dirty: $(pinned-dirty)
  //  - pass-filled: $(pass-filled)
  //  - circle-large-filled: $(circle-large-filled)
  //  - circle-large: $(circle-large)
  //  - circle-large-outline: $(circle-large-outline)
  //  - combine: $(combine)
  //  - gather: $(gather)
  //  - table: $(table)
  //  - variable-group: $(variable-group)
  //  - type-hierarchy: $(type-hierarchy)
  //  - type-hierarchy-sub: $(type-hierarchy-sub)
  //  - type-hierarchy-super: $(type-hierarchy-super)
  //  - git-pull-request-create: $(git-pull-request-create)
  //  - run-above: $(run-above)
  //  - run-below: $(run-below)
  //  - notebook-template: $(notebook-template)
  //  - debug-rerun: $(debug-rerun)
  //  - workspace-trusted: $(workspace-trusted)
  //  - workspace-untrusted: $(workspace-untrusted)
  //  - workspace-unspecified: $(workspace-unspecified)
  //  - terminal-cmd: $(terminal-cmd)
  //  - terminal-debian: $(terminal-debian)
  //  - terminal-linux: $(terminal-linux)
  //  - terminal-powershell: $(terminal-powershell)
  //  - terminal-tmux: $(terminal-tmux)
  //  - terminal-ubuntu: $(terminal-ubuntu)
  //  - terminal-bash: $(terminal-bash)
  //  - arrow-swap: $(arrow-swap)
  //  - copy: $(copy)
  //  - person-add: $(person-add)
  //  - filter-filled: $(filter-filled)
  //  - wand: $(wand)
  //  - debug-line-by-line: $(debug-line-by-line)
  //  - inspect: $(inspect)
  //  - layers: $(layers)
  //  - layers-dot: $(layers-dot)
  //  - layers-active: $(layers-active)
  //  - compass: $(compass)
  //  - compass-dot: $(compass-dot)
  //  - compass-active: $(compass-active)
  //  - azure: $(azure)
  //  - issue-draft: $(issue-draft)
  //  - git-pull-request-closed: $(git-pull-request-closed)
  //  - git-pull-request-draft: $(git-pull-request-draft)
  //  - debug-all: $(debug-all)
  //  - debug-coverage: $(debug-coverage)
  //  - run-errors: $(run-errors)
  //  - folder-library: $(folder-library)
  //  - debug-continue-small: $(debug-continue-small)
  //  - beaker-stop: $(beaker-stop)
  //  - graph-line: $(graph-line)
  //  - graph-scatter: $(graph-scatter)
  //  - pie-chart: $(pie-chart)
  //  - bracket-dot: $(bracket-dot)
  //  - bracket-error: $(bracket-error)
  //  - lock-small: $(lock-small)
  //  - azure-devops: $(azure-devops)
  //  - verified-filled: $(verified-filled)
  //  - newline: $(newline)
  //  - layout: $(layout)
  //  - layout-activitybar-left: $(layout-activitybar-left)
  //  - layout-activitybar-right: $(layout-activitybar-right)
  //  - layout-panel-left: $(layout-panel-left)
  //  - layout-panel-center: $(layout-panel-center)
  //  - layout-panel-justify: $(layout-panel-justify)
  //  - layout-panel-right: $(layout-panel-right)
  //  - layout-panel: $(layout-panel)
  //  - layout-sidebar-left: $(layout-sidebar-left)
  //  - layout-sidebar-right: $(layout-sidebar-right)
  //  - layout-statusbar: $(layout-statusbar)
  //  - layout-menubar: $(layout-menubar)
  //  - layout-centered: $(layout-centered)
  //  - layout-sidebar-right-off: $(layout-sidebar-right-off)
  //  - layout-panel-off: $(layout-panel-off)
  //  - layout-sidebar-left-off: $(layout-sidebar-left-off)
  //  - target: $(target)
  //  - indent: $(indent)
  //  - record-small: $(record-small)
  //  - error-small: $(error-small)
  //  - arrow-circle-down: $(arrow-circle-down)
  //  - arrow-circle-left: $(arrow-circle-left)
  //  - arrow-circle-right: $(arrow-circle-right)
  //  - arrow-circle-up: $(arrow-circle-up)
  //  - heart-filled: $(heart-filled)
  //  - map: $(map)
  //  - map-filled: $(map-filled)
  //  - circle-small: $(circle-small)
  //  - bell-slash: $(bell-slash)
  //  - bell-slash-dot: $(bell-slash-dot)
  //  - comment-unresolved: $(comment-unresolved)
  //  - git-pull-request-go-to-changes: $(git-pull-request-go-to-changes)
  //  - git-pull-request-new-changes: $(git-pull-request-new-changes)
  //  - search-fuzzy: $(search-fuzzy)
  //  - comment-draft: $(comment-draft)
  //  - dialog-error: $(dialog-error)
  //  - dialog-warning: $(dialog-warning)
  //  - dialog-info: $(dialog-info)
  //  - dialog-close: $(dialog-close)
  //  - tree-item-expanded: $(tree-item-expanded)
  //  - tree-filter-on-type-on: $(tree-filter-on-type-on)
  //  - tree-filter-on-type-off: $(tree-filter-on-type-off)
  //  - tree-filter-clear: $(tree-filter-clear)
  //  - tree-item-loading: $(tree-item-loading)
  //  - menu-selection: $(menu-selection)
  //  - menu-submenu: $(menu-submenu)
  //  - menubar-more: $(menubar-more)
  //  - scrollbar-button-left: $(scrollbar-button-left)
  //  - scrollbar-button-right: $(scrollbar-button-right)
  //  - scrollbar-button-up: $(scrollbar-button-up)
  //  - scrollbar-button-down: $(scrollbar-button-down)
  //  - toolbar-more: $(toolbar-more)
  //  - quick-input-back: $(quick-input-back)
  "terminal.integrated.tabs.defaultIcon": "terminal",

  // Controla la descripción del terminal, que aparece a la derecha del título. Las variables se sustituyen en función del contexto:
  // - `${cwd}`: el directorio de trabajo actual del terminal
  // - `${cwdFolder}`: el directorio de trabajo actual del terminal, que se muestra para las áreas de trabajo de múltiples raíces o en una única área de trabajo raíz cuando el valor difiere del directorio de trabajo inicial. En Windows, esto solo se mostrará cuando la integración de shell esté habilitada.
  // - `${workspaceFolder}`: la versión de trabajo en la que se inició el terminal
  // - `${local}`: indica un terminal local en un área de trabajo remota
  // - `${process}`: el nombre del proceso de terminal
  // - `${separator}`: un separador condicional (` - `) que solo se muestra cuando está rodeado por variables con valores o texto estático.
  // - `${sequence}`: el nombre proporcionado al terminal por el proceso
  // - `${task}`: indica que este terminal está asociado a una tarea
  "terminal.integrated.tabs.description": "${task}${separator}${local}${separator}${cwdFolder}",

  // Permite controlar si el estado de las pestañas de terminal admite animación (por ejemplo, las tareas en curso).
  "terminal.integrated.tabs.enableAnimation": true,

  // Controla si las pestañas del terminal se muestran como una lista al lado del terminal. Cuando esta opción está deshabilitada, se muestra una lista desplegable en su lugar.
  "terminal.integrated.tabs.enabled": true,

  // Controla si la colocación del foco sobre el terminal de una pestaña tiene lugar al hacer un solo clic o doble clic.
  //  - singleClick: Colocar el foco sobre el terminal al hacer clic en una pestaña del terminal
  //  - doubleClick: Colocar el foco sobre el terminal al hacer doble clic en una pestaña del terminal
  "terminal.integrated.tabs.focusMode": "doubleClick",

  // Controla si la vista de pestañas del terminal se ocultará en determinadas condiciones.
  //  - never: No ocultar nunca la vista de pestañas del terminal
  //  - singleTerminal: Ocultar la vista de pestañas del terminal cuando solo haya un terminal abierto
  //  - singleGroup: Ocultar la vista de pestañas del terminal cuando solo haya un grupo de terminal abierto
  "terminal.integrated.tabs.hideCondition": "singleTerminal",

  // Controla la ubicación de las pestañas del terminal, a la izquierda o a la derecha de los terminales reales.
  //  - left: Mostrar la vista de pestañas del terminal a la izquierda del terminal
  //  - right: Mostrar la vista de pestañas del terminal a la derecha del terminal
  "terminal.integrated.tabs.location": "right",

  // Separador usado por `terminal.integrated.tabs.title` y `terminal.integrated.tabs.title`.
  "terminal.integrated.tabs.separator": " - ",

  // Controla si se muestran los botones de división y eliminación de terminales junto al botón de nuevo terminal.
  //  - always: Mostrar siempre las acciones
  //  - singleTerminal: Mostrar el terminal activo cuando sea el único terminal abierto
  //  - singleTerminalOrNarrow: Mostrar el terminal activo cuando sea el único terminal abierto o cuando la vista de pestañas esté en su estado sin texto reducido
  //  - never: No mostrar nunca las acciones
  "terminal.integrated.tabs.showActions": "singleTerminalOrNarrow",

  // Muestra la información del terminal activo en la vista. Esto es especialmente útil cuando el título de las pestañas no está visible.
  //  - always: Mostrar siempre el terminal activo
  //  - singleTerminal: Mostrar el terminal activo cuando sea el único terminal abierto
  //  - singleTerminalOrNarrow: Mostrar el terminal activo cuando sea el único terminal abierto o cuando la vista de pestañas esté en su estado sin texto reducido
  //  - never: No mostrar nunca el terminal activo
  "terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",

  // Controla el título del terminal. Las variables se sustituyen en función del contexto:
  // - `${cwd}`: el directorio de trabajo actual del terminal
  // - `${cwdFolder}`: el directorio de trabajo actual del terminal, que se muestra para las áreas de trabajo de múltiples raíces o en una única área de trabajo raíz cuando el valor difiere del directorio de trabajo inicial. En Windows, esto solo se mostrará cuando la integración de shell esté habilitada.
  // - `${workspaceFolder}`: la versión de trabajo en la que se inició el terminal
  // - `${local}`: indica un terminal local en un área de trabajo remota
  // - `${process}`: el nombre del proceso de terminal
  // - `${separator}`: un separador condicional (` - `) que solo se muestra cuando está rodeado por variables con valores o texto estático.
  // - `${sequence}`: el nombre proporcionado al terminal por el proceso
  // - `${task}`: indica que este terminal está asociado a una tarea
  "terminal.integrated.tabs.title": "${process}",

  // Número de celdas en una tabulación.
  "terminal.integrated.tabStopWidth": 8,

  // Controla la versión de Unicode que debe utilizarse cuando se evalúa el ancho de los caracteres del terminal. Si observa que los emojis u otros caracteres anchos no ocupan la cantidad de espacio adecuada o que al usar Retroceso se elimina demasiado o muy poco, puede que quiera intentar ajustar esta configuración.
  //  - 6: Versión 6 de Unicode. Esta es una versión anterior que debería funcionar mejor en sistemas anteriores.
  //  - 11: Versión 11 de Unicode. Esta versión proporciona una mejor compatibilidad con sistemas modernos que usan versiones modernas de Unicode.
  "terminal.integrated.unicodeVersion": "11",

  // Controla si se muestran o no las distribuciones de WSL en la lista desplegable del terminal.
  "terminal.integrated.useWslProfiles": true,

  // Indica si se debe usar ConPTY para la comunicación en procesos de terminales de Windows (requiere Windows 10, número de compilación 18309 y posteriores). Si es false, se usará Winpty.
  "terminal.integrated.windowsEnableConpty": true,

  // Cadena que contiene todos los caracteres que se van a considerar separadores de palabras por doble clic para seleccionar la característica de palabra.
  "terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’"

},
{
  // Controla si la vista Problemas debe mostrar automáticamente los archivos al abrirlos.
  "problems.autoReveal": true,

  // Mostrar errores y advertencias en los archivos y carpetas.
  "problems.decorations.enabled": true,

  // Controla el modo de vista predeterminado de la vista Problemas.
  "problems.defaultViewMode": "tree",

  // Al habilitarse, muestra el problema actual en la barra de estado.
  "problems.showCurrentInStatus": false,

  // Controla el orden en que se navega por los problemas.
  //  - severity: Navegar por los problemas ordenados por gravedad
  //  - position: Navegar por los problemas ordenados por posición
  "problems.sortOrder": "severity"

},
{
  // Activar/desactivar rutas de navegación.
  "breadcrumbs.enabled": true,

  // Controla si las rutas de acceso de archivo se muestran en la vista de rutas de navegación y la forma en que aparecen.
  //  - on: Mostrar la ruta de acceso de archivo en la vista de rutas de navegación.
  //  - off: No mostrar la ruta de acceso de archivo en la vista de rutas de navegación.
  //  - last: Mostrar solo el último elemento de la ruta de acceso de archivo en la vista de rutas de navegación.
  "breadcrumbs.filePath": "on",

  // Represente los elementos de la ruta de navegación con iconos.
  "breadcrumbs.icons": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "array".
  "breadcrumbs.showArrays": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "boolean".
  "breadcrumbs.showBooleans": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos "class".
  "breadcrumbs.showClasses": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "constant".
  "breadcrumbs.showConstants": true,

  // Cuando está habilitado, las rutas de navegación muestran los símbolos de tipo "constructor".
  "breadcrumbs.showConstructors": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "enumMember".
  "breadcrumbs.showEnumMembers": true,

  // Si está habilitado, las rutas de navegación muestran símbolos de tipo "enum".
  "breadcrumbs.showEnums": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "event".
  "breadcrumbs.showEvents": true,

  // Cuando está habilitado, las rutas de navegación muestran los símbolos de tipo "field".
  "breadcrumbs.showFields": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "file".
  "breadcrumbs.showFiles": true,

  // Si está habilitado, las rutas de navegación muestran símbolos de tipo "function".
  "breadcrumbs.showFunctions": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "interface".
  "breadcrumbs.showInterfaces": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "key".
  "breadcrumbs.showKeys": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "method".
  "breadcrumbs.showMethods": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "module".
  "breadcrumbs.showModules": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "namespace".
  "breadcrumbs.showNamespaces": true,

  // Si está habilitado, las rutas de navegación muestran símbolos de tipo "null".
  "breadcrumbs.showNull": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "number".
  "breadcrumbs.showNumbers": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "object".
  "breadcrumbs.showObjects": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "operator".
  "breadcrumbs.showOperators": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "package".
  "breadcrumbs.showPackages": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "property".
  "breadcrumbs.showProperties": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "string".
  "breadcrumbs.showStrings": true,

  // Si está habilitado, las rutas de navegación muestran símbolos de tipo "struct".
  "breadcrumbs.showStructs": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos "typeParameter".
  "breadcrumbs.showTypeParameters": true,

  // Cuando está habilitado, las rutas de navegación muestran símbolos de tipo "variable".
  "breadcrumbs.showVariables": true,

  // Controla si los símbolos se muestran en la vista de rutas de navegación y la forma en que aparecen.
  //  - on: Mostrar todos los símbolos en la vista de rutas de navegación.
  //  - off: No mostrar símbolos en la vista de rutas de navegación.
  //  - last: Mostrar solo el símbolo actual en la vista de rutas de navegación.
  "breadcrumbs.symbolPath": "on",

  // Controla el modo en el que se ordenan los símbolos en la vista de esquema de rutas de navegación.
  //  - position: Muestra el esquema de símbolos en el orden de los archivos.
  //  - name: Muestra el esquema de símbolos en orden alfabético.
  //  - type: Muestra el esquema de símbolos ordenados por tipo.
  "breadcrumbs.symbolSortOrder": "position"

},
{
  // Specifies where the indicators of the file changes annotations will be shown
  //  - gutter: Adds an indicator to the gutter
  //  - line: Adds a full-line highlight background color
  //  - overview: Adds an indicator to the scroll bar
  "gitlens.changes.locations": [
    "gutter",
    "line",
    "overview"
  ],

  // Specifies how the file changes annotations will be toggled
  //  - file: Toggles each file individually
  //  - window: Toggles the window, i.e. all files at once
  "gitlens.changes.toggleMode": "file"

},
{
  // Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor`)
  "gitlens.heatmap.ageThreshold": 90,

  // Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `gitlens.heatmap.ageThreshold` value
  "gitlens.heatmap.coldColor": "#0a60f6",

  // Specifies the whether to fade out older lines
  "gitlens.heatmap.fadeLines": true,

  // Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `gitlens.heatmap.ageThreshold` value
  "gitlens.heatmap.hotColor": "#f66a0a",

  // Specifies where the indicators of the file heatmap annotations will be shown
  //  - gutter: Adds an indicator to the gutter
  //  - line: Adds a full-line highlight background color
  //  - overview: Adds an indicator to the scroll bar
  "gitlens.heatmap.locations": [
    "gutter",
    "line",
    "overview"
  ],

  // Specifies how the file heatmap annotations will be toggled
  //  - file: Toggles each file individually
  //  - window: Toggles the window, i.e. all files at once
  "gitlens.heatmap.toggleMode": "file"

},
{
  // Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_
  "gitlens.graph.avatars": true,

  // Specifies the order by which commits will be shown on the _Commit Graph_
  //  - date: Shows commits in reverse chronological order of the commit timestamp
  //  - author-date: Shows commits in reverse chronological order of the author timestamp
  //  - topo: Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history
  "gitlens.graph.commitOrdering": "date",

  // Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.graph.dateFormat": null,

  // Specifies how dates will be displayed in the _Commit Graph_
  //  - relative: e.g. 1 day ago
  //  - absolute: e.g. July 25th, 2018 7:18pm
  "gitlens.graph.dateStyle": "relative",

  // Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit
  "gitlens.graph.defaultItemLimit": 500,

  // Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_
  "gitlens.graph.dimMergeCommits": false,

  // Specifies additional markers to show on the minimap in the _Commit Graph_
  //  - localBranches: Marks the location of local branches
  //  - remoteBranches: Marks the location of remote branches
  //  - tags: Marks the location of tags
  //  - stashes: Marks the location of stashes
  "gitlens.graph.experimental.minimap.additionalTypes": [
    "localBranches",
    "stashes"
  ],

  // Specifies whether to show an experimental minimap of commit activity above the _Commit Graph_
  "gitlens.graph.experimental.minimap.enabled": false,

  // Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_
  "gitlens.graph.highlightRowsOnRefHover": true,

  // Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit
  "gitlens.graph.pageItemLimit": 200,

  // Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)
  "gitlens.graph.pullRequests.enabled": true,

  // Specifies additional markers to show on the scrollbar in the _Commit Graph_
  //  - localBranches: Marks the location of local branches
  //  - remoteBranches: Marks the location of remote branches
  //  - tags: Marks the location of tags
  //  - stashes: Marks the location of stashes
  "gitlens.graph.scrollMarkers.additionalTypes": [
    "localBranches",
    "stashes"
  ],

  // Specifies whether to show markers on the scrollbar in the _Commit Graph_
  "gitlens.graph.scrollMarkers.enabled": true,

  // Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row
  "gitlens.graph.scrollRowPadding": 0,

  // Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit
  "gitlens.graph.searchItemLimit": 100,

  // Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_
  //  - false: Never shows the _Commit Details_ view automatically
  //  - open: Shows the _Commit Details_ view automatically only when opening the _Commit Graph_
  //  - selection: Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_
  "gitlens.graph.showDetailsView": "selection",

  // Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_
  "gitlens.graph.showGhostRefsOnRowHover": true,

  // Specifies whether to show remote names on remote branches in the _Commit Graph_
  "gitlens.graph.showRemoteNames": false,

  // Specifies whether to show a local branch's upstream status in the _Commit Graph_
  "gitlens.graph.showUpstreamStatus": true,

  // Specifies whether to show the _Commit Graph_ in the status bar
  "gitlens.graph.statusBar.enabled": true

},
{
  // Specifies the limit on the how many commits can be queried for statistics in the Visual File History, because of rate limits. Only applies to virtual workspaces.
  "gitlens.visualHistory.queryLimit": 20

},
{
  // Specifies how Git commits are displayed in the _Interactive Rebase Editor_
  //  - asc: Shows oldest commit first
  //  - desc: Shows newest commit first
  "gitlens.rebaseEditor.ordering": "desc",

  // Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_
  //  - false: Never shows the _Commit Details_ view automatically
  //  - open: Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_
  //  - selection: Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_
  "gitlens.rebaseEditor.showDetailsView": "selection"

},
{
  // Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)
  "gitlens.gitCommands.closeOnFocusOut": true,

  // Specifies whether to match all or any commit message search patterns
  "gitlens.gitCommands.search.matchAll": false,

  // Specifies whether to match commit search patterns with or without regard to casing
  "gitlens.gitCommands.search.matchCase": false,

  // Specifies whether to match commit search patterns using regular expressions
  "gitlens.gitCommands.search.matchRegex": true,

  // Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context
  "gitlens.gitCommands.search.showResultsInSideBar": null,

  // Deprecated. This setting has been renamed to `gitlens.gitCommands.search.showResultsInSideBar`
  // 
  "gitlens.gitCommands.search.showResultsInView": null,

  // Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`
  //  - branch-create:command: Skips branch create confirmations when run from a command, e.g. a view action
  //  - branch-create:menu: Skips branch create confirmations when run from the Git Command Palette
  //  - co-authors:command: Skips co-author confirmations when run from a command, e.g. a view action
  //  - co-authors:menu: Skips co-author confirmations when run from the Git Command Palette
  //  - fetch:command: Skips fetch confirmations when run from a command, e.g. a view action
  //  - fetch:menu: Skips fetch confirmations when run from the Git Command Palette
  //  - pull:command: Skips pull confirmations when run from a command, e.g. a view action
  //  - pull:menu: Skips pull confirmations when run from the Git Command Palette
  //  - push:command: Skips push confirmations when run from a command, e.g. a view action
  //  - push:menu: Skips push confirmations when run from the Git Command Palette
  //  - stash-apply:command: Skips stash apply confirmations when run from a command, e.g. a view action
  //  - stash-apply:menu: Skips stash apply confirmations when run from the Git Command Palette
  //  - stash-pop:command: Skips stash pop confirmations when run from a command, e.g. a view action
  //  - stash-pop:menu: Skips stash pop confirmations when run from the Git Command Palette
  //  - stash-push:command: Skips stash push confirmations when run from a command, e.g. a view action
  //  - stash-push:menu: Skips stash push confirmations when run from the Git Command Palette
  //  - switch:command: Skips switch confirmations when run from a command, e.g. a view action
  //  - switch:menu: Skips switch confirmations when run from the Git Command Palette
  //  - tag-create:command: Skips tag create confirmations when run from a command, e.g. a view action
  //  - tag-create:menu: Skips tag create confirmations when run from the Git Command Palette
  "gitlens.gitCommands.skipConfirmations": [
    "fetch:command",
    "stash-push:command",
    "switch:command"
  ],

  // Specifies how Git commands are sorted in the _Git Command Palette_
  //  - name: Sorts commands by name
  //  - usage: Sorts commands by last used date
  "gitlens.gitCommands.sortBy": "usage"

},
{
  // Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number
  "gitlens.autolinks": null,

  // Specifies whether to enable rich integrations with any supported remote services
  "gitlens.integrations.enabled": true,

  // Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share
  "gitlens.liveshare.allowGuestAccess": true,

  // Specifies the configuration of a partner integration
  "gitlens.partners": null,

  // Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services
  "gitlens.remotes": null

},
{
  // Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands
  "gitlens.terminal.overrideGitEditor": true,

  // Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more
  "gitlens.terminalLinks.enabled": true,

  // Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal
  "gitlens.terminalLinks.showDetailsView": true

},
{
  // Controla si los elementos del Esquema están colapsados o expandidos.
  //  - alwaysCollapse: Contraer todos los elementos.
  //  - alwaysExpand: Expandir todos los elementos.
  "outline.collapseItems": "alwaysExpand",

  // Representar elementos de esquema con iconos.
  "outline.icons": true,

  // Use distintivos para errores y advertencias en los elementos de esquema.
  "outline.problems.badges": true,

  // Use colores para errores y advertencias en los elementos de esquema.
  "outline.problems.colors": true,

  // Mostrar errores y advertencias en los elementos de esquema.
  "outline.problems.enabled": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "array".
  "outline.showArrays": true,

  // Si está habilitado, el contorno muestra símbolos de tipo "boolean".
  "outline.showBooleans": true,

  // Cuando está habilitado, el contorno muestra los símbolos de tipo "class".
  "outline.showClasses": true,

  // Si está habilitado, el contorno muestra símbolos de tipo "constant".
  "outline.showConstants": true,

  // Cuando está habilitado, el contorno muestra símbolos "constructor".
  "outline.showConstructors": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "enumMember".
  "outline.showEnumMembers": true,

  // Cuando está habilitado, el contorno muestra símbolos "enum".
  "outline.showEnums": true,

  // Cuando está activado, el contorno muestra símbolos de tipo "event".
  "outline.showEvents": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "field".
  "outline.showFields": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "file".
  "outline.showFiles": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "function".
  "outline.showFunctions": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "interface".
  "outline.showInterfaces": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "key".
  "outline.showKeys": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "method".
  "outline.showMethods": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "module".
  "outline.showModules": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "namespace".
  "outline.showNamespaces": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "null".
  "outline.showNull": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "number".
  "outline.showNumbers": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "object".
  "outline.showObjects": true,

  // Cuando está activado, el contorno muestra los símbolos de tipo "operator".
  "outline.showOperators": true,

  // Cuando está habilitado, el contorno muestra los símbolos de tipo "package".
  "outline.showPackages": true,

  // Si está habilitado, el contorno muestra los símbolos de tipo "property".
  "outline.showProperties": true,

  // Si está habilitado, el contorno muestra símbolos de tipo "string".
  "outline.showStrings": true,

  // Cuando se activa, el contorno muestra símbolos de tipo "struct".
  "outline.showStructs": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "typeParameter".
  "outline.showTypeParameters": true,

  // Cuando está habilitado, el contorno muestra símbolos de tipo "variable".
  "outline.showVariables": true

},
{
  // Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.defaultDateFormat": null,

  // Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, 'ja-JP = Japanese, etc.
  "gitlens.defaultDateLocale": null,

  // Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.defaultDateShortFormat": null,

  // Specifies whether commit dates should use the authored or committed date
  //  - authored: Uses the date when the changes were authored (i.e. originally written)
  //  - committed: Uses the date when the changes were committed
  "gitlens.defaultDateSource": "authored",

  // Specifies how dates will be displayed by default
  //  - relative: e.g. 1 day ago
  //  - absolute: e.g. July 25th, 2018 7:18pm
  "gitlens.defaultDateStyle": "relative",

  // Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
  "gitlens.defaultTimeFormat": null

},
{
  // Specifies which commands will be added to which menus
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": true
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "graph": true
    },
    "scmRepositoryInline": {
      "graph": true
    },
    "scmRepository": {
      "authors": true,
      "graph": false
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmItemInline": {},
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  }

},
{
  // Specifies the keymap to use for GitLens shortcut keys
  //  - alternate: Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)
  //  - chorded: Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)
  //  - none: No shortcut keys will be added
  "gitlens.keymap": "chorded"

},
{
  // Specifies the active GitLens mode, if any
  "gitlens.mode.active": "",

  // Specifies the active GitLens mode alignment in the status bar
  //  - left: Aligns to the left
  //  - right: Aligns to the right
  "gitlens.mode.statusBar.alignment": "right",

  // Specifies whether to provide the active GitLens mode in the status bar
  "gitlens.mode.statusBar.enabled": true,

  // Specifies the user-defined GitLens modes
  "gitlens.modes": {
    "zen": {
      "name": "Zen",
      "statusBarItemName": "Zen",
      "description": "for a zen-like experience, disables many visual features",
      "codeLens": false,
      "currentLine": false,
      "hovers": false,
      "statusBar": false
    },
    "review": {
      "name": "Review",
      "statusBarItemName": "Reviewing",
      "description": "for reviewing code, enables many visual features",
      "codeLens": true,
      "currentLine": true,
      "hovers": true
    }
  }

},
{
  // Specifies the length of abbreviated commit SHAs
  "gitlens.advanced.abbreviatedShaLength": 7,

  // Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `gitlens.advanced.abbreviatedShaLength`.
  "gitlens.advanced.abbreviateShaOnCopy": false,

  // Specifies additional arguments to pass to the `git blame` command
  "gitlens.advanced.blame.customArguments": null,

  // Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait
  "gitlens.advanced.blame.delayAfterEdit": 5000,

  // Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum
  "gitlens.advanced.blame.sizeThresholdAfterEdit": 5000,

  // Specifies whether git output will be cached — changing the default is not recommended
  "gitlens.advanced.caching.enabled": true,

  // Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order
  //  - null: Shows commits in reverse chronological order
  //  - date: Shows commits in reverse chronological order of the commit timestamp
  //  - author-date: Shows commits in reverse chronological order of the author timestamp
  //  - topo: Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history
  "gitlens.advanced.commitOrdering": null,

  // Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).
  "gitlens.advanced.externalDiffTool": null,

  // Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).
  "gitlens.advanced.externalDirectoryDiffTool": null,

  // Specifies the maximum number of items to show in a list. Use 0 to specify no maximum
  "gitlens.advanced.maxListItems": 200,

  // Specifies the maximum number of items to show in a search. Use 0 to specify no maximum
  "gitlens.advanced.maxSearchItems": 200,

  // Specifies which messages should be suppressed
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressCreatePullRequestPrompt": false,
    "suppressDebugLoggingWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitDisabledWarning": false,
    "suppressGitMissingWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false,
    "suppressRebaseSwitchToTextWarning": false,
    "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
    "suppressIntegrationRequestFailed500Warning": false,
    "suppressIntegrationRequestTimedOutWarning": false
  },

  // Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)
  "gitlens.advanced.quickPick.closeOnFocusOut": true,

  // Specifies how many folders deep to search for repositories. Defaults to `git.repositoryScanMaxDepth`
  "gitlens.advanced.repositorySearchDepth": null,

  // Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename
  "gitlens.advanced.similarityThreshold": null,

  // Deprecated. This setting is no longer used
  // Deprecated. This setting is no longer used
  "gitlens.advanced.useSymmetricDifferenceNotation": null,

  // Specifies whether to ignore whitespace when comparing revisions during blame operations
  "gitlens.blame.ignoreWhitespace": false,

  // Specifies debug mode
  "gitlens.debug": false,

  // Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value
  "gitlens.deepLinks.schemeOverride": false,

  // Specifies whether to attempt to detect nested repositories when opening files
  "gitlens.detectNestedRepositories": false,

  // Specifies the prompt to use to tell OpenAI how to structure or format the generated commit message
  "gitlens.experimental.generateCommitMessagePrompt": "The commit message must have a short description that is less than 50 characters long followed by a more detailed description on a new line.",

  // Specifies whether to allow the collection of product usage telemetry
  "gitlens.telemetry.enabled": true

},
{
  // Experimental. Controla si la vista Escala de tiempo cargará la página siguiente de elementos cuando se desplace al final de la lista.
  "timeline.pageOnScroll": false,

  // El número de elementos que se va a mostrar en la vista Escala de tiempo de forma predeterminada y cuando se cargan más elementos. Si se establece en "null" (valor predeterminado), se elige automáticamente un tamaño de página basado en el área visible de la vista Escala de tiempo.
  "timeline.pageSize": null

},
{
  // Configure los valores que se invalidarán para el idioma ansible.
  "[ansible]":  {
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma azure-pipelines.
  "[azure-pipelines]":  {
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma clojure.
  "[clojure]":  {
    "diffEditor.ignoreTrimWhitespace": false
  },

  // Configure los valores que se invalidarán para el idioma coffeescript.
  "[coffeescript]":  {
    "diffEditor.ignoreTrimWhitespace": false
  },

  // Configure los valores que se invalidarán para el idioma csharp.
  "[csharp]":  {
    "editor.maxTokenizationLineLength": 2500
  },

  // Configure los valores que se invalidarán para el idioma css.
  "[css]":  {
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma dockercompose.
  "[dockercompose]":  {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced"
  },

  // Configure los valores que se invalidarán para el idioma dockerfile.
  "[dockerfile]":  {
    "editor.quickSuggestions": {
        "strings": true
    }
  },

  // Configure los valores que se invalidarán para el idioma fsharp.
  "[fsharp]":  {
    "diffEditor.ignoreTrimWhitespace": false
  },

  // Configure los valores que se invalidarán para el idioma git-commit.
  "[git-commit]":  {
    "editor.rulers": [
        72
    ],
    "workbench.editor.restoreViewState": false
  },

  // Configure los valores que se invalidarán para el idioma git-rebase.
  "[git-rebase]":  {
    "workbench.editor.restoreViewState": false
  },

  // Configure los valores que se invalidarán para el idioma go.
  "[go]":  {
    "editor.insertSpaces": false
  },

  // Configure los valores que se invalidarán para el idioma handlebars.
  "[handlebars]":  {
    "editor.suggest.insertMode": "replace"
  },

  // Configure los valores que se invalidarán para el idioma html.
  "[html]":  {
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma jade.
  "[jade]":  {
    "diffEditor.ignoreTrimWhitespace": false
  },

  // Configure los valores que se invalidarán para el idioma java.
  "[java]":  {
    "editor.suggest.snippetsPreventQuickSuggestions": false
  },

  // Configure los valores que se invalidarán para el idioma javascript.
  "[javascript]":  {
    "editor.maxTokenizationLineLength": 2500
  },

  // Configure los valores que se invalidarán para el idioma json.
  "[json]":  {
    "editor.quickSuggestions": {
        "strings": true
    },
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma jsonc.
  "[jsonc]":  {
    "editor.quickSuggestions": {
        "strings": true
    },
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma less.
  "[less]":  {
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma makefile.
  "[makefile]":  {
    "editor.insertSpaces": false
  },

  // Configure los valores que se invalidarán para el idioma markdown.
  "[markdown]":  {
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
        "comments": "off",
        "strings": "off",
        "other": "off"
    }
  },

  // Configure los valores que se invalidarán para el idioma plaintext.
  "[plaintext]":  {
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "editor.unicodeHighlight.invisibleCharacters": false
  },

  // Configure los valores que se invalidarán para el idioma postcss.
  "[postcss]":  {
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma python.
  "[python]":  {
    "diffEditor.ignoreTrimWhitespace": false,
    "gitlens.codeLens.symbolScopes": [
        "!Module"
    ],
    "editor.wordBasedSuggestions": false
  },

  // Configure los valores que se invalidarán para el idioma scss.
  "[scss]":  {
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma search-result.
  "[search-result]":  {
    "editor.lineNumbers": "off"
  },

  // Configure los valores que se invalidarán para el idioma shellscript.
  "[shellscript]":  {
    "files.eol": "\n"
  },

  // Configure los valores que se invalidarán para el idioma stylus.
  "[stylus]":  {
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma vue.
  "[vue]":  {
    "gitlens.codeLens.scopes": [
        "document"
    ]
  },

  // Configure los valores que se invalidarán para el idioma yaml.
  "[yaml]":  {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "diffEditor.ignoreTrimWhitespace": false,
    "gitlens.codeLens.scopes": [
        "document"
    ]
  }

},
{
  // Si se deben anular los cambios de posición o no
  "audioCues.debouncePositionChanges": false,

  // Reproduce un sonido cuando el foco se mueve a una línea eliminada en modo de revisión de diferencias o al cambio siguiente o anterior.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.diffLineDeleted": "auto",

  // Reproduce un sonido cuando el foco se mueve a una línea insertada en modo de revisión de diferencias o al cambio siguiente o anterior
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.diffLineInserted": "auto",

  // Reproduce un sonido cuando el foco se mueve a una línea modificada en modo de revisión de diferencias o al cambio siguiente o anterior
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.diffLineModified": "auto",

  // Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).
  // 
  "audioCues.enabled": null,

  // Reproduce un sonido cuando la línea activa tiene un punto de interrupción.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.lineHasBreakpoint": "auto",

  // Reproduce un sonido cuando la línea activa tiene un error.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.lineHasError": "auto",

  // Reproduce un sonido cuando la línea activa tiene un área doblada que se puede desplegar.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.lineHasFoldedArea": "auto",

  // Reproduce un sonido cuando la línea activa tiene una sugerencia insertada.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.lineHasInlineSuggestion": "auto",

  // Reproduce un sonido cuando la línea activa tiene una advertencia.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.lineHasWarning": "off",

  // Reproduce un sonido al intentar leer una línea con sugerencias de incrustación que no tiene sugerencias de incrustación.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.noInlayHints": "auto",

  // Reproduce un sonido cuando la ejecución de una celda del bloc de notas se completa correctamente.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.notebookCellCompleted": "auto",

  // Reproduce un sonido cuando se produce un error en la ejecución de una celda del bloc de notas.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.notebookCellFailed": "auto",

  // Reproduce un sonido cuando el depurador se detiene en un punto de interrupción.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.onDebugBreak": "auto",

  // Reproduce un sonido cuando se completa una tarea.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.taskCompleted": "auto",

  // Reproduce un sonido cuando se produce un error en una tarea (código de salida distinto de cero).
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.taskFailed": "auto",

  // Reproduce un sonido cuando se produce un error en un comando de terminal (código de salida distinto de cero).
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.terminalCommandFailed": "auto",

  // Reproduce un sonido cuando hay correcciones rápidas de terminal disponibles.
  //  - auto: Habilita las indicaciones de audio cuando se conecta un lector de pantalla.
  //  - on: Habilite indicaciones de audio.
  //  - off: Deshabilitar indicaciones de audio.
  "audioCues.terminalQuickFix": "auto",

  // Volumen de las indicaciones de audio en porcentaje (0-100).
  "audioCues.volume": 70

},
{
  // Nombre con el que se registra el acceso al túnel remoto. Si no se establece, se usa el nombre de host.
  "remote.tunnels.access.hostNameOverride": "",

  // Impedir que el equipo entre en modo suspensión cuando el acceso al túnel remoto está activado.
  "remote.tunnels.access.preventSleep": false

},
{
  // Cuando se habilita, se detectan los nuevos procesos en ejecución y se reenvían automáticamente los puertos en los que atienden. Si deshabilita esta configuración, no impedirá que se reenvíen todos los puertos. Aunque esté deshabilitada, las extensiones aún podrán hacer que se reenvíen los puertos y, al abrir algunas direcciones URL, esto provocará el reenvío de puertos.
  "remote.autoForwardPorts": true,

  // Establece el origen desde el que se reenvían los puertos de forma automática cuando `remote.autoForwardPorts` es true. En los equipos remotos con Windows y Mac, la opción de "proceso" no tiene ningún efecto y se usa "salida". Para que surta efecto, es necesario recargar.
  //  - process: Los puertos se reenviarán automáticamente cuando se detecten al inspeccionar los procesos que se hayan iniciado e incluyan un puerto.
  //  - output: Los puertos se reenviarán automáticamente cuando se detecten al leer la salida de depuración y del terminal. No todos los procesos que usan puertos se imprimirán en la consola integrada de depuración o del terminal, por lo que faltarán algunos puertos. No se anulará el reenvío de los puertos reenviados en función de la salida hasta que se realice una recarga o hasta que el usuario cierre el puerto en la vista Puertos.
  "remote.autoForwardPortsSource": "process",

  // Reemplace el tipo de extensión. Las extensiones "ui"' se instalan y ejecutan en el equipo local, mientras que las extensiones "workspace" se ejecutan en el espacio remoto. Al invalidar el tipo predeterminado de una extensión mediante esta configuración, debe especificar si esa extensión debe instalarse y habilitarse localmente o remotamente.
  "remote.extensionKind": {
    "pub.name": [
      "ui"
    ]
  },

  // Controla si las direcciones URL locales con un puerto se reenviarán cuando se abran desde el terminal y la consola de depuración.
  "remote.forwardOnOpen": true,

  // Especifica el nombre de host local que se usará para el reenvío de puertos.
  "remote.localPortHost": "localhost",

  // Establezca las propiedades predeterminadas que se aplican a todos los puertos que no obtienen propiedades de la configuración `remote.portsAttributes`. Por ejemplo:
  // 
  // ```
  // {
  //   "onAutoForward": "ignore"
  // }
  // ```
  "remote.otherPortsAttributes": {},

  // Establezca las propiedades que se aplican cuando se reenvía un número de puerto específico. Por ejemplo:
  // 
  // ```
  // "3000": {
  //   "label": "Application"
  // },
  // "40000-55000": {
  //   "onAutoForward": "ignore"
  // },
  // ".+\\/server.js": {
  //  "onAutoForward": "openPreview"
  // }
  // ```
  "remote.portsAttributes": {
    "443": {
      "protocol": "https"
    },
    "8443": {
      "protocol": "https"
    }
  },

  // Restaura los puertos reenviados en un área de trabajo.
  "remote.restoreForwardedPorts": true

},
{
  // Cuando las extensiones habilitadas se descargan localmente e instalan en el control remoto.
  "remote.downloadExtensionsLocally": false

},
{
  // 
  //  - smart: Usa el algoritmo de comparación predeterminado.
  //  - experimental: Usa un algoritmo de comparación experimental.
  "mergeEditor.diffAlgorithm": "experimental",

  // Controls if deletions in base or one of the inputs should be indicated by a vertical bar.
  "mergeEditor.showDeletionMarkers": true

},
{
  // Matriz de lenguajes donde no deben expandirse las abreviaturas de Emmet.
  "emmet.excludeLanguages": [
    "markdown"
  ],

  // Una matriz de rutas, donde cada ruta puede contener syntaxProfiles de Emmet y / o archivos de fragmentos.
  //  En caso de conflictos, los perfiles / fragmentos de las rutas posteriores anularán los de las rutas anteriores.
  //  Consulte https://code.visualstudio.com/docs/editor/emmet para obtener más información y un archivo de fragmento de ejemplo.
  "emmet.extensionsPath": [],

  // Habilite la abreviación Emmet en los lenguajes que no se admiten de forma predeterminada. Agregue una asignación aquí entre el lenguaje y el lenguaje compatible con Emmet.
  //  Por ejemplo: "{"vue-html": "html", "javascript": "javascriptreact"}"
  "emmet.includeLanguages": {},

  // Cuando se establece en "false", se analiza el archivo entero para determinar si la posición actual es válida para la expansión de abreviaciones Emmet. Cuando se establece en "true", solo se analiza el contenido alrededor de la posición actual en archivos CSS, SCSS o Less.
  "emmet.optimizeStylesheetParsing": true,

  // Preferencias usadas para modificar el comportamiento de algunas acciones y resoluciones de Emmet.
  "emmet.preferences": {},

  // Muestra posibles abreviaciones Emmet como sugerencias. No se aplica a hojas de estilos ni cuando emmet.showExpandedAbbreviation está establecido en "never". 
  "emmet.showAbbreviationSuggestions": true,

  // Muestra las abreviaciones Emmet expandidas como sugerencias.
  // La opción "inMarkupAndStylesheetFilesOnly" se aplica a html, haml, jade, slim, xml, xsl, css, scss, sass, less y stylus.
  // La opción "always" se aplica a todas las partes del archivo, independientemente del marcado o CSS.
  "emmet.showExpandedAbbreviation": "always",

  // Si es "true", las sugerencias Emmet se muestran como fragmentos de código, de modo que puede ordenarlas por el valor "#editor.snippetSuggestions#". 
  "emmet.showSuggestionsAsSnippets": false,

  // Defina el perfil de la sintaxis especificada o use su propio perfil con reglas específicas.
  "emmet.syntaxProfiles": {},

  // Cuando se habilita, las abreviaciones Emmet se expanden al presionar TAB, incluso cuando las finalizaciones no se muestran. Cuando está deshabilitada, las finalizaciones que se muestran se pueden aceptar presionando TAB.
  "emmet.triggerExpansionOnTab": false,

  // Si es "true", Emmet usará finalizaciones insertadas para sugerir expansiones. Para evitar que el proveedor de elementos de finalización no insertados aparezca con la frecuencia con la que esta configuración es "true", active "#editor.quickSuggestions#" en "inline" o "off" para el elemento "other".
  "emmet.useInlineCompletions": false,

  // Variables para ser utilizadas en fragmentos de código de Emmet
  "emmet.variables": {}

},
{
  // Controla si está habilitada la opción de forzar envío de cambios (con o sin concesión).
  "git.allowForcePush": false,

  // Controla si se permiten las confirmaciones sin ejecutar enlaces previos a la confirmación y de mensajes de confirmación.
  "git.allowNoVerifyCommit": false,

  // Permitir siempre el grupo de recursos Cambios almacenados provisionalmente.
  "git.alwaysShowStagedChangesResourceGroup": false,

  // Controla el indicador de firma para todos los commits
  "git.alwaysSignOff": false,

  // Cuando se establece en true, se aplica "fetch" a los "commits" de forma automática para recuperar los cambios del elemento remoto predeterminado del repositorio GIT actual. Si se establece en "all" se recuperan los cambios con "fetch" de todos los elementos remotos.
  "git.autofetch": false,

  // Duración en segundos entre cada búsqueda de GIT automática, cuando se habilita "git.autofetch".
  "git.autofetchPeriod": 180,

  // Si la actualización automática es habilitada.
  "git.autorefresh": true,

  // Configura cuándo los repositorios deben detectarse automáticamente.
  //  - true: Buscar por ambas subcarpetas de la carpeta abierta actual y carpetas padre de archivos abiertos.
  //  - false: Desactivar el escaneado automático de repositorio.
  //  - subFolders: Buscar por subcarpetas de la carpeta actualmente abierta.
  //  - openEditors: Buscar por carpetas padre de los archivos abiertos.
  "git.autoRepositoryDetection": true,

  // Guarde cualquier cambio antes de insertar y restaurarlos cuando la inserción se haya completado correctamente.
  "git.autoStash": false,

  // Prefijo usado al crear una rama nueva.
  "git.branchPrefix": "",

  // Lista de ramas protegidas. De forma predeterminada, se muestra un mensaje antes de que se confirmen los cambios en una rama protegida. El mensaje se puede controlar mediante la configuración '#git.branchProtectionPrompt#'.
  "git.branchProtection": [],

  // Controla si se muestra un mensaje antes de confirmar los cambios en una rama protegida.
  //  - alwaysCommit: Confirmar siempre los cambios en la rama protegida.
  //  - alwaysCommitToNewBranch: Confirmar siempre los cambios en una rama nueva.
  //  - alwaysPrompt: Preguntar siempre antes de que los cambios se confirmen en una rama protegida.
  "git.branchProtectionPrompt": "alwaysPrompt",

  // Lista de diccionarios usados para el nombre de rama generado aleatoriamente. Cada valor representa el diccionario usado para generar el segmento del nombre de rama. Diccionarios admitidos: "adjetivos", "animales", "colores" y "números".
  //  - adjectives: Un adjetivo aleatorio
  //  - animals: Un nombre de animal aleatorio
  //  - colors: Un nombre de color aleatorio
  //  - numbers: Un número aleatorio entre 100 y 999
  "git.branchRandomName.dictionary": [
    "adjectives",
    "animals"
  ],

  // Controla si se genera un nombre aleatorio al crear una rama nueva.
  "git.branchRandomName.enable": false,

  // Controla el criterio de ordenación de las bifurcaciones.
  "git.branchSortOrder": "committerdate",

  // Una expresión regular para validar nuevos nombres de rama.
  "git.branchValidationRegex": "",

  // Carácter que reemplazará los espacios en blanco en los nuevos nombres de rama y para separar los segmentos de un nombre de rama generado aleatoriamente.
  "git.branchWhitespaceChar": "-",

  // Controla qué tipo de referencias GIT aparecen en la lista al ejecutar "Extraer del repositorio en..." .
  //  - local: Ramas locales
  //  - tags: Etiquetas
  //  - remote: Ramas remotas
  "git.checkoutType": [
    "local",
    "remote",
    "tags"
  ],

  // Controla si el editor de diferencias debe cerrarse automáticamente cuando los cambios se guardan provisionalmente, se confirman, se descartan, se almacenan provisionalmente o se quitan.
  "git.closeDiffOnOperation": false,

  // Lista de comandos git (p. ej., commit, push) que tendrían `stdout` registrado en el [git output](command:git.showOutput). Si el comando git tiene configurado un enlace del lado cliente, el enlace del lado cliente `stdout` también se registrará en el [git output](command:git.showOutput).
  "git.commandsToLog": [],

  // Confirme siempre la creación de confirmaciones vacías para el comando "Git: Commit Empty".
  "git.confirmEmptyCommits": true,

  // Controla si va a solicitar confirmación antes de forzar envío de cambios.
  "git.confirmForcePush": true,

  // Controla si se debe pedir confirmación antes de ejecutar sin comprobación.
  "git.confirmNoVerifyCommit": true,

  // Confirmar antes de sincronizar repositorios GIT.
  "git.confirmSync": true,

  // Controla la insignia de recuento de Git.
  //  - all: Recuento de todos los cambios.
  //  - tracked: Recuento solo de los cambios de los que se ha realizado seguimiento.
  //  - off: Desactive el contador.
  "git.countBadge": "all",

  // Controla si GIT aporta colores y distintivos al explorador y a la vista Editores abiertos.
  "git.decorations.enabled": true,

  // La ubicación predeterminada en la que se clona un repositorio de GIT.
  "git.defaultCloneDirectory": null,

  // Controla si se detectan automáticamente los submódulos Git. 
  "git.detectSubmodules": true,

  // Controla el límite de submódulos de git detectados.
  "git.detectSubmodulesLimit": 10,

  // Habilita la firma de "commit" con GPG o X.509.
  "git.enableCommitSigning": false,

  // Si GIT está habilitado.
  "git.enabled": true,

  // Confirmar todos los cambios cuando no hay elementos almacenados provisionalmente.
  "git.enableSmartCommit": false,

  // Controla si el comando Git Sync aparece en la barra de estado.
  "git.enableStatusBarSync": true,

  // Cuando esté activado, obtenga todas las ramas al insertar. De lo contrario, obtenga solo la actual.
  "git.fetchOnPull": false,

  // Inserte todas las etiquetas anotadas al ejecutar el comando sync.
  "git.followTagsWhenSync": false,

  // This setting is now deprecated, please use `github.gitAuthentication` instead.
  // 
  "git.githubAuthentication": null,

  // Lista de repositorios GIT que se van a ignorar.
  "git.ignoredRepositories": [],

  // Ignora las advertencias hereradas de GIT.
  "git.ignoreLegacyWarning": false,

  // Ignora la advertencia cuando hay demasiados cambios en un repositorio.
  "git.ignoreLimitWarning": false,

  // Ignora la advertencia cuando falta Git.
  "git.ignoreMissingGitWarning": false,

  // Ignora la advertencia cuando parece que la rama se ha fusionado mediante cambio de base con "rebase" durante la incorporación de cambios con "pull".
  "git.ignoreRebaseWarning": false,

  // Ignore las modificaciones de los submódulos en el árbol de archivos.
  "git.ignoreSubmodules": false,

  // Ignora la advertencia cuando Git 2.25 - 2.26 está instalado en Windows.
  "git.ignoreWindowsGit27Warning": false,

  // Controla cuándo mostrar el mensaje de validación de entrada en el contador de entrada.
  "git.inputValidation": "warn",

  // Controla el umbral de longitud de mensaje de confirmación para mostrar una advertencia.
  "git.inputValidationLength": 72,

  // Controla el umbral de longitud del asunto del mensaje de confirmación para mostrar una advertencia. Desactívelo para heredar el valor de "config.inputValidationLength".
  "git.inputValidationSubjectLength": 50,

  // Abra el editor de combinación para los archivos que están actualmente en conflicto.
  "git.mergeEditor": false,

  // Controla si se va a abrir un repositorio de forma automática después de la clonación.
  //  - always: Abrir siempre en la ventana actual.
  //  - alwaysNewWindow: Abrir siempre en una ventana nueva.
  //  - whenNoFolderOpen: Abrir solo en la ventana actual si no hay ninguna carpeta abierta.
  //  - prompt: Solicitar siempre la acción.
  "git.openAfterClone": "prompt",

  // Controla si el editor diff debe abrirse al hacer clic en un cambio. De lo contrario se abrirá el editor normal.
  "git.openDiffOnClick": true,

  // Controlar si se debe abrir un repositorio en carpetas primarias de áreas de trabajo o archivos abiertos.
  //  - always: Abra siempre un repositorio en carpetas primarias de áreas de trabajo o archivos abiertos.
  //  - never: Nunca abra un repositorio en carpetas primarias de áreas de trabajo ni archivos abiertos.
  //  - prompt: Preguntar antes de abrir un repositorio en las carpetas primarias de las áreas de trabajo o abrir archivos.
  "git.openRepositoryInParentFolders": "prompt",

  // Controle si se debe actualizar de manera optimista el estado de la vista Control de código fuente después de ejecutar comandos de Git.
  "git.optimisticUpdate": true,

  // Ruta de acceso y nombre de archivo del archivo ejecutable git; por ejemplo, "C:\Program Files\Git\bin\git.exe" (Windows). También puede ser una matriz de valores de cadena que contiene varias rutas de acceso para buscar.
  "git.path": null,

  // Ejecuta un comando de git después de una confirmación correcta.
  //  - none: No ejecutar ningún comando después de una confirmación.
  //  - push: Ejecute "git push" después de una confirmación correcta.
  //  - sync: Ejecute "git pull" y "git push" después de una confirmación correcta.
  "git.postCommitCommand": "none",

  // Controla si Git debe comprobar los archivos no guardados antes de confirmar las actualizaciones. 
  //  - always: Compruebe si hay archivos sin guardar.
  //  - staged: Compruebe solo si hay archivos preconfigurados sin guardar.
  //  - never: Desactive esta comprobación.
  "git.promptToSaveFilesBeforeCommit": "always",

  // Controla si GIT debe comprobar los archivos no guardados antes de guardar los cambios provisionalmente con "stash". 
  //  - always: Compruebe si hay archivos sin guardar.
  //  - staged: Compruebe solo si hay archivos preconfigurados sin guardar.
  //  - never: Desactive esta comprobación.
  "git.promptToSaveFilesBeforeStash": "always",

  // Eliminar al hacer "fetch".
  "git.pruneOnFetch": false,

  // Controla si una rama que no tiene confirmaciones salientes se reenvía rápidamente antes de restaurarse.
  "git.pullBeforeCheckout": false,

  // Recupere todas las etiquetas al insertar.
  "git.pullTags": true,

  // Forzar que GIT utilice la fusión mediante cambio de base cuando se ejecute el comando de sincronización.
  "git.rebaseWhenSync": false,

  // Recuerde el último comando git que se ejecutó después de una confirmación.
  "git.rememberPostCommitCommand": false,

  // Lista de carpetas que se ignoran al buscar repositorios Git cuando `git.autoRepositoryDetection` se establece como `true` o `subFolders`.
  "git.repositoryScanIgnoredFolders": [
    "node_modules"
  ],

  // Controla la profundidad usada al examinar las carpetas del área de trabajo en busca de repositorios Git cuando "#git.autoRepositoryDetection#" está establecido en "true" o "subFolders". Se puede establecer en "-1" para que no haya límite.
  "git.repositoryScanMaxDepth": 1,

  // Controla si se va a requerir una configuración de usuario de GIT explícita o se va a permitir a GIT que la adivine si falta.
  "git.requireGitUserConfig": true,

  // Lista de rutas en las que buscar repositorios de git.
  "git.scanRepositories": [],

  // Controla si se muestra un botón de acción en la vista Control de código fuente.
  "git.showActionButton": {
    "commit": true,
    "publish": true,
    "sync": true
  },

  // Controla si se va a mostrar la entrada de confirmación en el panel de control de código fuente de GIT.
  "git.showCommitInput": true,

  // Controla si se debe mostrar una acción de archivo abierto en la vista de cambios en Git
  "git.showInlineOpenFileAction": true,

  // Controla si las acciones de git deben mostrar el progreso.
  "git.showProgress": true,

  // Controla si se va a mostrar una notificación cuando un push es exitoso.
  "git.showPushSuccessNotification": false,

  // Controle qué cambios se realizan automáticamente mediante Smart Commit.
  //  - all: Agregar todos los cambios automáticamente al "stage".
  //  - tracked: Solo cambios de seguimiento "staged" automáticamente.
  "git.smartCommitChanges": "all",

  // Controla cómo limitar el número de cambios que se pueden analizar desde el comando de estado de Git. Se puede establecer en 0 sin límite.
  "git.statusLimit": 10000,

  // Sugiere habilitar la confirmación inteligente (confirmar todos los cambios cuando no hay cambios "staged").
  "git.suggestSmartCommit": true,

  // Controla si aparece una notificación al ejecutar la acción Sincronizar, que permite al usuario cancelar la operación.
  "git.supportCancellation": false,

  // Controla si debe habilitarse VS Code como controlador de autenticación para los procesos GIT que se generan en el terminal integrado. Nota: Los terminales deben reiniciarse para recoger el cambio en esta configuración.
  "git.terminalAuthentication": true,

  // Controla si se permite que VS Code sea el editor Git para los procesos Git generados en la terminal integrada. Nota: los terminales deben reiniciarse para recoger un cambio en esta configuración.
  "git.terminalGitEditor": false,

  // Controla la fecha que se va a usar para los elementos de la vista Escala de tiempo.
  //  - committed: Usar la fecha de confirmación
  //  - authored: Usar la fecha de creación
  "git.timeline.date": "committed",

  // Controla si se va a mostrar el autor del "commit" en la vista Escala de tiempo.
  "git.timeline.showAuthor": true,

  // Controla si se van a mostrar los cambios no confirmados en la vista Escala de tiempo.
  "git.timeline.showUncommitted": false,

  // Controla el comportamiento de los cambios a los que no se hace seguimiento.
  //  - mixed: Todos los cambios, rastreados y no rastreados, aparecen juntos y se comportan por igual.
  //  - separate: Los cambios sin seguimiento aparecen por separado en la vista de control de código fuente. También se excluyen de varias acciones.
  //  - hidden: Los cambios a los que no se realiza seguimiento se ocultan y se excluyen de varias acciones.
  "git.untrackedChanges": "mixed",

  // Controla si se va a usar el mensaje del cuadro de entrada de "commit" como mensaje "stash" predeterminado.
  "git.useCommitInputAsStashMessage": false,

  // Controla si un editor de texto completo será utilizado para crear mensajes de confirmación, siempre que no se proporcione ningún mensaje en el cuadro de entrada de confirmación.
  "git.useEditorAsCommitInput": true,

  // Controla si forzar envío de cambios usa variante de forzar con concesión, más segura.
  "git.useForcePushWithLease": true,

  // Controla si se debe sobrescribir GIT_ASKPASS para usar la versión integrada.
  "git.useIntegratedAskPass": true,

  // Habilite la salida detallada cuando "#git.useEditorAsCommitInput#" esté habilitado.
  "git.verboseCommit": false

},
{
  // Controla si se debe habilitar la autenticación automática de GitHub para los comandos GIT dentro de VS Code.
  "github.gitAuthentication": true,

  // Controla qué protocolo se usa para clonar un repositorio de GitHub
  "github.gitProtocol": "https"

},
{
  // GitHub Enterprise Server URI
  "github-enterprise.uri": ""

},
{
  // Controla la habilitación de la detección de tareas de Gulp. La detección de tareas de Gulp puede hacer que se ejecuten archivos en cualquier espacio de trabajo abierto.
  "grunt.autoDetect": "off"

},
{
  // Controla la habilitación de la detección de tareas de Gulp. La detección de tareas de Gulp puede hacer que se ejecuten archivos en cualquier espacio de trabajo abierto.
  "gulp.autoDetect": "off"

},
{
  // Habilite o deshabilite el pegado de imágenes en celdas de Markdown en archivos de bloc de notas de ipynb. Las imágenes pegadas se insertan como datos adjuntos en la celda.
  "ipynb.pasteImagesAsAttachments.enabled": true

},
{
  // Controla la activación de la detección de tareas de Jake. La detección de tareas de Jake puede hacer que se ejecuten los archivos de cualquier área de trabajo abierta.
  "jake.autoDetect": "off"

},
{
  // Habilite o deshabilite la representación matemática en la vista previa integrada de Markdown.
  "markdown.math.enabled": true

},
{
  // Indica si, después de resolver un conflicto de fusión mediante combinación, se va automáticamente al siguiente conflicto de este tipo.
  "merge-conflict.autoNavigateNextConflict.enabled": false,

  // Cree CodeLens para los bloques de conflictos de fusión mediante combinación en el editor.
  "merge-conflict.codeLens.enabled": true,

  // Cree elementos Decorator para los bloques de conflictos de fusión mediante combinación en el editor.
  "merge-conflict.decorators.enabled": true,

  // Controla dónde se debe abrir la vista de diferencias al comparar los cambios en los conflictos de combinación.
  //  - Current: Abra la vista de diferencias en el grupo de editor actual.
  //  - Beside: Abra la vista de diferencias junto al grupo de editor actual.
  //  - Below: Abra la vista de diferencias debajo del grupo de editor actual.
  "merge-conflict.diffViewPosition": "Current"

},
{
  // Configura los procesos que se van a asociar y a depurar automáticamente cuando "#debug.node.autoAttach#" esté activado. Un proceso de Node iniciado con la marca "--inspect" se asociará siempre, independientemente de esta configuración.
  //  - always: Asocia automáticamente a todos los procesos de Node.js iniciados en el terminal.
  //  - smart: Asocia automáticamente cuando se ejecutan scripts que no están en una carpeta node_modules.
  //  - onlyWithFlag: Solo se puede asociar automáticamente cuando se proporciona la marca "--inspect".
  //  - disabled: Conexión automática está desactivada y no se muestra en la barra de estado.
  "debug.javascript.autoAttachFilter": "disabled",

  // Configures glob patterns for determining when to attach in "smart" `debug.javascript.autoAttachFilter` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).
  "debug.javascript.autoAttachSmartPattern": [
    "${workspaceFolder}/**",
    "!**/node_modules/**",
    "**/$KNOWN_TOOLS$/**"
  ],

  // Al depurar una aplicación web remota, se establece si se debe hacer un túnel automático del servidor remoto al equipo local.
  "debug.javascript.automaticallyTunnelRemoteServer": true,

  // Controla si se debe detener cuando los puntos de interrupción condicionales producen un error.
  "debug.javascript.breakOnConditionalError": false,

  // Lugar en que se debe mostrar una lente de código "Ejecutar" y "Depurar" en los scripts npm. Puede estar en todos, en scripts, sobre la sección del script o bien no mostrarse nunca.
  "debug.javascript.codelens.npmScripts": "top",

  // Opciones utilizadas al depurar vínculos abiertos en los que se ha hecho clic desde dentro del terminal de depuración. Se puede establecer en "false" para deshabilitar este comportamiento.
  "debug.javascript.debugByLinkOptions": "on",

  // Valor predeterminado de "runtimeExecutable" que se usa para las configuraciones de inicio, si no se especifica un valor. Se puede usar para configurar rutas de acceso personalizadas a Node.js o a las instalaciones del explorador.
  "debug.javascript.defaultRuntimeExecutable": {
    "pwa-node": "node"
  },

  // Opciones predeterminadas que se usan al depurar un proceso mediante el comando "Debug: Attach to Node.js Process"
  "debug.javascript.pickAndAttachOptions": {},

  // Opciones de solicitud que se van a usar al cargar los recursos (como los mapas de origen) en el depurador. Puede ser necesario configurar esto si los mapas de origen requieren autenticación o el uso de un certificado autofirmado, por ejemplo. Las opciones se usan para crear una solicitud con la biblioteca ["got"](https://github.com/sindresorhus/got).
  // 
  // Un caso habitual para deshabilitar la comprobación de certificados puede realizarse si se pasa "{ "https": { "rejectUnauthorized": false } }".
  "debug.javascript.resourceRequestOptions": {},

  // Opciones de inicio predeterminadas para el terminal de depuración de JavaScript y los scripts npm.
  "debug.javascript.terminalOptions": {},

  // Configura si el archivo sin mapa de origen donde no se puede leer el archivo original se desasignará automáticamente. Si es false (predeterminado), se muestra un mensaje.
  "debug.javascript.unmapMissingSources": false

},
{
  // Controla si los scripts npm deben detectarse automáticamente.
  "npm.autoDetect": "on",

  // Habilite la ejecución de scripts NPM contenidos en una carpeta desde el menú contextual del Explorador.
  "npm.enableRunFromFolder": false,

  // The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.
  // Habilite una vista de explorador para scripts npm cuando no haya ningún archivo "package.json" de nivel superior.
  "npm.enableScriptExplorer": false,

  // Configura patrones globales para carpetas que deben excluirse de la detección automática de scripts. 
  "npm.exclude": "",

  // Recupere datos de https://registry.npmjs.org y https://registry.bower.io para proporcionar la finalización automática y la información sobre las características de desplazamiento de puntero en las dependencias de npm.
  "npm.fetchOnlinePackageInfo": true,

  // El administrador de paquetes utilizado para ejecutar secuencias de comandos. 
  //  - auto: Detecta automáticamente el administrador de paquetes que se va a usar para ejecutar los scripts en función de los archivos de bloqueo y los administradores de paquetes instalados.
  //  - npm: Use npm como administrador de paquetes para ejecutar los scripts.
  //  - yarn: Use Yarn como administrador de paquetes para ejecutar los scripts.
  //  - pnpm: Use pnpm como administrador de paquetes para ejecutar los scripts.
  "npm.packageManager": "auto",

  // Ejecutar comandos de npm con la opción '--silent'
  "npm.runSilent": false,

  // La acción de clic predeterminada utilizada en el explorador de scripts NPM: "open" o "run", el valor predeterminado es "open".
  "npm.scriptExplorerAction": "open",

  // Una matriz de expresiones regulares que indican qué scripts deben excluirse de la vista de Scripts NPM.
  "npm.scriptExplorerExclude": [],

  // Mostrar al mantener el puntero con los comandos "Ejecutar" y "Depurar" para los scripts.
  "npm.scriptHover": true

},
{
  // Controla si se invoca "Ver referencias" o "Buscar referencias" al seleccionar las referencias de CodeLens.
  //  - peek: Mostrar referencias en el editor de inspección.
  //  - view: Mostrar referencias en vista independiente.
  "references.preferredLocation": "peek"

},
{
  // Habilita o deshabilita el indicador flotante que se muestra cuando se tiene el foco en el explorador sencillo.
  "simpleBrowser.focusLockIndicator.enabled": true

},
{
  // Confirm amend commit
  "commit-message-editor.confirmAmend": true,

  // Template for the form view. You can refer to tokens in {token_name} format.
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],

  // If more than two empty lines follow each other, only the first two lines will be kept. The last line also will be removed if it is empty.
  "commit-message-editor.reduceEmptyLines": true,

  // Template for the text view.
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],

  // Editable inputs in the form view
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "description": "A scope may be provided to a commit’s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "type": "text",
      "multiline": false,
      "prefix": "(",
      "suffix": ")"
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ],

  // In which column the editor should open
  //  - Active: Open in the active column
  //  - Beside: Open next to the active column
  //  - One: Open in the first column
  //  - Two: Open in the second column
  //  - Three: Open in the third column
  //  - Four: Open in the fourth column
  //  - Five: Open in the fifth column
  //  - Six: Open in the sixth column
  //  - Seven: Open in the seventh column
  //  - Eight: Open in the eighth column
  //  - Nine: Open in the ninth column
  "commit-message-editor.view.columnToShowIn": "Active",

  // 
  "commit-message-editor.view.defaultView": "text",

  // The editor fills the whole available space.
  "commit-message-editor.view.fullWidth": false,

  // Render vertical rulers after a certain number of monospace characters in the monospace editor. Use multiple values for multiple rulers. No rulers are drawn if array is empty.
  "commit-message-editor.view.rulers": [
    50,
    72
  ],

  // Close commit message editor tab after saving
  "commit-message-editor.view.saveAndClose": false,

  // Show recent commits in the main view.
  "commit-message-editor.view.showRecentCommits": true,

  // Tab size in the monospace editor
  "commit-message-editor.view.tabSize": 4,

  // Use monospace font in the text view
  "commit-message-editor.view.useMonospaceEditor": false,

  // Use tabs for indentation in the monospace editor
  "commit-message-editor.view.useTabs": false,

  // Visible lines in the text view
  "commit-message-editor.view.visibleLines": 10,

  // 
  "commit-message-editor.view.visibleViews": "both"

},
{
  // The background color of the snippet's container
  "codesnap.backgroundColor": "#abb8c3",

  // The CSS box-shadow for the snippet
  "codesnap.boxShadow": "rgba(0, 0, 0, 0.55) 0px 20px 68px",

  // The padding for the snippet's container
  "codesnap.containerPadding": "3em",

  // Start from the selection's line number instead of 1
  "codesnap.realLineNumbers": false,

  // Use rounded corners for the window
  "codesnap.roundedCorners": true,

  // Display line numbers
  "codesnap.showLineNumbers": true,

  // Display OS X style window controls
  "codesnap.showWindowControls": true,

  // Display window title with open folder / file name
  "codesnap.showWindowTitle": false,

  // The behavior of the shutter button
  "codesnap.shutterAction": "save",

  // Take the shot with or without the container
  "codesnap.target": "container",

  // Use a transparent background when taking the screenshot
  "codesnap.transparentBackground": false

},
{
  // Should cache the VSCode, Git and SVN projects found?
  "projectManager.cacheProjectsBetweenSessions": true,

  // Should check for invalid paths before listing, showing a message below the project name?
  "projectManager.checkInvalidPathsBeforeListing": true,

  // Controls whether the extension should ask for confirmation when opening projects in the active window.
  //  - never: Whenever you call the Open command, it will ask for confirmation
  //  - onlyUsingCommandPalette: Only ask for confirmation if you use the Command Palette
  //  - onlyUsingSideBar: Only ask for confirmation if you use the Side Bar
  //  - always: Works as today. No confirmation is required
  "projectManager.confirmSwitchOnActiveWindow": "never",

  // Should filter projects through full path?
  "projectManager.filterOnFullPath": false,

  // List the projects grouped by...(Favorites, VSCode, Git, Mercurial and SVN)
  "projectManager.groupList": false,

  // Should ignore projects found inside other projects?
  "projectManager.ignoreProjectsWithinProjects": false,

  // Indicates if the New Window command open the project in current window, when empty.
  //  - always: Whenever you call the Open in New Window command, it will open in the current window, if empty
  //  - onlyUsingCommandPalette: Only open in the current window if you use the Command Palette
  //  - onlyUsingSideBar: Only open in the current window if you use the Side Bar
  //  - never: Works as today. The Open in New Window command will always open in New Window
  "projectManager.openInCurrentWindowIfEmpty": "always",

  // Use `projectManager.openInCurrentWindowIfEmpty` instead
  // Indicates if the New Window command open the project in current window, when empty.
  //  - always: Whenever you call the Open in New Window command, it will open in the current window, if empty
  //  - onlyUsingCommandPalette: Only open in the current window if you use the Command Palette
  //  - onlyUsingSideBar: Only open in the current window if you use the Side Bar
  //  - never: Works as today. The Open in New Window command will always open in New Window
  "projectManager.openInCurrenWindowIfEmpty": "always",

  // Should the project be opened using a New Window when you click the Status Bar?
  "projectManager.openInNewWindowWhenClickingInStatusBar": false,

  // Indicates an alternative location where the `projects.json` file is stored
  "projectManager.projectsLocation": "",

  // Should the current project be hidden in the list of available projects?
  "projectManager.removeCurrentProjectFromList": true,

  // Should show the parent folder info when projects with same name are detected?
  "projectManager.showParentFolderInfoOnDuplicates": false,

  // Should display the project name in the Status Bar?
  "projectManager.showProjectNameInStatusBar": true,

  // List the projects sorted by...(Saved, Name, Path or Recent)
  "projectManager.sortList": "Name",

  // Should support symlinks on `baseFolders`?
  "projectManager.supportSymlinksOnBaseFolders": false,

  // Indicates the list of tags you can use to organize your projects
  "projectManager.tags": [
    "Personal",
    "Work"
  ]

},
{
  // Indicates the base folders to search for Git projects
  "projectManager.git.baseFolders": [],

  // Indicates folders to be ignored, like "node_modules", "out", "typings", "test"
  "projectManager.git.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test",
    ".haxelib"
  ],

  // Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "projectManager.git.maxDepthRecursion": 4

},
{
  // Indicates the base folders to search for Mercurial projects
  "projectManager.hg.baseFolders": [],

  // Indicates folders to be ignored, like "node_modules", "out", "typings", "test"
  "projectManager.hg.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test",
    ".haxelib"
  ],

  // Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "projectManager.hg.maxDepthRecursion": 4

},
{
  // Indicates the base folders to search for SVN projects
  "projectManager.svn.baseFolders": [],

  // Indicates folders to be ignored, like "node_modules", "out", "typings", "test"
  "projectManager.svn.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test"
  ],

  // Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "projectManager.svn.maxDepthRecursion": 4

},
{
  // Indicates the base folders to search for VSCode projects
  "projectManager.vscode.baseFolders": [],

  // Indicates folders to be ignored, like "node_modules", "out", "typings", "test"
  "projectManager.vscode.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test"
  ],

  // Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "projectManager.vscode.maxDepthRecursion": 4

},
{
  // Indicates the base folders to search for any folder projects
  "projectManager.any.baseFolders": [],

  // Indicates folders to be ignored, like "node_modules", "out", "typings", "test"
  "projectManager.any.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test"
  ],

  // Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "projectManager.any.maxDepthRecursion": 4

},
{
  // Shows or hides the menu item.
  "angular2-files.menu.class": true,

  // Shows or hides the menu item.
  "angular2-files.menu.component": true,

  // Shows or hides the menu item.
  "angular2-files.menu.directive": true,

  // Shows or hides the menu item.
  "angular2-files.menu.enum": true,

  // Shows or hides the menu item.
  "angular2-files.menu.interface": true,

  // Shows or hides the menu item.
  "angular2-files.menu.module": true,

  // Shows or hides the menu item.
  "angular2-files.menu.pipe": true,

  // Shows or hides the menu item.
  "angular2-files.menu.route": true,

  // Shows or hides the menu item.
  "angular2-files.menu.service": true

},
{
  // 
  "auto.languages": {
    "ruby": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "elixir": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "javascript": {
      "symbol": "$",
      "stringWrapper": "`"
    },
    "vue": {
      "symbol": "$",
      "stringWrapper": "`"
    },
    "javascriptreact": {
      "symbol": "$",
      "stringWrapper": "`"
    },
    "typescript": {
      "symbol": "$",
      "stringWrapper": "`"
    },
    "typescriptreact": {
      "symbol": "$",
      "stringWrapper": "`"
    },
    "coffeescript": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "erb": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "haml": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "slim": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "groovy": {
      "symbol": "$",
      "stringWrapper": "\""
    },
    "crystal": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "ecr": {
      "symbol": "#",
      "stringWrapper": "\""
    },
    "dart": {
      "symbol": "$",
      "stringWrapper": "'"
    },
    "kotlin": {
      "symbol": "$",
      "stringWrapper": "\""
    },
    "scala": {
      "symbol": "$",
      "stringWrapper": "\""
    }
  }

},
{
  // Disable the step to automatically run ngcc. [ngcc](https://github.com/angular/angular/blob/main/packages/compiler/design/architecture.md#high-level-proposal) is required to run and gather metadata from libraries not published with Ivy instructions. This can be run outside of VSCode instead (for example, as part of the build/rebuild in the CLI). Note that ngcc needs to run not only at startup, but also whenever the dependencies change. Failing to run ngcc when required can result in incomplete information and spurious errors reported by the language service.
  "angular.disableAutomaticNgcc": false,

  // Prompt to enable the [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) flag in [angularCompilerOptions](https://angular.io/guide/angular-compiler-options). Note that strict mode is only available when using Ivy.
  "angular.enable-strict-mode-prompt": true,

  // Enabling this option will force the language service to use [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) and ignore the user settings in the `tsconfig.json`.
  "angular.forceStrictTemplates": false,

  // Enables logging of the Angular server to a file. This log can be used to diagnose Angular Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.
  "angular.log": "off",

  // Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+, strict null checks to be enabled and the `legacy View Engine` option to be disabled.
  "angular.suggest.includeAutomaticOptionalChainCompletions": true,

  // Enable/disable snippet completions from Angular language server. Requires using TypeScript 4.3+ in the workspace and the `legacy View Engine` option to be disabled.
  "angular.suggest.includeCompletionsWithSnippetText": true,

  // Traces the communication between VS Code and the Angular language server.
  "angular.trace.server": "off",

  // Use legacy View Engine language service. This option is incompatible with projects using Angular v13 and above.
  "angular.view-engine": false

},
{
  // Enables or disables emoji decorators for emoji markup.
  "emojisense.emojiDecoratorsEnabled": true,

  // Controls which languages emojisense is active in. You can also customize emojisense settings per language.
  "emojisense.languages": {
    "markdown": true,
    "plaintext": {
      "markupCompletionsEnabled": false,
      "emojiDecoratorsEnabled": false
    },
    "scminput": true,
    "git-commit": true
  },

  // Enable completions that insert emoji markup, i.e. `::smile_cat` -> `:smile_cat:`
  "emojisense.markupCompletionsEnabled": true,

  // Should emoji completions automatically be shown when you type a colon?
  "emojisense.showOnColon": true,

  // Enable completions that insert emoji as unicode, i.e. `:smile_cat:` -> 😸
  "emojisense.unicodeCompletionsEnabled": true

},
{
  // Resolves `ArrayAccess` and `Traversable` implementations that are unioned with a typed array to generic syntax. eg `ArrayAccessOrTraversable|ElementType[]` => `ArrayAccessOrTraversable<mixed, ElementType>`.
  "intelephense.compatibility.correctForArrayAccessArrayAndTraversableArrayUnionTypes": true,

  // Resolves `BaseClass|static` union types to `static` instead of `BaseClass`.
  "intelephense.compatibility.correctForBaseClassStaticUnionTypes": true,

  // Global namespace constants and functions will be fully qualified (prefixed with a backslash).
  "intelephense.completion.fullyQualifyGlobalConstantsAndFunctions": false,

  // Use declarations will be automatically inserted for namespaced classes, traits, interfaces, functions, and constants.
  "intelephense.completion.insertUseDeclaration": true,

  // The maximum number of completion items returned per request.
  "intelephense.completion.maxItems": 100,

  // Method and function completions will include parentheses and trigger parameter hints.
  "intelephense.completion.triggerParameterHints": true,

  // Enables argument count diagnostics.
  "intelephense.diagnostics.argumentCount": true,

  // Enables deprecated diagnostics.
  "intelephense.diagnostics.deprecated": true,

  // Enables duplicate symbol diagnostics.
  "intelephense.diagnostics.duplicateSymbols": true,

  // Enables diagnostics in embedded languages.
  "intelephense.diagnostics.embeddedLanguages": true,

  // Enables diagnostics.
  "intelephense.diagnostics.enable": true,

  // Enables reporting of problems associated with method and class implementations. For example, unimplemented methods or method signature incompatibilities.
  "intelephense.diagnostics.implementationErrors": true,

  // Enables reporting of various language constraint errors.
  "intelephense.diagnostics.languageConstraints": true,

  // Controls when diagnostics are run.
  //  - onType: Diagnostics will run as changes are made to the document.
  //  - onSave: Diagnostics will run when the document is saved.
  "intelephense.diagnostics.run": "onType",

  // Enables diagnostics on type compatibility of arguments, property assignments, and return statements where types have been declared.
  "intelephense.diagnostics.typeErrors": true,

  // Enables undefined class constant diagnostics.
  "intelephense.diagnostics.undefinedClassConstants": true,

  // Enables undefined constant diagnostics.
  "intelephense.diagnostics.undefinedConstants": true,

  // Enables undefined function diagnostics.
  "intelephense.diagnostics.undefinedFunctions": true,

  // Enables undefined method diagnostics.
  "intelephense.diagnostics.undefinedMethods": true,

  // Enables undefined static property diagnostics.
  "intelephense.diagnostics.undefinedProperties": true,

  // DEPRECATED. Use the setting for each symbol category.
  "intelephense.diagnostics.undefinedSymbols": true,

  // Enables undefined class, interface and trait diagnostics.
  "intelephense.diagnostics.undefinedTypes": true,

  // Enables undefined variable diagnostics.
  "intelephense.diagnostics.undefinedVariables": true,

  // Enables unexpected token diagnostics.
  "intelephense.diagnostics.unexpectedTokens": true,

  // Enables unused variable, private member, and import diagnostics.
  "intelephense.diagnostics.unusedSymbols": true,

  // The directory of the entry point to the application (directory of index.php). Can be absolute or relative to the workspace folder. Used for resolving script inclusion and path suggestions.
  "intelephense.environment.documentRoot": "",

  // The include paths (as individual path items) as defined in the include_path ini setting or paths to external libraries. Can be absolute or relative to the workspace folder. Used for resolving script inclusion and/or adding external symbols to folder.
  "intelephense.environment.includePaths": [],

  // A semver compatible string that represents the target PHP version. Used for providing version appropriate suggestions and diagnostics. PHP 5.3.0 and greater supported.
  "intelephense.environment.phpVersion": "8.2.0",

  // When enabled '<?' will be parsed as a PHP open tag. Defaults to true.
  "intelephense.environment.shortOpenTag": true,

  // Configure glob patterns to make files available for language server features. Inherits from files.associations.
  "intelephense.files.associations": [
    "*.php",
    "*.phtml"
  ],

  // Configure glob patterns to exclude certain files and folders from all language server features. Inherits from files.exclude.
  "intelephense.files.exclude": [
    "**/.git/**",
    "**/.svn/**",
    "**/.hg/**",
    "**/CVS/**",
    "**/.DS_Store/**",
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**/{Tests,tests}/**",
    "**/.history/**",
    "**/vendor/**/vendor/**"
  ],

  // Maximum file size in bytes.
  "intelephense.files.maxSize": 1000000,

  // Controls formatting style of braces
  //  - psr12: PHP-FIG PSR-2 and PSR-12 style. A mix of Allman and K&R
  //  - allman: Allman. Opening brace on the next line.
  //  - k&r: K&R (1TBS). Opening brace on the same line.
  "intelephense.format.braces": "psr12",

  // Enables formatting.
  "intelephense.format.enable": true,

  // DEPRECATED. Don't use this. Go to command palette and search for enter licence key.
  "intelephense.licenceKey": "",

  // Maximum memory (in MB) that the server should use. On some systems this may only have effect when runtime has been set. Minimum 256.
  "intelephense.maxMemory": 0,

  // An object that describes the format of generated class/interface/trait phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
  "intelephense.phpdoc.classTemplate": {
    "summary": "$1",
    "tags": [
      "@package ${1:$SYMBOL_NAMESPACE}"
    ]
  },

  // An object that describes the format of generated function/method phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
  "intelephense.phpdoc.functionTemplate": {
    "summary": "$1",
    "tags": [
      "@param ${1:$SYMBOL_TYPE} $SYMBOL_NAME $2",
      "@return ${1:$SYMBOL_TYPE} $2",
      "@throws ${1:$SYMBOL_TYPE} $2"
    ]
  },

  // An object that describes the format of generated property phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
  "intelephense.phpdoc.propertyTemplate": {
    "summary": "$1",
    "tags": [
      "@var ${1:$SYMBOL_TYPE}"
    ]
  },

  // Adds `@return void` to auto generated phpdoc for definitions that do not return a value.
  "intelephense.phpdoc.returnVoid": true,

  // 
  //  - snippet: Auto generated phpdoc is returned in snippet format. Templates are partially resolved by evaluating phpdoc specific variables only.
  //  - text: Auto generated phpdoc is returned as plain text. Templates are resolved completely by the server.
  "intelephense.phpdoc.textFormat": "snippet",

  // Fully qualified names will be used for types when true. When false short type names will be used and imported where appropriate. Overrides intelephense.completion.insertUseDeclaration.
  "intelephense.phpdoc.useFullyQualifiedNames": false,

  // Glob patterns matching files and folders that should be excluded from references search.
  "intelephense.references.exclude": [
    "**/vendor/**"
  ],

  // Glob patterns matching files and folders that should be excluded when renaming symbols. Rename operation will fail if the symbol definition is found in the excluded files/folders.
  "intelephense.rename.exclude": [
    "**/vendor/**"
  ],

  // Controls the scope of a namespace rename operation.
  //  - single: Only symbols defined in the current file are affected. For example, this makes a rename of a namespace the equivalent of a single move class operation.
  //  - all: All symbols that share this namespace, not necessarily defined in the current file will be affected. For example it would move all classes that share this namespace to the new namespace.
  "intelephense.rename.namespaceMode": "single",

  // Path to a Node.js executable. Use this if you wish to use a different version of Node.js. Defaults to Node.js shipped with VSCode.
  "intelephense.runtime": "",

  // Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.
  "intelephense.stubs": [
    "apache",
    "bcmath",
    "bz2",
    "calendar",
    "com_dotnet",
    "Core",
    "ctype",
    "curl",
    "date",
    "dba",
    "dom",
    "enchant",
    "exif",
    "FFI",
    "fileinfo",
    "filter",
    "fpm",
    "ftp",
    "gd",
    "gettext",
    "gmp",
    "hash",
    "iconv",
    "imap",
    "intl",
    "json",
    "ldap",
    "libxml",
    "mbstring",
    "meta",
    "mysqli",
    "oci8",
    "odbc",
    "openssl",
    "pcntl",
    "pcre",
    "PDO",
    "pdo_ibm",
    "pdo_mysql",
    "pdo_pgsql",
    "pdo_sqlite",
    "pgsql",
    "Phar",
    "posix",
    "pspell",
    "random",
    "readline",
    "Reflection",
    "session",
    "shmop",
    "SimpleXML",
    "snmp",
    "soap",
    "sockets",
    "sodium",
    "SPL",
    "sqlite3",
    "standard",
    "superglobals",
    "sysvmsg",
    "sysvsem",
    "sysvshm",
    "tidy",
    "tokenizer",
    "xml",
    "xmlreader",
    "xmlrpc",
    "xmlwriter",
    "xsl",
    "Zend OPcache",
    "zip",
    "zlib"
  ],

  // Anonymous usage and crash data will be sent to Azure Application Insights. Inherits from telemetry.enableTelemetry.
  "intelephense.telemetry.enabled": null,

  // Traces the communication between VSCode and the intelephense language server.
  "intelephense.trace.server": "off"

},
{
  // Enable/disable automatic opening of server's URL in the browser after server has been reloaded.
  "phpserver.autoOpenOnReload": true,

  // App used to open the server URL. If empty, it will use the default browser. You can put any browser name here as long as it's installed in your machine (e.g. google-chrome, firefox, chromium-browser...)
  "phpserver.browser": null,

  // Server's ip/hostname (e.g. localhost, 0.0.0.0...)
  "phpserver.ip": "localhost",

  // Path to php.ini file. If empty, the extension uses the default path.
  "phpserver.phpConfigPath": null,

  // Path to PHP executable. If empty, the extension will try to get the path from the $PATH environment variable.
  "phpserver.phpPath": null,

  // Server's port number
  "phpserver.port": 3000,

  // Path relative to project. This is useful when you want to serve a different folder than the one from current workspace.
  "phpserver.relativePath": ".",

  // Path to custom router that will be used by PHP server.
  "phpserver.router": null

},
{
  // For import command. The declaration type used for require()
  "npm-intellisense.importDeclarationType": "const",

  // For import command. Use import statements instead of require()
  "npm-intellisense.importES6": true,

  // For import command. The linebreak used after the snippet
  "npm-intellisense.importLinebreak": ";\r\n",

  // For import command. The type of quotes to use in the snippet
  "npm-intellisense.importQuotes": "'",

  // (experimental) Enables path intellisense in subfolders of modules
  "npm-intellisense.packageSubfoldersIntellisense": false,

  // Look for package.json inside nearest directory instead of workspace root
  "npm-intellisense.recursivePackageJsonLookup": true,

  // Scans devDependencies as well
  "npm-intellisense.scanDevDependencies": false,

  // shows build in node modules like 'path' of 'fs'
  "npm-intellisense.showBuildInLibs": false

},
{
  // If defined, unmapped absolute path imports are based on this location.  Takes priority over 'absolutePathToWorkspace' if both are defined
  "path-intellisense.absolutePathTo": "",

  // Sets an absolute path to the current workspace
  "path-intellisense.absolutePathToWorkspace": true,

  // Automatically adds slash after directory
  "path-intellisense.autoSlashAfterDirectory": false,

  // Automatically triggers next suggestion after previous suggestion
  "path-intellisense.autoTriggerNextSuggestion": false,

  // Adds the file extension to a import statements
  "path-intellisense.extensionOnImport": false,

  // Ignores tsconfig file for mappings
  "path-intellisense.ignoreTsConfigBaseUrl": false,

  // Mappings for paths.  The values should be interpreted as absolute paths (and can use '${workspaceFolder}')
  "path-intellisense.mappings": {},

  // Show hidden files
  "path-intellisense.showHiddenFiles": false,

  // Shows suggestions when the import starts with a forward slash ('/')
  "path-intellisense.showOnAbsoluteSlash": true

},
{
  // The path to Chrome to be used rather than searching for the default
  "vscode-devtools-for-chrome.chromePath": null,

  // The hostname on which to search for remote debuggable chrome instances
  "vscode-devtools-for-chrome.hostname": "localhost",

  // The port on which to search for remote debuggable chrome instances
  "vscode-devtools-for-chrome.port": 9222

},
{
  // Number of seconds the list of `.gitignore` files retrieved from github will be cached
  "gitignore.cacheExpirationInterval": 3600

},
{
  // The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.
  // Turns auto fix on save on or off.
  "eslint.autoFixOnSave": false,

  // Show disable lint rule in the quick fix menu.
  "eslint.codeAction.disableRuleComment": {
    "enable": true,
    "location": "separateLine",
    "commentStyle": "line"
  },

  // Show open lint rule documentation web page in the quick fix menu.
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },

  // Specifies the code action mode. Possible values are 'all' and 'problems'.
  //  - all: Fixes all possible problems in the file. This option might take some time.
  //  - problems: Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster.
  "eslint.codeActionsOnSave.mode": "all",

  // The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration
  "eslint.codeActionsOnSave.rules": null,

  // Enables ESLint debug mode (same as `--debug` on the command line)
  "eslint.debug": false,

  // Controls whether eslint is enabled or not.
  "eslint.enable": true,

  // Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size
  "eslint.execArgv": null,

  // Enables support of experimental Flat Config (aka eslint.config.js, supported by ESLint version 8.21 or later).
  "eslint.experimental.useFlatConfig": false,

  // Enables ESLint as a formatter.
  "eslint.format.enable": false,

  // If true, untitled files won't be validated by ESLint.
  "eslint.ignoreUntitled": false,

  // Controls whether a task for linting the whole workspace will be available.
  "eslint.lintTask.enable": false,

  // Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface).
  "eslint.lintTask.options": ".",

  // Whether ESlint should migrate auto fix on save settings.
  "eslint.migration.2_x": "on",

  // The value of `NODE_ENV` to use when running eslint tasks.
  "eslint.nodeEnv": null,

  // A path added to `NODE_PATH` when resolving the eslint module.
  "eslint.nodePath": null,

  // A special rules customization section for text cells in notebook documents.
  "eslint.notebooks.rules.customizations": [],

  // Whether ESLint should issue a warning on ignored files.
  "eslint.onIgnoredFiles": "off",

  // The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class).
  "eslint.options": {},

  // The package manager you use to install node modules.
  "eslint.packageManager": "npm",

  // An array of language ids for which the extension should probe if support is installed.
  "eslint.probe": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "vue",
    "markdown"
  ],

  // Shortens the text spans of underlined problems to their first related line.
  "eslint.problems.shortenToSingleLine": false,

  // This option is deprecated. Use eslint.lintTask.enable instead.
  // Controls whether a task for linting the whole workspace will be available.
  "eslint.provideLintTask": false,

  // Turns on quiet mode, which ignores warnings.
  "eslint.quiet": false,

  // Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.
  "eslint.rules.customizations": [],

  // Run the linter on save (onSave) or on type (onType)
  "eslint.run": "onType",

  // The location of the node binary to run ESLint under.
  "eslint.runtime": null,

  // The time budget in milliseconds to spend on computing fixes before showing a warning or error.
  "eslint.timeBudget.onFixes": {
    "warn": 3000,
    "error": 6000
  },

  // The time budget in milliseconds to spend on validation before showing a warning or error.
  "eslint.timeBudget.onValidation": {
    "warn": 4000,
    "error": 8000
  },

  // Traces the communication between VSCode and the eslint linter service.
  "eslint.trace.server": "off",

  // Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.
  "eslint.useESLintClass": false,

  // An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.
  "eslint.validate": [],

  // Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.
  "eslint.workingDirectories": []

},
{
  // Always prompt with repository picker when running Git History
  "gitHistory.alwaysPromptRepositoryPicker": false,

  // Avatar image cache expiration (0 = cache disabled)
  "gitHistory.avatarCacheExpiration": 60,

  // Prefer to open repository (instead of file) when pressing the editor title button
  "gitHistory.editorTitleButtonOpenRepo": false,

  // Whether to display the commit explorer view
  "gitHistory.hideCommitViewExplorer": false,

  // Include remote branches when opening Git History
  "gitHistory.includeRemoteBranches": false,

  // Output log information
  "gitHistory.logLevel": "Info",

  // Default number of items to be displayed in Git History Viewer
  "gitHistory.pageSize": 100,

  // Whether to display a button in the editor title menu bar
  "gitHistory.showEditorTitleMenuBarIcons": true,

  // Split show file history when file is active.
  "gitHistory.showFileHistorySplit": true,

  // Show commit details in side-by-side view
  "gitHistory.sideBySide": false,

  // Specifies where the 'Git: View History' action appears on the title of SCM Providers.
  //  - Inline: Show the 'Git: View History' action on the title of SCM Providers
  //  - More Actions: Show the 'Git: View History' action in the 'More Actions...' menu on the title of SCM Providers
  "gitHistory.sourceCodeProviderIntegrationLocation": "Inline"

},
{
  // Activates the extension when debugging.
  "BracketHighlighter.activeInDebugMode": true,

  // IDs which this extension will work on. Leaving this blank will enable it globally. Identifiers have to be separated by a comma. E.g. c,cpp,java
  "BracketHighlighter.allowedLanguageIds": "",

  // backgroundColor in CSS style. E.g. 'coral'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.backgroundColor": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: backgroundColor in CSS style. E.g. 'coral'
  "BracketHighlighter.backgroundColorSymbol": "",

  // Sets the opacity value for blurred out text.
  "BracketHighlighter.blurOpacity": "0.5",

  // Blurs text that isn't part of the block.
  "BracketHighlighter.blurOutOfScopeText": false,

  // border in CSS style. E.g. '4px dotted blue'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.border": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: border in CSS style. E.g. '4px dotted blue'
  "BracketHighlighter.borderSymbol": "",

  // 
  "BracketHighlighter.customSymbols": [],

  // If enabled, separate text decorations can be used for symbols and content.
  "BracketHighlighter.differentSymbolHighlightingUsed": false,

  // Enables the extension.
  "BracketHighlighter.enableExtension": true,

  // fontStyle in CSS style. E.g. 'oblique'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.fontStyle": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: fontStyle in CSS style. E.g. 'oblique'
  "BracketHighlighter.fontStyleSymbol": "",

  // fontWeight in CSS style. E.g. 'bold'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.fontWeight": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: fontWeight in CSS style. E.g. 'bold'
  "BracketHighlighter.fontWeightSymbol": "",

  // Allows highlighting when clicking inside of a scope. It will search for the scope of all enabled symbols.
  "BracketHighlighter.highlightScopeFromText": false,

  // Ignores content in the scope and instead only highlights the enclosing symbols.
  "BracketHighlighter.ignoreContent": true,

  // letterSpacing in CSS style. E.g. '1px'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.letterSpacing": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: letterSpacing in CSS style. E.g. '1px'
  "BracketHighlighter.letterSpacingSymbol": "",

  // The maximum amount of lines to search for a matching symbol. If nothing is found by this number, nothing will be highlighted.
  "BracketHighlighter.maxLineSearchCount": 1000,

  // outline in CSS style. E.g. '2px dashed blue'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.outline": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: outline in CSS style. E.g. '2px dashed blue'
  "BracketHighlighter.outlineSymbol": "",

  // If enabled, escaped symbols will be ignored.
  "BracketHighlighter.regexMode": false,

  // Enables a backwards search by selecting a closing symbol.
  "BracketHighlighter.reverseSearchEnabled": true,

  // For a good overview over CSS options for the possibilities look at the following link: https://www.w3schools.com/cssref/ 
  //  For available language IDs please refer to the following link: https: //code.visualstudio.com/docs/languages/identifiers/ 
  //  Note: for *.txt files use plaintext as the language identifier.
  "BracketHighlighter.text": null,

  // The color of the highlighted text.
  "BracketHighlighter.textColor": "#9FFF0F",

  // The color of the highlighted text.
  "BracketHighlighter.textColorSymbol": "#9FFF0F",

  // textDecoration in CSS style. E.g. 'underline'. If separate highlighting for symbols and content is used, this parameter is used for the content.
  "BracketHighlighter.textDecoration": "",

  // Parameter is used for symbols only if separate highlighting for symbols and content is enabled: textDecoration in CSS style. E.g. 'underline'
  "BracketHighlighter.textDecorationSymbol": "",

  // Sets a value in milliseconds how often highlighting can be triggered. A higher value will increase performance when writing, however highlighting may be delayed in some cases. Setting this to 0 will make the extension behave as it did before this option existed.
  "BracketHighlighter.timeOutValue": 600,

  // Use extension for angular brackets. '<>'
  "BracketHighlighter.useAngularBrackets": true,

  // Use extension for braces. '{}'
  "BracketHighlighter.useBraces": true,

  // Use extension for brackets. '[]'
  "BracketHighlighter.useBrackets": true,

  // Use extension for parentheses. '()'
  "BracketHighlighter.useParentheses": true

},
{
  // List of languages which suggestions are desired.
  "css.enabledLanguages": [
    "html"
  ],

  // List of local or remote style sheets for suggestions.
  "css.styleSheets": []

},
{
  // Automatically generates an .editorconfig file according to your current editor settings.
  "editorconfig.generateAuto": true,

  // If generateAuto is false, this template path will be used for each newly-generated .editorconfig file.
  "editorconfig.template": "default"

},
{
  // npm bin name
  "npm.bin": "npm",

  // Enable npm commands in the macOS touchbar.
  "npm.enableTouchbar": false,

  // Look for 'package.json' files in these directories
  "npm.includeDirectories": [],

  // Show a warning that the keybindings have changed.
  "npm.keybindingsChangedWarningShown": false,

  // Enable the old cmd/ctrl R chording key bindings.
  "npm.oldKeybindings.enable": false,

  // Run npm commands in a terminal, otherwise shows the output in the output panel
  "npm.runInTerminal": true,

  // Look for 'package.json' in the root directory of the workspace
  "npm.useRootDirectory": true

},
{
  // Specifies the base folders to search for git repositories
  "gitProjectManager.baseProjectsFolders": [],

  // Indicates if extension will validate and get the remote origin of the git repository
  "gitProjectManager.checkRemoteOrigin": true,

  // Indicates if project path will be displayed in project picker.
  "gitProjectManager.displayProjectPath": false,

  // Specifies folders to be ignored. (node_modules for example), improving search performance
  "gitProjectManager.ignoredFolders": [],

  // Indicate the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit
  "gitProjectManager.maxDepthRecursion": 4,

  // Define the behavior when opening a new project, if true a new VSCode will be opened with the selected project
  "gitProjectManager.openInNewWindow": false,

  // Number of recent projects to be kept to use with GPM - Open Recent
  "gitProjectManager.recentProjectsListSize": 5,

  // Define if extension should look for Git projects inside other Git projects.
  "gitProjectManager.searchInsideProjects": true,

  // Specifies whether saves repository folders' data between sessions
  "gitProjectManager.storeRepositoriesBetweenSessions": false,

  // Define if extension should look for Mercurial projects too.
  "gitProjectManager.supportsMercurial": false,

  // Define if extension should look for for SVN projects too.
  "gitProjectManager.supportsSVN": false,

  // Allows to list projects that are not versioned in "List Repositories" command
  "gitProjectManager.unversionedProjects": [],

  // Define if extension should show a warn if a configured project folder is not found while searching for projects
  "gitProjectManager.warnIfFolderNotFound": false

},
{
  // Additional arguments passed to Firefox
  "firefox.args": [],

  // Absolute path to the Firefox executable
  "firefox.executable": "",

  // Use the specified profile directly instead of a temporary copy
  "firefox.keepProfileChanges": false,

  // The remote debugging port to use
  "firefox.port": 0,

  // The name of the Firefox profile to use
  "firefox.profile": "",

  // The path of the Firefox profile directory to use
  "firefox.profileDir": ""

},
{
  // Set the languages that the extension will be activated.  e.g. ["html","xml","php"]. Use ["*"] to activate for all languages.
  "auto-close-tag.activationOnLanguage": [
    "xml",
    "php",
    "blade",
    "ejs",
    "jinja",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "plaintext",
    "markdown",
    "vue",
    "liquid",
    "erb",
    "lang-cfml",
    "cfml",
    "HTML (EEx)",
    "HTML (Eex)",
    "plist"
  ],

  // Set the languages where the extension will be disabled.  e.g. ["html","xml","php"].
  "auto-close-tag.disableOnLanguage": [],

  // Whether to close self-closing tag automatically
  "auto-close-tag.enableAutoCloseSelfClosingTag": true,

  // Whether to insert close tag automatically
  "auto-close-tag.enableAutoCloseTag": true,

  // Set the tag list that would not be auto closed.
  "auto-close-tag.excludedTags": [
    "area",
    "base",
    "br",
    "col",
    "command",
    "embed",
    "hr",
    "img",
    "input",
    "keygen",
    "link",
    "meta",
    "param",
    "source",
    "track",
    "wbr"
  ],

  // Enable both Visual Studio and Sublime Text mode
  "auto-close-tag.fullMode": false,

  // Insert a space before the forward slash in a self-closing tag.
  "auto-close-tag.insertSpaceBeforeSelfClosingTag": false,

  // Auto close tag when </ is typed, same as Sublime Text 3
  "auto-close-tag.SublimeText3Mode": false

},
{
  // Set the languages that the extension will be activated.  e.g. ["html","xml","php"] By default, it is ["*"] and will be activated for all languages.
  "auto-rename-tag.activationOnLanguage": [
    "*"
  ]

},
{
  // Choose your login type to autofill the provided email/password in the authentication flow. 
  // 
  //  - `OpenAI Authentication` Standard authentication method. Use this if you signed up using your email address instead of Google/Microsoft authentication. 
  // 
  //  - `Google Authentication` Use Google Authentication to login to OpenAI 
  // 
  //  - `Microsoft Authentication` Use Microsoft Authentication to login to OpenAI
  "chatgpt.authenticationType": "OpenAI Authentication",

  // The executable path of your Chromium-based browser. i.e. `Chrome`, `Edge` etc. 
  // 
  //  Unless you override, we use the default paths per Operating System for `Chrome`. 
  // 
  //  **Windows**
  //  C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe 
  // 
  //  **MAC**
  //  /Applications/Google Chrome.app/Contents/MacOS/Google Chrome 
  // 
  //  You can use Chromium based Edge as well. e.g. 
  // 
  //  **Windows Edge**
  //  C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe 
  // 
  //  **You can find the executable path for your preferred browser by going to these URLs: `chrome://version` or `edge://version`**
  "chatgpt.chromiumPath": "",

  // [Optional] Your openai.com login email address. Provide this if you want to auto-fill your email address during autologin. You don't have to provide this if you want to fill it during login.
  "chatgpt.emailAddress": null,

  // Optional override for the OpenAI API base URL. If you customize it, please make sure you have the same format. e.g. starts with `https://` without a trailing slash. The completions endpoint suffix is added internally, e.g. for reference: `${apiBaseUrl}/v1/completions`
  "chatgpt.gpt3.apiBaseUrl": "https://api.openai.com",

  // OpenAI API key. [Get your API Key from OpenAI](https://beta.openai.com/account/api-keys). 
  // 
  // **Please enable OpenAI API Key method to use this setting.**
  "chatgpt.gpt3.apiKey": "",

  // Enable the code generation context menu item for the selected comment/code for Codex. Only available with code-* models
  "chatgpt.gpt3.generateCode-enabled": true,

  // The maximum number of tokens to generate in the completion. 
  // 
  // The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-max_tokens) 
  // 
  // **Please enable OpenAI API Key method to use this setting.**
  "chatgpt.gpt3.maxTokens": 1024,

  // OpenAI models to use for your prompts. [Documentation](https://beta.openai.com/docs/models/models). 
  // 
  // **If you face 400 Bad Request please make sure you are using the right model for your integration method.**
  //  - text-davinci-002-render: Free Tier ChatGPT model that's used in chat.openai.com
  //  - text-davinci-002-render-paid: ChatGPT Plus subscription default model that's used in chat.openai.com. This requires a subscription on OpenAI side, please make sure you are eligible to use this model. 
  // 
  // **Optimized for speed, currently available to Plus users**
  //  - text-davinci-002-render-sha: ChatGPT Plus subscription legacy model that's used in chat.openai.com. This requires a subscription on OpenAI side, please make sure you are eligible to use this model. 
  // 
  // **The previous ChatGPT Plus model**
  //  - gpt-3.5-turbo: Most capable GPT-3.5 model and optimized for chat at 1/10th the cost of `text-davinci-003`. Will be updated with our latest model iteration.
  //  - gpt-3.5-turbo-0301: Snapshot of `gpt-3.5-turbo` from March 1st 2023. Unlike gpt-3.5-turbo, this model will not receive updates, and will only be supported for a three month period ending on June 1st 2023.
  "chatgpt.gpt3.model": "gpt-3.5-turbo",

  // OpenAI Organization ID. [Documentation](https://beta.openai.com/docs/api-reference/requesting-organization). 
  // 
  // **Please enable OpenAI API Key method to use this setting.**
  "chatgpt.gpt3.organization": "",

  // What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
  // 
  // It is recommended altering this or top_p but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-temperature) 
  // 
  // **Please enable OpenAI API Key method to use this setting.**
  "chatgpt.gpt3.temperature": 1,

  // An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. 
  // 
  // It is recommended altering this or temperature but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-top_p) 
  // 
  // **Please enable OpenAI API Key method to use this setting.**
  "chatgpt.gpt3.top_p": 1,

  // Choose your integration preference. 
  // 
  //  - `OpenAI API key integration` Use OpenAI's official APIs. [API Key setup](https://github.com/gencay/vscode-chatgpt#api-key-setup) 
  // 
  //  - `Browser integration` Choose whether you'd like to let the extension automatically log you in using puppeteer: [Browser setup](https://github.com/gencay/vscode-chatgpt#browser-setup)
  //  - Browser Auto-login: Make sure to select the correct model from the settings 
  // 
  // - Browser autologin - default ChatGPT model -> `text-davinci-002-render-sha` 
  // 
  // - Browser autologin - ChatGPT Plus default model -> `text-davinci-002-render-paid` 
  // 
  // - Browser autologin - ChatGPT Plus legacy model -> `text-davinci-002-render-sha`
  //  - GPT3 OpenAI API Key: Various text & code completion models are supported including ChatGPT Turbo models. 
  // 
  // - GPT3.5 -> i.e. `'chatgpt.gpt3.model': 'gpt-3.5-turbo'`
  // 
  // - GPT3 -> i.e. `'chatgpt.gpt3.model': 'text-davinci-003'`
  // 
  // - Codex -> i.e.`'chatgpt.gpt3.model': 'code-davinci-002'`
  "chatgpt.method": "GPT3 OpenAI API Key",

  // [Optional] Your openai.com login password. Provide this if you want to auto-fill your password during autologin. You don't have to provide this if you want to fill it during login.
  "chatgpt.password": null,

  // The prompt prefix used for adding comments for the selected code
  "chatgpt.promptPrefix.addComments": "Add comments for the following code",

  // Enable the prompt prefix used for adding comments for the selected code in the context menu
  "chatgpt.promptPrefix.addComments-enabled": true,

  // The prompt prefix used for adding tests for the selected code
  "chatgpt.promptPrefix.addTests": "Implement tests for the following code",

  // Enable the prompt prefix used for adding tests for the selected code in the context menu
  "chatgpt.promptPrefix.addTests-enabled": true,

  // Enable the prompt prefix used for adhoc command for the selected code in the context menu
  "chatgpt.promptPrefix.adhoc-enabled": true,

  // The prompt prefix used for completing the selected code
  "chatgpt.promptPrefix.completeCode": "Complete the following code",

  // Enable the prompt prefix used for completing the selected code in the context menu
  "chatgpt.promptPrefix.completeCode-enabled": true,

  // Your custom prompt. It's disabled by default, please set to a custom prompt and enable it if you prefer using customized prompt
  "chatgpt.promptPrefix.customPrompt1": "",

  // Enable the prompt prefix used for your custom prompt. The default value is empty, if you enable this item make sure to set this `chatgpt.promptPrefix.customPrompt1`
  "chatgpt.promptPrefix.customPrompt1-enabled": false,

  // Your custom prompt. It's disabled by default, please set to a custom prompt and enable it if you prefer using customized prompt
  "chatgpt.promptPrefix.customPrompt2": "",

  // Enable the prompt prefix used for your custom prompt. The default value is empty, if you enable this item make sure to set this `chatgpt.promptPrefix.customPrompt2`
  "chatgpt.promptPrefix.customPrompt2-enabled": false,

  // The prompt prefix used for explaining the selected code
  "chatgpt.promptPrefix.explain": "Explain the following code",

  // Enable the prompt prefix used for explaining the selected code in the context menu
  "chatgpt.promptPrefix.explain-enabled": true,

  // The prompt prefix used for finding problems for the selected code
  "chatgpt.promptPrefix.findProblems": "Find problems with the following code",

  // Enable the prompt prefix used for finding problems for the selected code in the context menu
  "chatgpt.promptPrefix.findProblems-enabled": true,

  // The prompt prefix used for optimizing the selected code
  "chatgpt.promptPrefix.optimize": "Optimize the following code",

  // Enable the prompt prefix used for optimizing the selected code in the context menu
  "chatgpt.promptPrefix.optimize-enabled": true,

  // [Optional] The proxy server you'd like to use. Supports HTTP proxies only, don't provide the protocol in the setting. Format example: 
  // 
  //  `authenticated`:`myUsername:myPassword@my.proxy.com:3001` 
  // 
  //  `anonymous`: `204.137.172.37:999` 
  // 
  //  **Only available for `Browser Auto-login` method**
  "chatgpt.proxyServer": null,

  // Whenever there is a new question or response added to the conversation window, extension will automatically scroll to the bottom. You can change that behavior by disabling this setting.
  "chatgpt.response.autoScroll": true,

  // Choose whether you'd like to receive a notification when ChatGPT bot responds to your query.
  "chatgpt.response.showNotification": false,

  // Specify if you want to disable the telemetry. This extension also respects your default vs-code telemetry setting `telemetry.telemetryLevel`. We check both settings for telemetry. **Important**: No user data is tracked, we only use telemetry to see what is used, and what isn't. This allows us to make accurate decisions on what to add or enhance to the extension.
  "chatgpt.telemetry.disable": false

},
{
  // Manage extra matched characters color customizations. Set to `false` to turn it off
  "vscode-angular-html.colorCustomizations": false

},
{
  // Matches aria-attributes aria prefix.
  // 
  // * &#60;div `aria-`label="label"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div aria-label="label"></div>
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.ariaAttributePrefix": "",

  // Matches aria-attributes suffix.
  // 
  // * &#60;div aria-`label`="label"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div aria-label="label"></div>
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.ariaAttributeSuffix": "",

  // Matches data-attributes data prefix.
  // 
  // * &#60;div `data-`color="#000000"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div data-color="#000000"></div>
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dataAttributePrefix": "",

  // Matches data-attributes suffix.
  // 
  // * &#60;div data-`color`="#000000"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div data-color="#000000"></div>
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dataAttributeSuffix": "",

  // Matches HTML attribute-value separator (=).
  // This is a global match.
  // 
  // * &#60;div onpointercancel`=`"callback()"&#62;&#60;/div&#62;
  // 
  // * &#60;div class`=`"test"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div onpointercancel="callback()"></div>
  // <div class="test"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlAttributeValueSeparator": "",

  // Matches non-standard HTML elements.
  // 
  // * &#60;`circle`&#62;&#60;/`circle`&#62;
  // 
  // * &#60;`another-custom-element`&#62;&#60;/`another-custom-element`&#62;
  // 
  // ```html
  // 
  // <circle></circle>
  // <another-custom-element></another-custom-element>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlCustomTags": "",

  // Matches the DOCTYPE attributes:
  // 
  // * <&#x21;DOCTYPE `html` `PUBLIC`>
  // 
  // ```html
  // 
  // <!DOCTYPE html PUBLIC>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlDoctypeAttributes": "",

  // Matches the DOCTYPE tag:
  // 
  // * <&#x21;`DOCTYPE` html PUBLIC>
  // 
  // ```html
  // 
  // <!DOCTYPE html PUBLIC>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlDoctypeElement": "",

  // Matches the exclamation point preceding the DOCTYPE tag:
  // 
  // * <`!`DOCTYPE html PUBLIC>
  // 
  // ```html
  // 
  // <!DOCTYPE html PUBLIC>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlDoctypeExclamation": "",

  // Matches the ampersand in HTML entities:
  // 
  // * `&`amp;
  // 
  // * `&`#174;
  // 
  // ```html
  // 
  // &amp;
  // &#174;
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlEntitiesAmpersand": "",

  // Matches the semicolon in HTML entities:
  // 
  // * &amp;amp`;`
  // 
  // * &amp;#174`;`
  // 
  // ```html
  // 
  // &amp;
  // &#174;
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlEntitiesSemicolon": "",

  // Matches HTML event attributes. [See HTML and SVG Events](#ADD-LINK).
  // 
  // * &#60;div `onpointercancel`="callback()"&#62;&#60;/div&#62;
  // 
  // * &#60;div `onclick`="callback('with-parameters', variable)"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div onpointercancel="callback()"></div>
  // <div onclick="callback('with-parameters', variable)"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlEventsAttributes": "",

  // Matches HTML attributes followed by equals and a parameter.
  // It does not matches the HTML and SVG events attributes. [See HTML and SVG Events](#ADD-LINK).
  // 
  // * &#60;div `class`="class"&#62;&#60;/div&#62;
  // 
  // * &#60;div `generic-attribute`="parameter"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div class="class"></div>
  // <div generic-attribute="parameter"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlGenericAttributesFollowedByParameter": "",

  // Matches HTML link tag type attribute icon MIME type.
  // 
  // * &#60;link rel="icon" type="image/`x-icon`" /&#62;
  // 
  // * &#60;link rel="icon" type="image/`svg+xml`" /&#62;
  // 
  // ```html
  // 
  // <link rel="icon" type="image/svg+xml" />
  // <link rel="icon" type="image/x-icon" />
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlLinkAttributesMimeType": "",

  // Matches HTML Script Type Attribute language identifier.
  // 
  // * &#60;script type="text/`javascript`"&#62;&#60;/script&#62;
  // 
  // * &#60;script type="text/`typescript`"&#62;&#60;/script&#62;
  // 
  // * &#60;script type="application/`dart`"&#62;&#60;/script&#62;
  // 
  // ```html
  // 
  // <script type="text/javascript"></script>
  // <script type="text/typescript"></script>
  // <script type="text/coffeescript"></script>
  // <script type="application/dart"></script>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlScriptAttributesLanguageIdentifier": "",

  // Matches HTML Style Type Attribute language identifier.
  // 
  // * &#60;style type="text/`css`"&#62;&#60;/style&#62;
  // 
  // * &#60;style type="text/`scss`"&#62;&#60;/style&#62;
  // 
  // * &#60;style type="text/`sass`"&#62;&#60;/style&#62;
  // 
  // ```html
  // 
  // <style type="text/css"></style>
  // <style type="text/scss"></style>
  // <style type="text/sass"></style>
  // <style type="text/stylus"></style>
  // <style type="text/less"></style>
  // <style type="text/postcss"></style>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlStyleAttributesLanguageIdentifier": "",

  // Matches HTML known elements.
  // 
  // * &#60;`div`&#62;&#60;/`div`&#62;
  // 
  // * &#60;`span`&#62;&#60;/`span`&#62;
  // 
  // ```html
  // 
  // <div></div>
  // <span></span>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.htmlTags": ""

},
{
  // Matches Angular-and-Angular-Material-specific element tags. [See Angular-specific tags](#ADD-LINK)
  // 
  // * &#60;`ng-container`&#62;&#60;/`ng-container`&#62;
  // 
  // * &#60;`mat-action-list`&#62;&#60;/`mat-action-list`&#62;
  // 
  // ```html
  // 
  // <ng-container></ng-container>
  // <mat-action-list></mat-action-list>
  // 
  // 
  // ```
  // Leave it empty to disable for this item onlyLeave it empty to disable for this item only
  "vscode-angular-html.angularAndAngularMaterialElementTags": "",

  // Matches Angular animation trigger attribute prefix.
  // 
  // * &#60;div `@`animationTrigger&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div @animationTrigger></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularAnimationTriggerPrefix": "",

  // Matches Angular animation trigger attribute variable name.
  // 
  // * &#60;div @`animationTrigger`&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div @animationTrigger></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularAnimationTriggerVariableName": "",

  // Matches Angular binding parenthesis and brackets delimiters.
  // This matches all angular bindings delimiters.
  // 
  // * &#60;div `(`click`)`="callback()"&#62;&#60;/div&#62;
  // 
  // * &#60;div `[`input`]`="element"&#62;&#60;/div&#62;
  // 
  // * &#60;div `[(`doubleWay`)]`="binding"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div (click)="callback()"></div>
  // <div [input]="element"></div>
  // <div [(doubleWay)]="binding"></div>
  // <div ([nonStandardDoubleWay])="binding"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularBindingAttributeDelimiter": "",

  // Matches Angular event name.
  // 
  // * &#60;div (`click`)="callback()"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div (click)="callback()"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularEventHandlerName": "",

  // Matches the curly braces preceding and succeeding an angular expression.
  // For both template string interpolation and temlate expressions.
  // 
  // * `{{`condition?.met() ? 'value' : 'otherwise'`}}`
  // 
  // * &#60;div class="class `{{`condition?.met() ? 'value' : 'otherwise'`}}`"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div class="class {{condition?.met() ? 'value' : 'otherwise'}}">
  // 	{{condition?.met() ? 'value' : 'otherwise'}}
  // </div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularExpression": "",

  // Matches Angular expressions' operators and navigators.
  // 
  // * {{ if (key`?.`value `||` condition `&&` condition) {} }}
  // 
  // * {{ if (key`.`value `!==` '') {} }}
  // 
  // * {{ if (key`!.`value `===` '') {} }}
  // 
  // ```html{{
  // 
  // {{
  // 	if (key?.value || condition && condition) {}
  // 	if (key.value !== '') {}
  // 	if (key!.value === '') {}
  // }}
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularExpressionOperatorsAndNavigatorsColor": "",

  // Matches Angular animation trigger decorator inside one-way bindings.
  // 
  // * &#60;div [`@`visibility]="getMenuState()"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div [@visibility]="getMenuState()"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularOneWayBindingAnimationTriggerDecorator": "",

  // Matches Angular fisrt level depth properties in one-way bindings.
  // 
  // * &#60;div [`style`.font-size.px]="10"&#62;&#60;/div&#62;
  // 
  // * &#60;div [`property`]="element"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div [style.font-size.px]="10"></div>
  // <div [property]="element"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularOneWayBindingFirstLevelDepth": "",

  // Matches Angular second level depth properties in one-way bindings.
  // 
  // * &#60;div [style.`font-size`.px]="10"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div [style.font-size.px]="10"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularOneWayBindingSecondLevelDepth": "",

  // Matches Angular third level depth properties in one-way bindings.
  // 
  // * &#60;div [style.font-size.`px`]="10"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div [style.font-size.px]="10"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularOneWayBindingThirdLevelDepth": "",

  // Matches Angular let- prefixed attributes' prefix.
  // 
  // * &#60;div `let-`variable="element"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div let-variable="element"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularPrefixedAttributesLetPrefix": "",

  // Matches Angular ref- prefixed attributes' prefix.
  // 
  // * &#60;div `ref-`variable="element"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div ref-variable="element"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularPrefixedAttributesRefPrefix": "",

  // Matches Angular ref- and let- prefixed attributes' RxJS suffix.
  // 
  // * &#60;div let-variable`$`="element"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div let-variable$="element"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularPrefixedAttributesRxjsSuffix": "",

  // Matches Angular ref- and let- prefixed attributes' variable name.
  // 
  // * &#60;div ref-`variable`="element"&#62;&#60;/div&#62;
  // 
  // * &#60;div let-`variable`="element"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div ref-variable="element"></div>
  // <div let-variable="element"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularPrefixedAttributesVariableName": "",

  // Matches Angular syntax sugar attribute name.
  // 
  // * &#60;div *`ngFor`="let obs of observable | async as test"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div 
  // 	*ngFor="let obs of observable | async as test"
  // 	 *matHeaderCellDef
  // >
  // </div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularSyntaxSugarAttributesName": "",

  // Matches Angular syntax sugar attribute decorator.
  // 
  // * &#60;div `*`ngFor="let obs of observable | async as test"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div 
  // 	*ngFor="let obs of observable | async as test"
  // 	 *matHeaderCellDef
  // >
  // </div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularSyntaxSugarAttributesPrefix": "",

  // Matches Angular template variable name.
  // 
  // * &#60;div #`menu`="parsedMenu"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div #menu="parsedMenu"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularTemplateVariableName": "",

  // Matches Angular template variable decorator.
  // 
  // * &#60;div `#`menu="parsedMenu"&#62;&#60;/div&#62;
  // 
  // ```html
  // 
  // <div #menu="parsedMenu"></div>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.angularTemplateVariablePrefix": ""

},
{
  // Matches PrimeNG-specific element tags.
  // 
  // * &#60;`p-calendar`&#62;&#60;/`p-calendar`&#62;
  // 
  // * &#60;`p-button`&#62;&#60;/`p-button`&#62;
  // 
  // ```html
  // 
  // <p-calendar></p-calendar>
  // <p-button></p-button>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.primeNgElementTags": ""

},
{
  // Matches SVG d attribute path commands.
  // 
  // * &#60;path d="`M`202.35,163.64`l`-4.38-13.1`h`-2.13`v`-3.85`h`9.1`v`3.85`h`-1.82`l`2.05,6.2`l`3.41-10.05" /&#62;
  // 
  // ```html
  // 
  // <svg>
  // 	<path d="M202.35,163.64l-4.38-13.1h-2.13v-3.85h9.1v3.85h-1.82l2.05,6.2l3.41-10.05" />
  // </svg>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.svgDAttributePathCommands": "",

  // Matches known SVG elements.
  // 
  // * &#60;`circle`&#62;&#60;/`circle`&#62;
  // 
  // * &#60;`path`&#62;&#60;/`path`&#62;
  // 
  // ```html
  // 
  // <circle></circle>
  // <svg>
  // 	<circle></circle>
  // 	<path></path>
  // </svg>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.svgTags": ""

},
{
  // Matches XML/HTML attribute namespace colon separator.
  // 
  // * &#60;li:book xmlns`:`li="bookURI"&#62;[...]&#60;/li:book&#62;
  // 
  // ```html
  // 
  // <li:book xmlns:li="bookURI">[...]</li:book>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.xmlAttributeNamespaceDivider": "",

  // Matches XML/HTML attribute namespace suffix.
  // 
  // * &#60;li:book xmlns:`li`="bookURI"&#62;[...]&#60;/li:book&#62;
  // 
  // ```html
  // 
  // <li:book xmlns:li="bookURI">[...]</li:book>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.xmlAttributeNamespaceSuffix": "",

  // Matches xml-stylesheet Type Attribute language identifier.
  // 
  // * <&#63;xml-stylesheet ref="shakespeare.xsl" type="text/`xsl`"?>
  // 
  // * <&#63;xml-stylesheet ref="shakespeare.css" type="text/`css`"?>
  // 
  // * <&#63;xml-stylesheet ref="shakespeare.xml" type="text/`xml`"?>
  // 
  // ```html
  // 
  // <?xml-stylesheet ref="shakespeare.xsl" type="text/xsl"?>
  // <?xml-stylesheet ref="shakespeare.css" type="text/css"?>
  // <?xml-stylesheet ref="shakespeare.xml" type="text/xml"?>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.xmlStylesheetAttributesLanguageIdentifier": "",

  // Matches XML/HTML element namespace colon separator.
  // 
  // * &#60;li`:`title&#62;Book Title&#60;/li`:`title&#62;
  // 
  // ```html
  // 
  // <li:title>Book Title</li:title>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.xmlTagNamespaceDivider": "",

  // Matches XML/HTML element namespace suffix.
  // 
  // * &#60;li:`title`&#62;Book Title&#60;/li:`title`&#62;
  // 
  // ```html
  // 
  // <li:title>Book Title</li:title>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.xmlTagNamespaceSuffix": ""

},
{
  // Matches the DTD element tags:
  // 
  // * <&#x21;`ELEMENT` `BANNER` (#PCDATA)>
  // 
  // * <&#x21;`ATTLIST` TVSCHEDULE NAME CDATA #REQUIRED>
  // 
  // ```html
  // 
  // <?xml version="1.0" encoding="UTF-8"?>
  // <!DOCTYPE TVSCHEDULE [
  // 	<!ELEMENT BANNER (#PCDATA)>
  // 	<!ELEMENT DAY (DATE,(HOLIDAY|PROGRAMSLOT+)+)>
  // 	<!ATTLIST TVSCHEDULE NAME CDATA #REQUIRED>
  // ]>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dtdDoctypeElement": "",

  // Matches the exclamation point preceding DTD element tags:
  // 
  // * <`!`ELEMENT BANNER (#PCDATA)>
  // 
  // * <`!`ATTLIST TVSCHEDULE NAME CDATA #REQUIRED>
  // 
  // ```html
  // 
  // <?xml version="1.0" encoding="UTF-8"?>
  // <!DOCTYPE TVSCHEDULE [
  // 	<!ELEMENT BANNER (#PCDATA)>
  // 	<!ELEMENT DAY (DATE,(HOLIDAY|PROGRAMSLOT+)+)>
  // 	<!ATTLIST TVSCHEDULE NAME CDATA #REQUIRED>
  // ]>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dtdDoctypeExclamation": "",

  // Matches the DTD qualifiers:
  // 
  // * <&#x21;ELEMENT DAY (`DATE`,(`HOLIDAY`|`PROGRAMSLOT`+)+)>
  // 
  // ```html
  // 
  // <?xml version="1.0" encoding="UTF-8"?>
  // <!DOCTYPE TVSCHEDULE [
  // 	<!ELEMENT BANNER (#PCDATA)>
  // 	<!ELEMENT DAY (DATE,(HOLIDAY|PROGRAMSLOT+)+)>
  // 	<!ATTLIST TVSCHEDULE NAME CDATA #REQUIRED>
  // ]>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dtdDoctypeQualifier": "",

  // Matches the DTD quantifiers:
  // 
  // * <&#x21;ELEMENT DAY (DATE,(HOLIDAY`|`PROGRAMSLOT`+`)`*`)>
  // 
  // * <&#x21;ELEMENT PROGRAMSLOT (TIME,TITLE,DESCRIPTION`?`)>
  // 
  // ```html
  // 
  // <?xml version="1.0" encoding="UTF-8"?>
  // <!DOCTYPE TVSCHEDULE [
  // 	<!ELEMENT BANNER (#PCDATA)>
  // 	<!ELEMENT DAY (DATE,(HOLIDAY|PROGRAMSLOT+)*)>
  // 	<!ELEMENT PROGRAMSLOT (TIME,TITLE,DESCRIPTION?)>
  // ]>
  // 
  // 
  // ```
  // Leave it empty to disable for this item only
  "vscode-angular-html.dtdDoctypeQuantifier": ""

},
{
  // Connection type
  //  - main thread: Connection is created on the main thread.
  //  - separate thread: Connection is created on a spearate thread.
  //  - any: Either main or separate thread connection, whichever succeeds first.
  "github.codespaces.connectionType": "main thread",

  // When a codespace is created or connected, open it in a new window.
  "github.codespaces.createCodespaceInNewWindow": false,

  // Default extensions to install in GitHub Codespaces
  "github.codespaces.defaultExtensions": [
    "GitHub.codespaces",
    "GitHub.vscode-pull-request-github"
  ],

  // Select which type of notification to show when devcontainer content changes
  //  - none: No notification when devcontainer changes
  //  - notification: Standard toast notification when devcontainer changes
  //  - modal: Modal dialog notification when devcontainer changes
  "github.codespaces.devcontainerChangedNotificationStyle": "notification",

  // Display the Codespace Performance window in the Remote Explorer.
  "github.codespaces.showPerformanceExplorer": false,

  // When enabled, HTTPS services will be forwarded through our port forwarding service instead of local TCP server.
  "github.codespaces.usePortForwardingServiceForHTTPS": true

},
{
  // Le asigna el problema en el que está trabajando. Solo se aplica cuando el problema en el que está trabajando está en un repositorio que tiene abierto actualmente.
  "githubIssues.assignWhenWorking": true,

  // Controla si se inserta un número de problema (por ejemplo, #1234) o una dirección URL completa (por ejemplo, https://github.com/owner/name/issues/1234) cuando se ejecuta la acción de código Crear problema.
  "githubIssues.createInsertFormat": "number",

  // Cadenas que harán que se muestre la acción de código "Crear problema a partir del comentario".
  "githubIssues.createIssueTriggers": [
    "TODO",
    "todo",
    "BUG",
    "FIXME",
    "ISSUE",
    "HACK"
  ],

  // Idiomas en que el carácter '#' no debe usarse para desencadenar sugerencias de finalización de problemas.
  "githubIssues.ignoreCompletionTrigger": [
    "coffeescript",
    "diff",
    "dockerfile",
    "dockercompose",
    "ignore",
    "ini",
    "julia",
    "makefile",
    "perl",
    "powershell",
    "python",
    "r",
    "ruby",
    "shellscript",
    "yaml"
  ],

  // Una matriz de títulos de hitos de los que nunca se muestran problemas.
  "githubIssues.ignoreMilestones": [],

  // Idiomas en que el carácter '@' no debe usarse para desencadenar sugerencias de finalización del usuario.
  "githubIssues.ignoreUserCompletionTrigger": [
    "python"
  ],

  // Configuración avanzada para el nombre de la rama que se crea al empezar a trabajar en un problema. 
  // - "${user}" se reemplazará por el nombre de usuario 
  // - "${issueNumber}" se reemplazará por el número de problema actual 
  // - "${sanitizedIssueTitle}" se reemplazará por el título del problema, con todos los espacios y caracteres no admitidos (https://git-scm.com/docs/git-check-ref-format) quitados
  "githubIssues.issueBranchTitle": "${user}/issue${issueNumber}",

  // Establece el formato de finalizaciones de problemas en el cuadro de entrada de SCM. 
  // - "${user}" se reemplazará por el nombre de usuario 
  // - "${issueNumber}" se reemplazará por el número de problema actual 
  // - "${issueNumberLabel}" se reemplazará por una etiqueta con formato #number o owner/repository#number, en función de si el problema está en el repositorio actual
  "githubIssues.issueCompletionFormatScm": "${issueTitle} ${issueNumberLabel}",

  // Controla si se muestran sugerencias de finalización para problemas.
  "githubIssues.issueCompletions.enabled": true,

  // Especifica qué consultas se deben usar en el árbol de problemas de GitHub mediante [sintaxis de búsqueda de GitHub](https://help.github.com/en/articles/understanding-the-search-syntax) con variables. La primera consulta enumerada se expandirá en la vista Problemas. La consulta de "valor predeterminado" incluye problemas que le asigna Milestone. Si quiere conservarlos, asegúrese de que siguen en la matriz al modificar la configuración.
  "githubIssues.queries": [
    {
      "label": "Mis incidencias",
      "query": "default"
    },
    {
      "label": "Problemas creados",
      "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
    },
    {
      "label": "Problemas recientes",
      "query": "state:open repo:${owner}/${repository} sort:updated-desc"
    }
  ],

  // Determina si se debe extraer del repositorio una rama al trabajar en un problema. Para configurar el nombre de la rama, establezca `githubIssues.issueBranchTitle`.
  //  - on: Siempre se extraerá del repositorio una rama cuando empiece a trabajar en un problema. Si la rama no existe, se creará.
  //  - off: No se creará una rama cuando empiece a trabajar en un problema. Si ha trabajado en un problema antes y se ha creado una rama para él, se restaurará esa misma rama.
  //  - prompt: Se mostrará un mensaje para establecer el nombre de la rama que se creará y extraerá del repositorio.
  "githubIssues.useBranchForIssues": "on",

  // Controla si se muestran sugerencias de finalización para usuarios.
  "githubIssues.userCompletions.enabled": true,

  // Establece el formato del mensaje de confirmación que se establece en el cuadro de entrada SCM al **Empezar a trabajar en un problema**. El valor predeterminado es "${issueTitle} 
  // Corrige #${issueNumber}"
  "githubIssues.workingIssueFormatScm": "${issueTitle} \nFixes ${issueNumberLabel}",

  // Todas las solicitudes de incorporación de cambios creadas con esta extensión se asignarán a este usuario. Para asignarse a sí mismo, use la variable "${user}".
  "githubPullRequests.assignCreated": "",

  // Controla si los comentarios se expanden cuando se abre un documento con comentarios.
  //  - expandUnresolved: Se expandirán todos los comentarios sin resolver.
  //  - collapseAll: Todos los comentarios se contraerán
  "githubPullRequests.commentExpandState": "expandUnresolved",

  // Indica si la casilla "Borrador" se marcará de forma predeterminada al crear una solicitud de incorporación de cambios.
  "githubPullRequests.createDraft": false,

  // Crear una solicitud de incorporación de cambios cuando se publique una rama.
  //  - never: Nunca crear una solicitud de incorporación de cambios cuando se publique una rama.
  //  - ask: Preguntar si quiere crear una solicitud de incorporación de cambios cuando se publique una rama.
  "githubPullRequests.createOnPublishBranch": "ask",

  // El tipo de comentario predeterminado que se usará cuando se envíe un comentario y no haya ninguna revisión activa.
  //  - single: Enviar el comentario como un único comentario que será inmediatamente visible para otros usuarios.
  //  - review: Enviar el comentario como un comentario de revisión que será visible para otros usuarios una vez enviada la revisión.
  "githubPullRequests.defaultCommentType": "single",

  // Si es true, la opción para eliminar la rama local se seleccionará de forma predeterminada al eliminar una rama de una solicitud de incorporación de cambios.
  "githubPullRequests.defaultDeletionMethod.selectLocalBranch": true,

  // Si es true, la opción para eliminar el repositorio remoto se seleccionará de forma predeterminada al eliminar una rama de una solicitud de incorporación de cambios.
  "githubPullRequests.defaultDeletionMethod.selectRemote": true,

  // Método que se va a usar al combinar solicitudes de incorporación de cambios.
  "githubPullRequests.defaultMergeMethod": "merge",

  // Diseño que se va a usar al mostrar la lista de archivos modificados.
  "githubPullRequests.fileListLayout": "tree",

  // Diseño que se va a usar cuando se modifique una solicitud de incorporación de cambios. Establézcalo en falso para evitar cambios de diseño.
  "githubPullRequests.focusedMode": "firstDiff",

  // Impide que las ramas asociadas a una solicitud de incorporación de cambios se detecten automáticamente. Esto impedirá que se especifique el modo de revisión en estas ramas.
  "githubPullRequests.ignoredPullRequestBranches": [],

  // The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.
  // By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'.
  "githubPullRequests.includeRemotes": "default",

  // El nivel de registro ahora está controlado por [Desarrollador: Establecer nivel de registro...](command:workbench.action.setLogLevel). Puede establecer el nivel de registro para la sesión actual y también el nivel de registro predeterminado desde allí.
  // Registro de la extensión de solicitud de incorporación de cambios de GitHub. El registro se emite en el canal de salida denominado Solicitud de incorporación de cambios de GitHub.
  "githubPullRequests.logLevel": "info",

  // Si las notificaciones de GitHub deben mostrarse al usuario.
  "githubPullRequests.notifications": "off",

  // La rama predeterminada de un repositorio se establece en github.com. Con esta configuración, puede invalidar ese valor predeterminado con otra rama.
  "githubPullRequests.overrideDefaultBranch": "",

  // Acción que se realizará después de crear una solicitud de incorporación de cambios.
  //  - none: Ninguna acción
  //  - openOverview: Abrir la página de información general de la solicitud de incorporación de cambios
  //  - checkoutDefaultBranch: Restauración de la rama predeterminada del repositorio
  "githubPullRequests.postCreate": "openOverview",

  // Extraer cambios del repositorio remoto cuando una rama de PR se modifica localmente. Los cambios se detectan cuando la PR se actualiza manualmente y durante las actualizaciones periódicas en segundo plano.
  //  - prompt: Solicitar extraer una rama de PR cuando se detecten cambios en la PR.
  //  - never: No extraer nunca una rama de PR cuando se detecten cambios en la PR.
  //  - always: Extraer siempre una rama de PR cuando se detecten cambios en la PR. Cuando `"git.autoStash": true`, se usará "prompt" para evitar cambios de archivo inesperados.
  "githubPullRequests.pullBranch": "prompt",

  // Descripción que se usa al crear solicitudes de incorporación de cambios.
  //  - template: Usar una plantilla de solicitud de incorporación de cambios y una descripción de confirmación, o simplemente usar la descripción de confirmación si no se encontraron plantillas.
  //  - commit: Usar solo el mensaje de confirmación más reciente
  "githubPullRequests.pullRequestDescription": "template",

  // The pull request title now uses the same defaults as GitHub, and can be edited before create.
  // The title used when creating pull requests.
  //  - commit: Use the latest commit message
  //  - branch: Use the branch name
  //  - custom: Specify a custom title
  //  - ask: Ask which of the above methods to use
  "githubPullRequests.pullRequestTitle": "ask",

  // Insertar la rama "desde" cuando se crea una PR y la rama "desde" no está disponible en el repositorio remoto.
  //  - prompt: Solicitar insertar la rama cuando se crea una PR y la rama "desde" no está disponible en el repositorio remoto.
  //  - always: Insertar siempre la rama cuando crea una PR y la rama "desde" no está disponible en el repositorio remoto.
  "githubPullRequests.pushBranch": "prompt",

  // Especifica qué consultas se deben usar en el árbol de solicitudes de incorporación de cambios de GitHub. Todas las consultas se realizan en **los repositorios abiertos actualmente**. Cada objeto de consulta tiene una "etiqueta" que se mostrará en el árbol y una "consulta" de búsqueda mediante [sintaxis de búsqueda de GitHub](https://help.github.com/en/articles/understanding-the-search-syntax). La variable '${user}' se puede usar para especificar el usuario que ha iniciado sesión en una búsqueda. De forma predeterminada, estas consultas definen las categorías " Esperando mi revisión", " Asignado a mí" y " Creado por mí". Si quiere conservarlos, asegúrese de que siguen en la matriz al modificar la configuración.
  "githubPullRequests.queries": [
    {
      "label": "Esperando por mi revisión",
      "query": "is:open review-requested:${user}"
    },
    {
      "label": "Asignado a mí",
      "query": "is:open assignee:${user}"
    },
    {
      "label": "Creado por mí",
      "query": "is:open author:${user}"
    }
  ],

  // Enables quick diff in the editor gutter for checked-out pull requests. Requires a reload to take effect
  "githubPullRequests.quickDiff": false,

  // Lista de repositorios remotos, por nombre, de los que se van a capturar las solicitudes de incorporación de cambios.
  "githubPullRequests.remotes": [
    "origin",
    "upstream"
  ],

  // This setting is deprecated. Views can now be dragged to any location.
  // When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them.
  "githubPullRequests.showInSCM": false,

  // Controlador predeterminado para los vínculos de terminal.
  //  - github: Crear la solicitud de incorporación de cambios en GitHub
  //  - vscode: Crear la solicitud de incorporación de cambios en VS Code
  //  - ask: Preguntar qué método usar
  "githubPullRequests.terminalLinksHandler": "ask",

  // Elija qué estados de solicitud de incorporación de cambios usarán el modo de revisión. Las solicitudes de incorporación de cambios "abiertas" siempre usarán el modo de revisión.
  "githubPullRequests.useReviewMode": {
    "merged": true,
    "closed": false
  }

},
{
  // Whether to typecheck the entire project on load. It could drive to bad performance in large projects.
  "haskell.checkProject": true,

  // The formatter to use when formatting a document or range. Ensure the plugin is enabled.
  "haskell.formattingProvider": "ormolu",

  // Manually set a ghcup executable path.
  "haskell.ghcupExecutablePath": "",

  // If set, redirects the logs to a file.
  "haskell.logFile": "",

  // How to manage/find HLS installations.
  //  - GHCup: Will use ghcup and manage Haskell toolchain in the default location (usually '~/.ghcup')
  //  - PATH: Discovers HLS and other executables in system PATH
  "haskell.manageHLS": "PATH",

  // Maximum number of completions sent to the editor.
  "haskell.maxCompletions": 40,

  // An optional URL to override where ghcup checks for tool download info (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml)
  "haskell.metadataURL": "",

  // When opening 'Documentation' for external libraries, open in hackage by default. Set to false to instead open in vscode.
  "haskell.openDocumentationInHackage": true,

  // When opening 'Source' for external libraries, open in hackage by default. Set to false to instead open in vscode.
  "haskell.openSourceInHackage": true,

  // Enables alternateNumberFormat plugin
  "haskell.plugin.alternateNumberFormat.globalOn": true,

  // Enables callHierarchy plugin
  "haskell.plugin.callHierarchy.globalOn": true,

  // Enables changeTypeSignature plugin
  "haskell.plugin.changeTypeSignature.globalOn": true,

  // Enables class code actions
  "haskell.plugin.class.codeActionsOn": true,

  // Enables class code lenses
  "haskell.plugin.class.codeLensOn": true,

  // Enable the diff output (WAS/NOW) of eval lenses
  "haskell.plugin.eval.config.diff": true,

  // Enable marking exceptions with `*** Exception:` similarly to doctest and GHCi.
  "haskell.plugin.eval.config.exception": false,

  // Enables eval plugin
  "haskell.plugin.eval.globalOn": true,

  // Enables explicitFixity plugin
  "haskell.plugin.explicitFixity.globalOn": true,

  // Call out to an external "fourmolu" executable, rather than using the bundled library
  "haskell.plugin.fourmolu.config.external": false,

  // Enables gadt plugin
  "haskell.plugin.gadt.globalOn": true,

  // Enables ghcide-code-actions-bindings plugin
  "haskell.plugin.ghcide-code-actions-bindings.globalOn": true,

  // Enables ghcide-code-actions-fill-holes plugin
  "haskell.plugin.ghcide-code-actions-fill-holes.globalOn": true,

  // Enables ghcide-code-actions-imports-exports plugin
  "haskell.plugin.ghcide-code-actions-imports-exports.globalOn": true,

  // Enables ghcide-code-actions-type-signatures plugin
  "haskell.plugin.ghcide-code-actions-type-signatures.globalOn": true,

  // Extends the import list automatically when completing a out-of-scope identifier
  "haskell.plugin.ghcide-completions.config.autoExtendOn": true,

  // Inserts snippets when using code completions
  "haskell.plugin.ghcide-completions.config.snippetsOn": true,

  // Enables ghcide-completions plugin
  "haskell.plugin.ghcide-completions.globalOn": true,

  // Enables ghcide-hover-and-symbols hover
  "haskell.plugin.ghcide-hover-and-symbols.hoverOn": true,

  // Enables ghcide-hover-and-symbols symbols
  "haskell.plugin.ghcide-hover-and-symbols.symbolsOn": true,

  // Control how type lenses are shown
  //  - always: Always displays type lenses of global bindings
  //  - exported: Only display type lenses of exported global bindings
  //  - diagnostics: Follows error messages produced by GHC about missing signatures
  "haskell.plugin.ghcide-type-lenses.config.mode": "always",

  // Enables ghcide-type-lenses plugin
  "haskell.plugin.ghcide-type-lenses.globalOn": true,

  // Enables haddockComments plugin
  "haskell.plugin.haddockComments.globalOn": true,

  // Enables hlint code actions
  "haskell.plugin.hlint.codeActionsOn": true,

  // Flags used by hlint
  "haskell.plugin.hlint.config.flags": [],

  // Enables hlint diagnostics
  "haskell.plugin.hlint.diagnosticsOn": true,

  // Enables importLens code actions
  "haskell.plugin.importLens.codeActionsOn": true,

  // Enables importLens code lenses
  "haskell.plugin.importLens.codeLensOn": true,

  // Enables moduleName plugin
  "haskell.plugin.moduleName.globalOn": true,

  // Enables pragmas code actions
  "haskell.plugin.pragmas.codeActionsOn": true,

  // Enables pragmas completions
  "haskell.plugin.pragmas.completionOn": true,

  // Enables qualifyImportedNames plugin
  "haskell.plugin.qualifyImportedNames.globalOn": true,

  // Enables refineImports code actions
  "haskell.plugin.refineImports.codeActionsOn": true,

  // Enables refineImports code lenses
  "haskell.plugin.refineImports.codeLensOn": true,

  // Enable experimental cross-module renaming
  "haskell.plugin.rename.config.crossModule": false,

  // Enables rename plugin
  "haskell.plugin.rename.globalOn": true,

  // Enables retrie plugin
  "haskell.plugin.retrie.globalOn": true,

  // Enables splice plugin
  "haskell.plugin.splice.globalOn": true,

  // Enables tactics code actions
  "haskell.plugin.tactics.codeActionsOn": true,

  // Enables tactics code lenses
  "haskell.plugin.tactics.codeLensOn": true,

  // The depth of the search tree when performing "Attempt to fill hole". Bigger values will be able to derive more solutions, but will take exponentially more time.
  "haskell.plugin.tactics.config.auto_gas": 4,

  // The severity to use when showing hole diagnostics. These are noisy, but some editors don't allow jumping to all severities.
  //  - 1: error
  //  - 2: warning
  //  - 3: info
  //  - 4: hint
  //  - null: none
  "haskell.plugin.tactics.config.hole_severity": null,

  // Maximum number of `Use constructor <x>` code actions that can appear
  "haskell.plugin.tactics.config.max_use_ctor_actions": 5,

  // Should Wingman emit styling markup when showing metaprogram proof states?
  "haskell.plugin.tactics.config.proofstate_styling": true,

  // The timeout for Wingman actions, in seconds
  "haskell.plugin.tactics.config.timeout_duration": 2,

  // Enables tactics hover
  "haskell.plugin.tactics.hoverOn": true,

  // Prompt before performing any downloads.
  "haskell.promptBeforeDownloads": "true",

  // An optional path where downloaded metadata will be stored. Check the default value [here](https://github.com/haskell/vscode-haskell#downloaded-binaries)
  "haskell.releasesDownloadStoragePath": "",

  // An optional URL to override where ghcup checks for HLS-GHC compatibility list (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/hls-metadata-0.0.1.json)
  "haskell.releasesURL": "",

  // Define environment variables for the language server.
  "haskell.serverEnvironment": {},

  // Manually set a language server executable. Can be something on the $PATH or the full path to the executable itself. Works with `~,` `${HOME}` and `${workspaceFolder}`.
  "haskell.serverExecutablePath": "",

  // Pass additional arguments to the language server.
  "haskell.serverExtraArgs": "",

  // When manageHLS is set to GHCup, this can overwrite the automatic toolchain configuration with a more specific one. When a tool is omitted, the extension will manage the version (for 'ghc' we try to figure out the version the project requires). The format is '{"tool": "version", ...}'. 'version' accepts all identifiers that 'ghcup' accepts.
  "haskell.toolchain": {},

  // Sets the log level in the client side.
  "haskell.trace.client": "info",

  // Traces the communication between VS Code and the language server.
  "haskell.trace.server": "off",

  // Whether to upgrade GHCup automatically when 'manageHLS' is set to 'GHCup'.
  "haskell.upgradeGHCup": true

},
{
  // Open files side by side.
  "angular2-switcher.openSideBySide": false,

  // Reuse opened view
  "reuseView": false

},
{
  // The order of angular2-switcher find corresponding style file.
  "angular2-switcher.styleFormats": [
    ".scss",
    ".sass",
    ".less",
    ".css"
  ]

},
{
  // The order of angular2-switcher find corresponding template file.
  "angular2-switcher.templateFormats": [
    ".html"
  ]

},
{
  // The order of angular2-switcher find corresponding spec file.
  "angular2-switcher.specFormats": [
    ".spec.ts",
    ".stories.ts"
  ]

},
{
  // Find unused exports: consider all exports from the file used in the main field of package.json as used
  "findUnusedExports.considerMainExportsUsed": false,

  // Find unused exports: log all actions in an output window
  "findUnusedExports.debug": false,

  // Find unused exports: show all found results initially expanded (otherwise collapsed)
  "findUnusedExports.defaultResultExpanded": false,

  // Find unused exports: detect circular imports
  "findUnusedExports.detectCircularImports": false,

  // Find unused exports: log also in a file (.vscode/find-unused-exports.log)
  "findUnusedExports.logInFile": false,

  // Find unused exports: log in the file only the last run
  "findUnusedExports.logOnlyLastRun": true,

  // Find unused exports: show all unused exports, even if they are marked as ignored
  "findUnusedExports.showIgnoredExports": false

},
{
  // Default style for all customized keywords
  "todohighlight.defaultStyle": {},

  // Glob pattern that defines files and folders to exclude while listing annotations.
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/dist/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.vscode-test/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map",
    "**/.next/**"
  ],

  // Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both performance and to avoid binary files.
  "todohighlight.include": [
    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.css",
    "**/*.scss",
    "**/*.php",
    "**/*.rb",
    "**/*.txt",
    "**/*.mdown",
    "**/*.md"
  ],

  // Specify whether the keywords are case sensitive or not
  "todohighlight.isCaseSensitive": true,

  // Enable or disable the highlighting
  "todohighlight.isEnable": true,

  // An array of keywords, and their CSS to customise how they look. Any CSS color identifier is valid, plus a few others ...
  "todohighlight.keywords": [],

  // Specify keywords via RegExp instead of `todohighlight.keywords` one by one. NOTE that if this present, `todohighlight.keywords` will be ignored. REMEMBER to escapse the backslash if there's any in your regexp (using \\ instead of single backslash).
  "todohighlight.keywordsPattern": "",

  // Max files for searching
  "todohighlight.maxFilesForSearch": 5120,

  // If the file path within the output channel not clickable, set this to true to toggle the path patten between `<path>#<line>` and `<path>:<line>:<column>`
  "todohighlight.toggleURI": false

},
{
  // Open files side by side to Angular Component Typescript file.
  "angular-file-changer.openSideBySide": false

},
{
  // Specifies whether Peacock should affect the activity bar.
  "peacock.affectActivityBar": true,

  // Specifies whether Peacock should affect the status bar while debugging.
  "peacock.affectDebuggingStatusBar": false,

  // Specifies whether Peacock should affect the editorGroup border.
  "peacock.affectEditorGroupBorder": false,

  // Specifies whether Peacock should affect the panel border.
  "peacock.affectPanelBorder": false,

  // Specifies whether Peacock should affect the sash border.
  "peacock.affectSashHover": true,

  // Specifies whether Peacock should affect the sideBar border.
  "peacock.affectSideBarBorder": false,

  // Specifies whether Peacock should affect the status or title borders.
  "peacock.affectStatusAndTitleBorders": false,

  // Specifies whether Peacock should affect the status bar.
  "peacock.affectStatusBar": true,

  // Specifies whether Peacock should affect the active tab's border.
  "peacock.affectTabActiveBorder": false,

  // Specifies whether Peacock should affect the title bar.
  "peacock.affectTitleBar": true,

  // The Peacock color that will be applied to workspaces. This should only be set at the workspace level.
  "peacock.color": "",

  // Specifies the amount to darken or lighten the color, in percentage
  "peacock.darkenLightenPercentage": 5,

  // Specifies the override value for the dark foreground color
  "peacock.darkForegroundColor": "#15202b",

  // Adjusts the colorization of affected elements to provide visual contrast
  "peacock.elementAdjustments": {
    "activityBar": "lighten",
    "statusBar": "none",
    "titleBar": "none"
  },

  // Your favorite colors
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#dd0531"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#61dafb"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Svelte Orange",
      "value": "#ff3d00"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],

  // Recommended to remain false. However, when set to true Peacock will not colorize badges in any of the affected elements in response to background alterations
  "peacock.keepBadgeColor": false,

  // Recommended to remain false. However, when set to true Peacock will not colorize the foreground of any of the affected elements and will only alter the background
  "peacock.keepForegroundColor": false,

  // Specifies the override value for the light foreground color
  "peacock.lightForegroundColor": "#e7e7e7",

  // The Peacock color that will be applied to remote workspaces.
  "peacock.remoteColor": "",

  // Show the Peacock color in the status bar
  "peacock.showColorInStatusBar": true,

  // Easter egg! Specifies whether Peacock should hide all red error, warning and info underlines from the editor by making their color the same as the background.
  "peacock.squigglyBeGone": false,

  // Specifies whether Peacock should choose a random color from the favorites list or a purely random color.
  "peacock.surpriseMeFromFavoritesOnly": false,

  // Specifies that Peacock should surprise you at the start of every editing session, only when a color isn't already set. 
  "peacock.surpriseMeOnStartup": false,

  // Peacock color for Live Share Color when acting as a Guest 
  "peacock.vslsJoinColor": "",

  // Peacock color for Live Share Color when acting as a Host 
  "peacock.vslsShareColor": ""

},
{
  // Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc.
  "haskell.indentationRules.enabled": true

},
{
  // When creating a hanging indent, do not put the closing bracket on its own line.
  "pythonIndent.keepHangingBracketOnLine": false,

  // Trims lines that contain only whitespace after pressing Enter on them.
  "pythonIndent.trimLinesWithOnlyWhitespace": false,

  // After creating a hanging indent, press tab to leave the indented section and go to the ending bracket.
  "pythonIndent.useTabOnHangingIndent": false

},
{
  // The default color to be used in svg previews
  "gutterpreview.currentColorForSVG": "white",

  // A flag which indicates whether resources should be resolved from references
  "gutterpreview.enableReferenceLookup": false,

  // The maximum height of the image preview
  "gutterpreview.imagePreviewMaxHeight": "100",

  // The maximum width of the image preview, if configured to > 0, it is used instead of the max height setting
  "gutterpreview.imagePreviewMaxWidth": "-1",

  // Specify path mapping to be computed relative to project root.
  "gutterpreview.paths": {},

  // A flag which indicates whether the image preview should be shown on the gutter
  "gutterpreview.showImagePreviewOnGutter": true,

  // A flag which indicates whether to underline recognized URLs
  "gutterpreview.showUnderline": true,

  // Additional folder to consider when resolving relative urls
  "gutterpreview.sourceFolder": "src"

},
{
  // Enable automatic content-based separator autodetection for the specified list of separators (multicharacter separators are supported)
  "rainbow_csv.autodetect_separators": [
    "TAB",
    ",",
    ";",
    "|"
  ],

  // Minimum number of non-comment lines in file for content-based autodetection
  "rainbow_csv.autodetection_min_line_count": 10,

  // Comment lines prefix, e.g. "#". Set to empty string to disable
  "rainbow_csv.comment_prefix": "",

  // CSV Lint: detect leading and trailing whitespaces in fields and show warning
  "rainbow_csv.csv_lint_detect_trailing_spaces": false,

  // Enable automatic linting/checking of opened csv files
  "rainbow_csv.enable_auto_csv_lint": true,

  // Enable "Preview CSV head" option in File Explorer context menu for all files
  "rainbow_csv.enable_context_menu_head": false,

  // Enable "Preview CSV tail" option in File Explorer context menu for all files
  "rainbow_csv.enable_context_menu_tail": false,

  // Keyboard input text cursor: show info about the cursor CSV column in the status bar.
  "rainbow_csv.enable_cursor_position_info": true,

  // Enable automatic content based separator autodetection
  "rainbow_csv.enable_separator_autodetection": true,

  // Enable column-info tooltip on hover
  "rainbow_csv.enable_tooltip": true,

  // Show column names in tooltip
  "rainbow_csv.enable_tooltip_column_names": true,

  // Output directory for RBQL result sets, can be `TMP`, `INPUT` or a custom absolute path. `TMP` - output in system tmp dir(default), `INPUT` - output in the same dir as input file, otherwise use provided path as the output directory e.g. `/path/to/custom/dir`
  "rainbow_csv.rbql_output_dir": "TMP",

  // RBQL treats the first line as header by default
  "rainbow_csv.rbql_with_headers_by_default": false

},
{
  // Auto sort after imports
  "namespaceResolver.autoSort": true,

  // Exclude glob pattern while finding files
  "namespaceResolver.exclude": "**/node_modules/**",

  // Auto highlight not imported and not used when a file is opened
  "namespaceResolver.highlightOnOpen": false,

  // Auto highlight not imported and not used when a file is saved
  "namespaceResolver.highlightOnSave": false,

  // Expand class with leading namespace separator
  "namespaceResolver.leadingSeparator": true,

  // Show message on status bar instead of notification box
  "namespaceResolver.showMessageOnStatusBar": false,

  // Sort imports in alphabetical order instead of line length
  "namespaceResolver.sortAlphabetically": false,

  // Sort imports using a 'natural order' algorithm
  "namespaceResolver.sortNatural": false,

  // Auto sort when a file is saved
  "namespaceResolver.sortOnSave": false

},
{
  // Depreciated: This setting has been renamed to `git-graph.commitDetailsView.autoCenter`
  // Automatically center the commit details view when it is opened.
  "git-graph.autoCenterCommitDetailsView": true,

  // Depreciated: This setting has been renamed to `git-graph.referenceLabels.combineLocalAndRemoteBranchLabels`
  // Combine local and remote branch labels if they refer to the same branch, and are on the same commit.
  "git-graph.combineLocalAndRemoteBranchLabels": true,

  // Automatically center the Commit Details View when it is opened.
  "git-graph.commitDetailsView.autoCenter": true,

  // Render the File Tree in the Commit Details View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.
  "git-graph.commitDetailsView.fileView.fileTree.compactFolders": true,

  // Sets the default type of File View used in the Commit Details View. This can be overridden per repository using the controls on the right side of the Commit Details View.
  //  - File Tree: Display files in a tree structure.
  //  - File List: Display files in a list (useful for repositories with deep folder structures).
  "git-graph.commitDetailsView.fileView.type": "File Tree",

  // Specifies where the Commit Details View is rendered in the Git Graph View.
  //  - Inline: Show the Commit Details View inline with the graph & commits.
  //  - Docked to Bottom: Show the Commit Details View docked to the bottom of the Git Graph View.
  "git-graph.commitDetailsView.location": "Inline",

  // Depreciated: This setting has been renamed to `git-graph.commitDetailsView.fileView.fileTree.compactFolders`
  // Render the File Tree in the Commit Details / Comparison View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.
  "git-graph.commitDetailsViewFileTreeCompactFolders": true,

  // Depreciated: This setting has been renamed to `git-graph.commitDetailsView.location`
  // Specifies where the Commit Details View is rendered in the Git Graph view.
  //  - Inline: Show the Commit Details View inline with the graph
  //  - Docked to Bottom: Show the Commit Details View docked to the bottom of the Git Graph view
  "git-graph.commitDetailsViewLocation": "Inline",

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.order`
  // Specifies the order of commits on the Git Graph view. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option.
  //  - date: Show commits in the commit timestamp order.
  //  - author-date: Show commits in the author timestamp order.
  //  - topo: Avoid showing commits on multiple lines of history intermixed.
  "git-graph.commitOrdering": "date",

  // Customise which context menu actions are visible. For example, if you want to hide the rebase action from the branch context menu, a suitable value for this setting is `{ "branch": { "rebase": false } }`. For more information of how to configure this setting, view the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Extension-Settings#context-menu-actions-visibility).
  "git-graph.contextMenuActionsVisibility": {},

  // An array of Custom Branch Glob Patterns to be shown in the 'Branches' dropdown. Example: [{"name": "Feature Requests", "glob": "heads/feature/*"}]
  "git-graph.customBranchGlobPatterns": [],

  // An array of custom Emoji Shortcode mappings. Example: [{"shortcode": ":sparkles:", "emoji":"✨"}]
  "git-graph.customEmojiShortcodeMappings": [],

  // An array of custom Pull Request providers that can be used in the "Pull Request Creation" Integration. For information on how to configure this setting, see the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Configuring-a-custom-Pull-Request-Provider).
  "git-graph.customPullRequestProviders": [],

  // Specifies the date format to be used in the "Date" column on the Git Graph View.
  //  - Date & Time: Show the date and time (e.g. "24 Mar 2019 21:34")
  //  - Date Only: Show the date only (e.g. "24 Mar 2019")
  //  - ISO Date & Time: Show the ISO date and time (e.g. "2019-03-24 21:34")
  //  - ISO Date Only: Show the ISO date only (e.g. "2019-03-24")
  //  - Relative: Show relative times (e.g. "5 minutes ago")
  "git-graph.date.format": "Date & Time",

  // Specifies the date type to be displayed in the "Date" column on the Git Graph View.
  //  - Author Date: Use the author date of a commit.
  //  - Commit Date: Use the committer date of a commit.
  "git-graph.date.type": "Author Date",

  // Depreciated: This setting has been renamed to `git-graph.date.format`
  // Specifies the date format to be used in the "Date" column on the Git Graph View.
  //  - Date & Time: Show the date and time, for example "24 Mar 2019 21:34"
  //  - Date Only: Show the date only, for example "24 Mar 2019"
  //  - ISO Date & Time: Show the ISO date and time, for example "2019-03-24 21:34"
  //  - ISO Date Only: Show the ISO date only, for example "2019-03-24"
  //  - Relative: Show relative times, for example "5 minutes ago"
  "git-graph.dateFormat": "Date & Time",

  // Depreciated: This setting has been renamed to `git-graph.date.type`
  // Specifies the date type to be displayed in the "Date" column on the Git Graph View.
  //  - Author Date: Use the author date of a commit
  //  - Commit Date: Use the committer date of a commit
  "git-graph.dateType": "Author Date",

  // An object specifying the default visibility of the Date, Author & Commit columns. Example: {"Date": true, "Author": true, "Commit": true}
  "git-graph.defaultColumnVisibility": {
    "Date": true,
    "Author": true,
    "Commit": true
  },

  // Depreciated: This setting has been renamed to `git-graph.commitDetailsView.fileView.type`
  // Sets the default type of File View used in the Commit Details / Comparison Views. This can be overridden per repository using the controls on the right side of the Commit Details / Comparison Views.
  //  - File Tree: Display files in a tree structure
  //  - File List: Display files in a list (useful for repositories with deep folder structures)
  "git-graph.defaultFileViewType": "File Tree",

  // Default state of the field indicating whether the tag should be pushed to a remote once it is added.
  "git-graph.dialog.addTag.pushToRemote": false,

  // Default type of the tag being added.
  "git-graph.dialog.addTag.type": "Annotated",

  // Default state of the "Reinstate Index" checkbox.
  "git-graph.dialog.applyStash.reinstateIndex": false,

  // Default state of the "No Commit" checkbox.
  "git-graph.dialog.cherryPick.noCommit": false,

  // Default state of the "Record Origin" checkbox.
  "git-graph.dialog.cherryPick.recordOrigin": false,

  // Default state of the "Check out" checkbox.
  "git-graph.dialog.createBranch.checkOut": false,

  // Default state of the "Force Delete" checkbox.
  "git-graph.dialog.deleteBranch.forceDelete": false,

  // Default state of the "Force Fetch" checkbox.
  "git-graph.dialog.fetchIntoLocalBranch.forceFetch": false,

  // Default state of the "Prune" checkbox.
  "git-graph.dialog.fetchRemote.prune": false,

  // Default state of the "Prune Tags" checkbox.
  "git-graph.dialog.fetchRemote.pruneTags": false,

  // Specifies a substitution that is automatically performed when space characters are entered or pasted into reference inputs on dialogs (e.g. Create Branch, Add Tag, etc.).
  //  - None: Don't replace spaces.
  //  - Hyphen: Replace space characters with hyphens, for example: "new branch" -> "new-branch".
  //  - Underscore: Replace space characters with underscores, for example: "new branch" -> "new_branch".
  "git-graph.dialog.general.referenceInputSpaceSubstitution": "None",

  // Default state of the "No Commit" checkbox.
  "git-graph.dialog.merge.noCommit": false,

  // Default state of the "Create a new commit even if fast-forward is possible" checkbox.
  "git-graph.dialog.merge.noFastForward": true,

  // Default state of the "Squash Commits" checkbox.
  "git-graph.dialog.merge.squashCommits": false,

  // Specifies the message format used for the squashed commit (when the "Squash Commits" option is selected).
  //  - Default: Use the squash message generated by Git Graph.
  //  - Git SQUASH_MSG: Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG).
  "git-graph.dialog.merge.squashMessageFormat": "Default",

  // Default state of the "Reinstate Index" checkbox.
  "git-graph.dialog.popStash.reinstateIndex": false,

  // Default state of the "Create a new commit even if fast-forward is possible" checkbox.
  "git-graph.dialog.pullBranch.noFastForward": false,

  // Default state of the "Squash Commits" checkbox.
  "git-graph.dialog.pullBranch.squashCommits": false,

  // Specifies the message format used for the squashed commit (when the "Squash Commits" option is selected).
  //  - Default: Use the squash message generated by Git Graph.
  //  - Git SQUASH_MSG: Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG).
  "git-graph.dialog.pullBranch.squashMessageFormat": "Default",

  // Default state of the "Ignore Date (non-interactive rebase only)" checkbox.
  "git-graph.dialog.rebase.ignoreDate": true,

  // Default state of the "Launch Interactive Rebase in new Terminal" checkbox.
  "git-graph.dialog.rebase.launchInteractiveRebase": false,

  // Default mode to be used for the reset action.
  //  - Soft: Soft - Keep all changes, but reset head
  //  - Mixed: Mixed - Keep working tree, but reset index
  //  - Hard: Hard - Discard all changes
  "git-graph.dialog.resetCurrentBranchToCommit.mode": "Mixed",

  // Default mode to be used for the reset action.
  //  - Mixed: Mixed - Keep working tree, but reset index
  //  - Hard: Hard - Discard all changes
  "git-graph.dialog.resetUncommittedChanges.mode": "Mixed",

  // Default state of the "Include Untracked" checkbox.
  "git-graph.dialog.stashUncommittedChanges.includeUntracked": true,

  // Visual file change A|M|D|R|U indicators in the Commit Details View for users with colour blindness. In the future, this setting will enable any additional accessibility related features of Git Graph that aren't enabled by default.
  "git-graph.enhancedAccessibility": false,

  // Depreciated: This setting has been renamed to `git-graph.repository.fetchAndPrune`
  // Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s).
  "git-graph.fetchAndPrune": false,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.fetchAvatars`
  // Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin.
  "git-graph.fetchAvatars": false,

  // The character set encoding used when retrieving a specific version of repository files (e.g. in the Diff View). A list of all supported encodings can be found [here](https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings).
  "git-graph.fileEncoding": "utf8",

  // Specifies the colours used on the graph.
  "git-graph.graph.colours": [
    "#0085d9",
    "#d9008f",
    "#00d90a",
    "#d98500",
    "#a300d9",
    "#ff0000",
    "#00d9cc",
    "#e138e8",
    "#85d900",
    "#dc5b23",
    "#6f24d6",
    "#ffcc00"
  ],

  // Specifies the style of the graph.
  //  - rounded: Use smooth curves when transitioning between branches on the graph.
  //  - angular: Use angular lines when transitioning between branches on the graph.
  "git-graph.graph.style": "rounded",

  // Specifies how the Uncommitted Changes are displayed on the graph.
  //  - Open Circle at the Uncommitted Changes: Display the Uncommitted Changes as a grey open circle, connected to the commit referenced by HEAD with a solid grey line. The current file system's state is therefore always displayed as an open circle.
  //  - Open Circle at the Checked Out Commit: Display the Uncommitted Changes as a grey closed circle, connected to the commit referenced by HEAD with a dotted grey line. The commit referenced by HEAD is therefore always displayed as an open circle.
  "git-graph.graph.uncommittedChanges": "Open Circle at the Uncommitted Changes",

  // Depreciated: This setting has been renamed to `git-graph.graph.colours`
  // Specifies the colours used on the graph.
  "git-graph.graphColours": [
    "#0085d9",
    "#d9008f",
    "#00d90a",
    "#d98500",
    "#a300d9",
    "#ff0000",
    "#00d9cc",
    "#e138e8",
    "#85d900",
    "#dc5b23",
    "#6f24d6",
    "#ffcc00"
  ],

  // Depreciated: This setting has been renamed to `git-graph.graph.style`
  // Specifies the style of the graph.
  //  - rounded: Use smooth curves when transitioning between branches on the graph
  //  - angular: Use angular lines when transitioning between branches on the graph
  "git-graph.graphStyle": "rounded",

  // Depreciated: This setting has been renamed to `git-graph.repository.includeCommitsMentionedByReflogs`
  // Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.includeCommitsMentionedByReflogs": false,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.initialLoad`
  // Specifies the number of commits to initially load.
  "git-graph.initialLoadCommits": 300,

  // Specifies the path and filename of the Shell executable to be used by the Visual Studio Code Integrated Terminal, when it is opened by Git Graph. For example, to use Git Bash on Windows this setting would commonly be set to "C:\Program Files\Git\bin\bash.exe". If this setting is left blank, the default Shell is used.
  "git-graph.integratedTerminalShell": "",

  // The keybinding for the keyboard shortcut that opens the Find Widget in the Git Graph View.
  "git-graph.keyboardShortcut.find": "CTRL/CMD + F",

  // The keybinding for the keyboard shortcut that refreshes the Git Graph View.
  "git-graph.keyboardShortcut.refresh": "CTRL/CMD + R",

  // The keybinding for the keyboard shortcut that scrolls the Git Graph View to be centered on the commit referenced by HEAD.
  "git-graph.keyboardShortcut.scrollToHead": "CTRL/CMD + H",

  // The keybinding for the keyboard shortcut that scrolls the Git Graph View to the first (or next) stash in the loaded commits. The Shift Key Modifier can be applied to this keybinding to scroll the Git Graph View to the last (or previous) stash in the loaded commits.
  "git-graph.keyboardShortcut.scrollToStash": "CTRL/CMD + S",

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.loadMore`
  // Specifies the number of additional commits to load when the "Load More Commits" button is pressed, or more commits are automatically loaded.
  "git-graph.loadMoreCommits": 100,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.loadMoreAutomatically`
  // When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the "Load More Commits" button).
  "git-graph.loadMoreCommitsAutomatically": true,

  // Parse and render a frequently used subset of inline Markdown formatting rules in commit messages and tag details (bold, italics, bold & italics, and inline code blocks).
  "git-graph.markdown": true,

  // Specifies the maximum depth of subfolders to search when discovering repositories in the workspace. Note: Sub-repos are not automatically detected when searching subfolders, however they can be manually added by running the command "Git Graph: Add Git Repository" in the Command Palette.
  "git-graph.maxDepthOfRepoSearch": 0,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead`
  // Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
  "git-graph.muteCommitsThatAreNotAncestorsOfHead": false,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.mute.mergeCommits`
  // Display merge commits with a muted text color.
  "git-graph.muteMergeCommits": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.onlyFollowFirstParent`
  // Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting.
  "git-graph.onlyFollowFirstParent": false,

  // Depreciated: This setting has been renamed to `git-graph.openNewTabEditorGroup`
  // Specifies which Editor Group the Visual Studio Code Diff View is opened in.
  //  - Active: Open the Visual Studio Code Diff View in the Active Editor Group.
  //  - Beside: Open the Visual Studio Code Diff View beside the Active Editor Group.
  //  - One: Open the Visual Studio Code Diff View in the First Editor Group.
  //  - Two: Open the Visual Studio Code Diff View in the Second Editor Group.
  //  - Three: Open the Visual Studio Code Diff View in the Third Editor Group.
  //  - Four: Open the Visual Studio Code Diff View in the Fourth Editor Group.
  //  - Five: Open the Visual Studio Code Diff View in the Fifth Editor Group.
  //  - Six: Open the Visual Studio Code Diff View in the Sixth Editor Group.
  //  - Seven: Open the Visual Studio Code Diff View in the Seventh Editor Group.
  //  - Eight: Open the Visual Studio Code Diff View in the Eighth Editor Group.
  //  - Nine: Open the Visual Studio Code Diff View in the Ninth Editor Group.
  "git-graph.openDiffTabLocation": "Active",

  // Specifies the Editor Group where Git Graph should open new tabs, when performing the following actions from the Git Graph View: Viewing the Visual Studio Code Diff View, Opening a File, Viewing a File at a Specific Revision.
  //  - Active: Open the new tab in the Active Editor Group.
  //  - Beside: Open the new tab beside the Active Editor Group.
  //  - One: Open the new tab in the First Editor Group.
  //  - Two: Open the new tab in the Second Editor Group.
  //  - Three: Open the new tab in the Third Editor Group.
  //  - Four: Open the new tab in the Fourth Editor Group.
  //  - Five: Open the new tab in the Fifth Editor Group.
  //  - Six: Open the new tab in the Sixth Editor Group.
  //  - Seven: Open the new tab in the Seventh Editor Group.
  //  - Eight: Open the new tab in the Eighth Editor Group.
  //  - Nine: Open the new tab in the Ninth Editor Group.
  "git-graph.openNewTabEditorGroup": "Active",

  // Depreciated: This setting has been renamed to `git-graph.repository.onLoad.scrollToHead`
  // When opening or switching repositories in the Git Graph View, automatically scroll the view to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
  "git-graph.openRepoToHead": false,

  // Open the Git Graph View to the repository containing the active Text Editor document.
  "git-graph.openToTheRepoOfTheActiveTextEditorDocument": false,

  // Depreciated: This setting has been renamed to `git-graph.referenceLabels.alignment`
  // Specifies how branch and tag reference labels are aligned for each commit.
  //  - Normal: Show branch & tag labels on the left of the commit message in the 'Description' column.
  //  - Branches (on the left) & Tags (on the right): Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.
  //  - Branches (aligned to the graph) & Tags (on the right): Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column.
  "git-graph.referenceLabelAlignment": "Normal",

  // Specifies how branch and tag reference labels are aligned for each commit.
  //  - Normal: Show branch & tag labels on the left of the commit message in the 'Description' column.
  //  - Branches (on the left) & Tags (on the right): Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.
  //  - Branches (aligned to the graph) & Tags (on the right): Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column.
  "git-graph.referenceLabels.alignment": "Normal",

  // Combine local and remote branch labels if they refer to the same branch, and are on the same commit.
  "git-graph.referenceLabels.combineLocalAndRemoteBranchLabels": true,

  // Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin.
  "git-graph.repository.commits.fetchAvatars": false,

  // Specifies the number of commits to initially load.
  "git-graph.repository.commits.initialLoad": 300,

  // Specifies the number of additional commits to load when the "Load More Commits" button is pressed, or more commits are automatically loaded.
  "git-graph.repository.commits.loadMore": 100,

  // When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the "Load More Commits" button).
  "git-graph.repository.commits.loadMoreAutomatically": true,

  // Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
  "git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead": false,

  // Display merge commits with a muted text color.
  "git-graph.repository.commits.mute.mergeCommits": true,

  // Specifies the order of commits on the Git Graph View. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option. This can be overridden per repository via the Git Graph View's Column Header Context Menu.
  //  - date: Show commits in the commit timestamp order.
  //  - author-date: Show commits in the author timestamp order.
  //  - topo: Avoid showing commits on multiple lines of history intermixed.
  "git-graph.repository.commits.order": "date",

  // Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code.
  "git-graph.repository.commits.showSignatureStatus": false,

  // Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s).
  "git-graph.repository.fetchAndPrune": false,

  // Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any local tags that no longer exist on the remote(s). Requires Git >= 2.17.0, and the "Repository: Fetch And Prune" setting to be enabled. Caution: If you work in repositories that have multiple remotes, it is not recommended to use this setting (instead you can prune tags for a specific remote via "Fetch Remote" Dialog from the Repository Settings Widget on the Git Graph View).
  "git-graph.repository.fetchAndPruneTags": false,

  // Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.repository.includeCommitsMentionedByReflogs": false,

  // Automatically scroll the Git Graph View to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
  "git-graph.repository.onLoad.scrollToHead": false,

  // Show the checked out branch when a repository is loaded in the Git Graph View. This setting can be used in conjunction with "Repository > On Load: Show Specific Branches". Default: false (show all branches)
  "git-graph.repository.onLoad.showCheckedOutBranch": false,

  // Show specific branches when a repository is loaded in the Git Graph View. Branches can be specified as follows: A local branch name (e.g. `master`), a remote-tracking branch name prefixed with "remotes/" (e.g. `remotes/origin/master`), or a glob pattern defined in `git-graph.customBranchGlobPatterns` prefixed with "--glob=" (e.g. `--glob=heads/feature/*`). This setting can be used in conjunction with "Repository > On Load: Show Checked Out Branch". Default: [] (show all branches)
  "git-graph.repository.onLoad.showSpecificBranches": [],

  // Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.repository.onlyFollowFirstParent": false,

  // Show Commits that are only referenced by tags in Git Graph.
  "git-graph.repository.showCommitsOnlyReferencedByTags": true,

  // Show Remote Branches in Git Graph by default. This can be overridden per repository from the Git Graph View's Control Bar.
  "git-graph.repository.showRemoteBranches": true,

  // Show Remote HEAD Symbolic References in Git Graph (e.g. "origin/HEAD").
  "git-graph.repository.showRemoteHeads": true,

  // Show Stashes in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.repository.showStashes": true,

  // Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.repository.showTags": true,

  // Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
  "git-graph.repository.showUncommittedChanges": true,

  // Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
  "git-graph.repository.showUntrackedFiles": true,

  // Enables commit signing with GPG or X.509.
  "git-graph.repository.sign.commits": false,

  // Enables tag signing with GPG or X.509.
  "git-graph.repository.sign.tags": false,

  // Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses.
  "git-graph.repository.useMailmap": false,

  // Specifies the order that repositories are sorted in the repository dropdown on the Git Graph View (only visible when more than one repository exists in the current Visual Studio Code Workspace).
  //  - Full Path: Sort repositories alphabetically by the full path of the repository.
  //  - Name: Sort repositories alphabetically by the name of the repository.
  //  - Workspace Full Path: Sort repositories according to the Visual Studio Code Workspace Folder order, then alphabetically by the full path of the repository.
  "git-graph.repositoryDropdownOrder": "Workspace Full Path",

  // Specifies if the Git Graph View's Visual Studio Code context is kept when the panel is no longer visible (e.g. moved to background tab). Enabling this setting will make Git Graph load significantly faster when switching back to the Git Graph tab, however has a higher memory overhead.
  "git-graph.retainContextWhenHidden": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.showCommitsOnlyReferencedByTags`
  // Show commits that are only referenced by tags in Git Graph.
  "git-graph.showCommitsOnlyReferencedByTags": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.onLoad.showCheckedOutBranch`
  // Show the current branch by default when Git Graph is opened. Default: false (show all branches)
  "git-graph.showCurrentBranchByDefault": false,

  // Depreciated: This setting has been renamed to `git-graph.repository.commits.showSignatureStatus`
  // Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code.
  "git-graph.showSignatureStatus": false,

  // Show a Status Bar Item that opens the Git Graph View when clicked.
  "git-graph.showStatusBarItem": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.showTags`
  // Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
  "git-graph.showTags": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.showUncommittedChanges`
  // Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
  "git-graph.showUncommittedChanges": true,

  // Depreciated: This setting has been renamed to `git-graph.repository.showUntrackedFiles`
  // Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
  "git-graph.showUntrackedFiles": true,

  // Specifies where the "View Git Graph" action appears on the title of SCM Providers.
  //  - Inline: Show the 'View Git Graph' action on the title of SCM Providers
  //  - More Actions: Show the 'View Git Graph' action in the 'More Actions...' menu on the title of SCM Providers
  "git-graph.sourceCodeProviderIntegrationLocation": "Inline",

  // Specifies the colour theme of the icon displayed on the Git Graph tab.
  //  - colour: Show a colour icon which suits most Visual Studio Code colour themes
  //  - grey: Show a grey icon which suits Visual Studio Code colour themes that are predominantly grayscale
  "git-graph.tabIconColourTheme": "colour",

  // Depreciated: This setting has been renamed to `git-graph.repository.useMailmap`
  // Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses.
  "git-graph.useMailmap": false

},
{
  // Enable/disable default C# formatter (requires restart).
  "csharp.format.enable": true,

  // Display inline parameter name hints
  "csharp.inlayHints.parameters.enabled": false,

  // Show hints for indexers
  "csharp.inlayHints.parameters.forIndexerParameters": false,

  // Show hints for literals
  "csharp.inlayHints.parameters.forLiteralParameters": false,

  // Show hints for 'new' expressions
  "csharp.inlayHints.parameters.forObjectCreationParameters": false,

  // Show hints for everything else
  "csharp.inlayHints.parameters.forOtherParameters": false,

  // Suppress hints when parameter names differ only by suffix
  "csharp.inlayHints.parameters.suppressForParametersThatDifferOnlyBySuffix": false,

  // Suppress hints when argument matches parameter name
  "csharp.inlayHints.parameters.suppressForParametersThatMatchArgumentName": false,

  // Suppress hints when parameter name matches the method's intent
  "csharp.inlayHints.parameters.suppressForParametersThatMatchMethodIntent": false,

  // Display inline type hints
  "csharp.inlayHints.types.enabled": false,

  // Show hints for implicit object creation
  "csharp.inlayHints.types.forImplicitObjectCreation": false,

  // Show hints for variables with inferred types
  "csharp.inlayHints.types.forImplicitVariableTypes": false,

  // Show hints for lambda parameter types
  "csharp.inlayHints.types.forLambdaParameterTypes": false,

  // Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely.
  "csharp.maxProjectFileCountForDiagnosticAnalysis": 1000,

  // Specifies whether the references CodeLens should be shown.
  "csharp.referencesCodeLens.enabled": true,

  // Array of custom symbol names for which CodeLens should be disabled.
  "csharp.referencesCodeLens.filteredSymbols": [],

  // Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.
  "csharp.semanticHighlighting.enabled": true,

  // Shows the OmniSharp log in the Output pane when OmniSharp reports an error.
  "csharp.showOmnisharpLogOnError": true,

  // Suppress the notification window to add missing assets to build or debug the application.
  "csharp.suppressBuildAssetsNotification": false,

  // Suppress the warning that the .NET Core SDK is not on the path.
  "csharp.suppressDotnetInstallWarning": false,

  // Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved.
  "csharp.suppressDotnetRestoreNotification": false,

  // Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane.
  "csharp.suppressHiddenDiagnostics": true,

  // Suppress the warning that project.json is no longer a supported project format for .NET Core applications
  "csharp.suppressProjectJsonWarning": false,

  // Specifies whether the run and debug test CodeLens should be shown.
  "csharp.testsCodeLens.enabled": true,

  // Options to use with the debugger when launching for unit test debugging.
  "csharp.unitTestDebuggingOptions": {},

  // Only run analyzers against open files when 'enableRoslynAnalyzers' is true
  "omnisharp.analyzeOpenDocumentsOnly": false,

  // Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command
  "omnisharp.autoStart": true,

  // The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen.
  "omnisharp.defaultLaunchSolution": "",

  // Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log
  "omnisharp.disableMSBuildDiagnosticWarning": false,

  // Paths to a local download of the .NET CLI to use for running any user code.
  "omnisharp.dotNetCliPaths": [],

  // Specified the path to a dotnet installation to use when "useModernNet" is set to true, instead of the default system one. This only influences the dotnet installation to use for hosting Omnisharp itself. Example: "/home/username/mycustomdotnetdirectory".
  "omnisharp.dotnetPath": "",

  // (EXPERIMENTAL) Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results.
  "omnisharp.enableAsyncCompletion": false,

  // Enables support for decompiling external references instead of viewing metadata.
  "omnisharp.enableDecompilationSupport": false,

  // Enables support for reading code style, naming convention and analyzer settings from .editorconfig.
  "omnisharp.enableEditorConfigSupport": true,

  // Enables support for showing unimported types and unimported extension methods in completion lists. When committed, the appropriate using directive will be added at the top of the current file. This option can have a negative impact on initial completion responsiveness, particularly for the first few completion sessions after opening a solution.
  "omnisharp.enableImportCompletion": false,

  // If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols.
  "omnisharp.enableMsBuildLoadProjectsOnDemand": false,

  // Enables support for roslyn analyzers, code fixes and rulesets.
  "omnisharp.enableRoslynAnalyzers": false,

  // Specifies the level of logging output from the OmniSharp server.
  "omnisharp.loggingLevel": "information",

  // The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here.
  "omnisharp.maxFindSymbolsItems": 1000,

  // The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250).
  "omnisharp.maxProjectResults": 250,

  // The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results.
  "omnisharp.minFindSymbolsFilterLength": 0,

  // Specifies the path to a mono installation to use when "useModernNet" is set to false, instead of the default system one. Example: "/Library/Frameworks/Mono.framework/Versions/Current"
  "omnisharp.monoPath": "",

  // Specifies whether 'using' directives should be grouped and sorted during document formatting.
  "omnisharp.organizeImportsOnFormat": false,

  // Specifies the path to OmniSharp. When left empty the OmniSharp version pinned to the C# Extension is used. This can be the absolute path to an OmniSharp executable, a specific version number, or "latest". If a version number or "latest" is specified, the appropriate version of OmniSharp will be downloaded on your behalf. Setting "latest" is an opt-in into latest beta releases of OmniSharp.
  "omnisharp.path": "",

  // The exclude pattern used by OmniSharp to find all project files.
  "omnisharp.projectFilesExcludePattern": "**/node_modules/**,**/.git/**,**/bower_components/**",

  // The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds.
  "omnisharp.projectLoadTimeout": 60,

  // Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when "useModernNet" is set to true.
  "omnisharp.sdkIncludePrereleases": true,

  // Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when "useModernNet" is set to true. Example: /home/username/dotnet/sdks/6.0.300.
  "omnisharp.sdkPath": "",

  // Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when "useModernNet" is set to true. Example: 6.0.300.
  "omnisharp.sdkVersion": "",

  // Path to the .runsettings file which should be used when running unit tests.
  "omnisharp.testRunSettings": "",

  // Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size).
  "omnisharp.useEditorFormattingSettings": true,

  // Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements.
  "omnisharp.useModernNet": true,

  // Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached.
  "omnisharp.waitForDebugger": false,

  // Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving.
  "razor.devmode": false,

  // Specifies whether to disable Razor language features.
  "razor.disabled": false,

  // Enable/disable default Razor formatter.
  "razor.format.enable": true,

  // Specifies whether to wait for debug attach when launching the language server.
  "razor.languageServer.debug": false,

  // Overrides the path to the Razor Language Server directory.
  "razor.languageServer.directory": "",

  // Overrides the path to the Razor plugin dll.
  "razor.plugin.path": "",

  // Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off].
  //  - Off: Does not log messages from the Razor extension
  //  - Messages: Logs only some messages from the Razor extension
  //  - Verbose: Logs all messages from the Razor extension
  "razor.trace": "Off"

},
{
  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "isort.args": [],

  // Controla si se debe ejecutar "isort" e informar de problemas de ordenación de importación.
  "isort.check": false,

  // Define de dónde se importa “isort”. Este ajuste puede ser ignorado si “isort.path” está establecido.
  //  - useBundled: Use siempre la versión empaquetada de "isort".
  //  - fromEnvironment: Use “isort” desde el entorno, retroceda a la versión empaquetada solo si “isort” no está disponible en el entorno.
  "isort.importStrategy": "useBundled",

  // Cuando se establece una ruta de acceso al archivo ejecutable de Python, la extensión lo utilizará para lanzar el servidor y cualquier subproceso.
  "isort.interpreter": [],

  // El nivel de seguimiento con el que la extensión registra. El valor predeterminado es "error".
  //  - debug: Incluye el registro detallado destinado a la depuración.
  //  - error: Solo errores e información que se registra siempre.
  //  - info: Incluye todos los mensajes que no están marcados como detallados o de depuración.
  //  - off: La mayoría de los registros están desactivados. Puede que todavía se muestre cualquier información que se registre siempre.
  //  - warn: Incluye todos los mensajes de la categoría de error y cualquier advertencia adicional.
  "isort.logLevel": "error",

  // Cuando se establece en una ruta al binario “isort”, la extensión usará eso para el linting. NOTA: El uso de esta opción puede ralentizar el linting.
  "isort.path": [],

  // Asignación de la gravedad del tipo de mensaje “isort” a la gravedad que se muestra en la ventana del problema.
  "isort.severity": {
    "W": "Warning",
    "E": "Hint"
  },

  // Controla cuándo se muestran las notificaciones mediante esta extensión.
  //  - off: Todas las notificaciones están desactivadas, los errores o advertencias siguen estando disponibles en los registros.
  //  - onError: Las notificaciones solo se muestran en caso de error.
  //  - onWarning: Se muestran notificaciones de errores y advertencias.
  //  - always: Las notificaciones se muestran para cualquier cosa que el servidor decida mostrar.
  "isort.showNotifications": "off"

},
{
  // Ruta de acceso al ejecutable de la herramienta de estado para los runtimes de ActiveState (versión 0.36+).
  "python.activeStateToolPath": "state",

  // Lista de rutas de acceso a bibliotecas y similares que el motor de autocompletar debe importar. Por ejemplo, cuando se usa Google App SDK, las rutas de acceso no se encuentran en la ruta de acceso del sistema, por lo que deben agregarse a esta lista.
  "python.autoComplete.extraPaths": [],

  // Ruta de acceso al ejecutable de conda que se va a usar para la activación (versión 4.4+).
  "python.condaPath": "",

  // Ruta de acceso predeterminada de Python que se usará cuando la extensión se cargue por primera vez, dejará de usarse una vez que se seleccione un intérprete para el área de trabajo. Consulte [aquí](https://aka.ms/AAfekmf) para comprender cuándo se usa
  "python.defaultInterpreterPath": "python",

  // Habilite la compatibilidad con el mapa de origen para hacer seguimientos de pila significativos en los registros de errores.
  "python.diagnostics.sourceMapsEnabled": false,

  // Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.
  "python.envFile": "${workspaceFolder}/.env",

  // Habilita experimentos de pruebas A/B en la extensión de Python. Si se habilita, puede incluirse en las mejoras o características propuestas.
  "python.experiments.enabled": true,

  // Lista de experimentos de los que participar. Si está vacía, al usuario se le asignan los grupos de experimentos predeterminados. Consulte [aquí](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) para obtener más información.
  "python.experiments.optInto": [],

  // Lista de experimentos de los que no participar. Si está vacía, al usuario se le asignan los grupos de experimentos predeterminados. Consulte [aquí](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) para obtener más información.
  "python.experiments.optOutFrom": [],

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.formatting.autopep8Args": [],

  // Ruta de acceso a autopep8, puede usar una versión personalizada de autopep8 modificando esta configuración para incluir la ruta de acceso completa.
  "python.formatting.autopep8Path": "autopep8",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.formatting.blackArgs": [],

  // Ruta de acceso a Black, puede usar una versión personalizada de Black modificando esta configuración para incluir la ruta de acceso completa.
  "python.formatting.blackPath": "black",

  // Proveedor de formato. Entre las opciones posibles se incluyen "autopep8", "black" y "yapf".
  "python.formatting.provider": "autopep8",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.formatting.yapfArgs": [],

  // Ruta de acceso a yapf, puede usar una versión personalizada de yapf modificando esta configuración para incluir la ruta de acceso completa.
  "python.formatting.yapfPath": "yapf",

  // Indica si se van a instalar módulos de Python globalmente cuando no se usa un entorno.
  "python.globalModuleInstallation": false,

  // Controla cuándo mostrar información del intérprete seleccionado en la barra de estado.
  //  - never: No mostrar nunca información.
  //  - onPythonRelated: Solo muestra información si se abren archivos relacionados con Python.
  //  - always: Mostrar siempre información.
  "python.interpreter.infoVisibility": "onPythonRelated",

  // Define el tipo de servidor de lenguaje.
  //  - Default: Selecciona automáticamente un servidor de lenguaje: Pylance si está instalado y disponible; de lo contrario, vuelve a Jedi.
  //  - Jedi: Usa Jedi detrás del Protocolo del servidor de lenguaje (LSP) como servidor de lenguaje.
  //  - Pylance: Use Pylance como servidor de lenguaje.
  //  - None: Deshabilite las funcionalidades del servidor de lenguaje.
  "python.languageServer": "Default",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.banditArgs": [],

  // Indica si se deben lintar los archivos de Python mediante bandido.
  "python.linting.banditEnabled": false,

  // Ruta de acceso al bandido, puede usar una versión personalizada de un bandido modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.banditPath": "bandit",

  // Directorio de trabajo opcional para linters.
  "python.linting.cwd": null,

  // Indica si se deben lintar los archivos de Python.
  "python.linting.enabled": true,

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.flake8Args": [],

  // Gravedad del tipo de mensaje "E" de Flake8.
  "python.linting.flake8CategorySeverity.E": "Error",

  // Gravedad del tipo de mensaje "F" de Flake8.
  "python.linting.flake8CategorySeverity.F": "Error",

  // Gravedad del tipo de mensaje "W" de Flake8.
  "python.linting.flake8CategorySeverity.W": "Warning",

  // Indica si se deben lintar los archivos de Python mediante flake8.
  "python.linting.flake8Enabled": false,

  // Ruta de acceso a flake8, puede usar una versión personalizada de flake8 modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.flake8Path": "flake8",

  // Patrones usados para que no se linten archivos o carpetas.
  "python.linting.ignorePatterns": [
    "**/site-packages/**/*.py",
    ".vscode/*.py"
  ],

  // Indica si se deben lintar los archivos de Python cuando se guardan.
  "python.linting.lintOnSave": true,

  // Controla el número máximo de problemas producidos por el servidor.
  "python.linting.maxNumberOfProblems": 100,

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.mypyArgs": [
    "--follow-imports=silent",
    "--ignore-missing-imports",
    "--show-column-numbers",
    "--no-pretty"
  ],

  // Gravedad del tipo de mensaje de Mypy "Error".
  "python.linting.mypyCategorySeverity.error": "Error",

  // %python.linting.mypyCategorySeverity.note.description%.
  "python.linting.mypyCategorySeverity.note": "Information",

  // Indica si se deben lintar los archivos de Python mediante mypy.
  "python.linting.mypyEnabled": false,

  // Ruta de acceso a mypy, puede usar una versión personalizada de mypy modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.mypyPath": "mypy",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.prospectorArgs": [],

  // Indica si se deben lintar los archivos de Python con el prospector.
  "python.linting.prospectorEnabled": false,

  // Ruta de acceso a Prospector, puede usar una versión personalizada de Prospector modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.prospectorPath": "prospector",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.pycodestyleArgs": [],

  // Gravedad del tipo de mensaje pycodestyle 'E'.
  "python.linting.pycodestyleCategorySeverity.E": "Error",

  // Gravedad del tipo de mensaje pycodestyle 'W'.
  "python.linting.pycodestyleCategorySeverity.W": "Warning",

  // Indica si se deben lintar los archivos de Python mediante pycodestyle.
  "python.linting.pycodestyleEnabled": false,

  // Ruta de acceso a pycodestyle, puede usar una versión personalizada de pycodestyle modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.pycodestylePath": "pycodestyle",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.pydocstyleArgs": [],

  // Indica si se deben lintar los archivos de Python mediante pydocstyle.
  "python.linting.pydocstyleEnabled": false,

  // Ruta de acceso a pydocstyle, puede usar una versión personalizada de pydocstyle modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.pydocstylePath": "pydocstyle",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.pylamaArgs": [],

  // Indica si se deben lintar los archivos de Python mediante pylama.
  "python.linting.pylamaEnabled": false,

  // Ruta de acceso a pylama, puede usar una versión personalizada de pylama modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.pylamaPath": "pylama",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.linting.pylintArgs": [],

  // Gravedad del tipo de mensaje de Pylint "Convention/C".
  "python.linting.pylintCategorySeverity.convention": "Information",

  // Gravedad del tipo de mensaje de Pylint "Error/E".
  "python.linting.pylintCategorySeverity.error": "Error",

  // Gravedad del tipo de mensaje de Pylint "Error/F".
  "python.linting.pylintCategorySeverity.fatal": "Error",

  // Gravedad del tipo de mensaje de Pylint "Refactor/R".
  "python.linting.pylintCategorySeverity.refactor": "Hint",

  // Gravedad del tipo de mensaje de Pylint "Warning/W".
  "python.linting.pylintCategorySeverity.warning": "Warning",

  // Indica si se deben lintar los archivos de Python mediante pylint.
  "python.linting.pylintEnabled": false,

  // Ruta de acceso a Pylint, puede usar una versión personalizada de Pylint modificando esta configuración para incluir la ruta de acceso completa.
  "python.linting.pylintPath": "pylint",

  // Nivel de registro en el que se registra la extensión; el valor predeterminado es "error".
  "python.logging.level": "error",

  // Ruta de acceso al ejecutable pipenv que se va a usar para la activación.
  "python.pipenvPath": "pipenv",

  // Ruta de acceso al ejecutable poetry.
  "python.poetryPath": "poetry",

  // Esta configuración se quitará pronto. Use "isort.args" en su lugar.
  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.sortImports.args": [],

  // Esta configuración se quitará pronto. Use "isort.path" en su lugar.
  // Ruta de acceso a la secuencia de comandos, predeterminada con la versión interna
  "python.sortImports.path": "",

  // Establezca esta configuración en el directorio de registro de TensorBoard que prefiera para omitir el aviso del directorio de registro al iniciar TensorBoard.
  "python.tensorBoard.logDirectory": "",

  // Active el entorno de Python en el terminal actual al cargar la extensión.
  "python.terminal.activateEnvInCurrentTerminal": false,

  // Active el entorno de Python en todos los terminales creados.
  "python.terminal.activateEnvironment": true,

  // Al ejecutar un archivo en el terminal, si se debe usar ejecutar en el directorio del archivo en lugar de en la carpeta abierta actual.
  "python.terminal.executeInFileDir": false,

  // Al iniciar un terminal de Python, indica si se va a centrar el cursor en el terminal.
  "python.terminal.focusAfterLaunch": false,

  // Argumentos de inicio de Python que se usarán al ejecutar un archivo en el terminal.
  "python.terminal.launchArgs": [],

  // Habilite la detección de pruebas de ejecución automática al guardar un archivo de prueba.
  "python.testing.autoTestDiscoverOnSaveEnabled": true,

  // Directorio de trabajo opcional para pruebas.
  "python.testing.cwd": null,

  // Número de puerto usado para la depuración de pruebas.
  "python.testing.debugPort": 3000,

  // Se le pedirá que configure un marco de pruebas si se detectan directorios de pruebas potenciales.
  "python.testing.promptToConfigure": true,

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.testing.pytestArgs": [],

  // Habilite las pruebas con pytest.
  "python.testing.pytestEnabled": false,

  // Ruta de acceso a pytest (pytest), puede usar una versión personalizada de pytest modificando esta configuración para incluir la ruta de acceso completa.
  "python.testing.pytestPath": "pytest",

  // Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.
  "python.testing.unittestArgs": [
    "-v",
    "-s",
    ".",
    "-p",
    "*test*.py"
  ],

  // Habilite las pruebas con unittest.
  "python.testing.unittestEnabled": false,

  // Carpetas del directorio principal para buscar entornos virtuales (admite pyenv, direnv y virtualenvwrapper de forma predeterminada).
  "python.venvFolders": [],

  // Ruta de acceso a la carpeta con una lista de entornos virtuales (por ejemplo, ~/.pyenv, ~/Envs, ~/.virtualenvs).
  "python.venvPath": ""

},
{
  // Offer only exact matches in `add import` code actions
  "python.analysis.addImport.exactMatchOnly": false,

  // Offer auto-import completions.
  "python.analysis.autoImportCompletions": false,

  // Offer user symbols in auto-import completions.
  "python.analysis.autoImportUserSymbols": false,

  // Automatically add common search paths like 'src'.
  "python.analysis.autoSearchPaths": true,

  // Add parentheses to function completions.
  "python.analysis.completeFunctionParens": false,

  // Analysis mode for diagnostics.
  //  - openFilesOnly: Analyzes and reports errors on only open files.
  //  - workspace: Analyzes and reports errors on all files in the workspace.
  "python.analysis.diagnosticMode": "openFilesOnly",

  // Allows a user to override the severity levels for individual diagnostics.
  "python.analysis.diagnosticSeverityOverrides": {},

  // Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.
  "python.analysis.exclude": [],

  // Allow using '.', '(' as commit characters when applicable.
  "python.analysis.extraCommitChars": true,

  // Additional import search resolution paths
  "python.analysis.extraPaths": [],

  // source fixes to run in fix all.
  "python.analysis.fixAll": [],

  // Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no value is provided, the value of python.linting.ignorePatterns (if set) will be used.
  "python.analysis.ignore": [],

  // Defines the default format for import module.
  //  - absolute: Use absolute import format when creating new import statement.
  //  - relative: Use relative import format when creating new import statement.
  "python.analysis.importFormat": "absolute",

  // Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).
  "python.analysis.include": [],

  // Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.
  "python.analysis.indexing": true,

  // Enable/disable inlay hints for function return types:
  // ```python
  // def foo(x:int) ' -> int ':
  // 	return x
  // ```
  // 
  "python.analysis.inlayHints.functionReturnTypes": false,

  // Enable/disable inlay hints for pytest function parameters:
  // ```python
  // def test_foo(my_fixture: 'str'):
  // 	assert(myfixture == 'foo')
  // ```
  // 
  "python.analysis.inlayHints.pytestParameters": false,

  // Enable/disable inlay hints for variable types:
  // ```python
  // foo ' :list[str] ' = ["a"]
  //  
  // ```
  // 
  "python.analysis.inlayHints.variableTypes": false,

  // Specifies the level of logging for the Output panel
  "python.analysis.logLevel": "Information",

  // Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:
  // ```JSON
  // {"name": "package name (str)",
  //  "depth": "depth to scan (int)",
  //  "includeAllSymbols": "whether to include all symbols (bool)"}
  // 
  // ```
  // If `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  
  //   
  // Usage example: 
  // ```JSON
  // [
  // 	{"name": "sklearn", "depth": 2, "includeAllSymbols": true},
  // 	{"name": "matplotlib", "depth": 3, "includeAllSymbols": false}
  // ]
  // 
  // ```
  // 
  "python.analysis.packageIndexDepths": [
    {
      "name": "sklearn",
      "depth": 2
    },
    {
      "name": "matplotlib",
      "depth": 2
    },
    {
      "name": "scipy",
      "depth": 2
    },
    {
      "name": "django",
      "depth": 2
    }
  ],

  // Allow moving a symbol to another module. [Experimental]
  "python.analysis.refactoring.allowMovingSymbols": false,

  // Path to directory containing custom type stub files.
  "python.analysis.stubPath": "typings",

  // Defines the default rule set for type checking.
  //  - off: Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.
  //  - basic: All "off" rules + basic type checking rules.
  //  - strict: All "off" rules + all type checking rules.
  "python.analysis.typeCheckingMode": "off",

  // Paths to look for typeshed modules.
  "python.analysis.typeshedPaths": [],

  // Use library implementations to extract type information when type stub is not present.
  "python.analysis.useLibraryCodeForTypes": true

},
{
  // Controls whether a Docker volume should be used to cache the VS Code server and extensions. Currently only applies to single container and not Docker Compose configurations.
  "dev.containers.cacheVolume": true,

  // Controls whether the Git configuration (`~/.gitconfig`) should be copied into the container. This is done after installing any `dotfiles.repository` and will not overwrite an existing Git configuration file.
  "dev.containers.copyGitConfig": true,

  // Configures the list of extensions to always install while creating a container.
  "dev.containers.defaultExtensions": [],

  // Configures the list of features to always install while creating a container.
  "dev.containers.defaultFeatures": {},

  // Docker Compose executable name or path.
  "dev.containers.dockerComposePath": "docker-compose",

  // Controls whether a credential helper should be registered as the `credStore` in the Docker configuration (`~/.docker/config.json`) of dev containers. This will not overwrite an existing `credStore` entry in the configuration file.
  "dev.containers.dockerCredentialHelper": true,

  // Docker (or Podman) executable name or path.
  "dev.containers.dockerPath": "docker",

  // Controls whether CLI commands should always be executed in WSL. The default is to only execute in WSL for workspace folders in WSL. This setting has no effect on other platforms than Windows.
  "dev.containers.executeInWSL": false,

  // WSL distro to use when not reopening a WSL folder. The default is to use the default WSL distro (see `wsl -l`). This setting has no effect when `dev.containers.executeInWSL` is not enabled or on other platforms than Windows.
  "dev.containers.executeInWSLDistro": "",

  // Where to write the configuration for the Git credential helper.
  //  - system: Write to system config (`/etc/gitconfig`, requires root access).
  //  - global: Write to user config (`~/.gitconfig`).
  //  - none: Do not set a credential helper.
  "dev.containers.gitCredentialHelperConfigLocation": "global",

  // The log level for the extension.
  "dev.containers.logLevel": "debug",

  // List of additional paths to search for [repository configurations](https://github.com/microsoft/vscode-dev-containers/tree/main/repository-containers).
  "dev.containers.repositoryConfigurationPaths": [],

  // The consistency level used for the workspace mount (existing containers must be rebuilt to take effect).
  //  - consistent: Perfect consistency.
  //  - cached: The host’s view is authoritative.
  //  - delegated: The container’s view is authoritative.
  "dev.containers.workspaceMountConsistency": "cached",

  // The command to run after cloning the dotfiles repository. Defaults to run the first file of `install.sh`, `install`, `bootstrap.sh`, `bootstrap`, `setup.sh` and `setup` found in the dotfiles repository's root folder.
  "dotfiles.installCommand": "",

  // URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository.
  "dotfiles.repository": "",

  // The path to clone the dotfiles repository to. Defaults to `~/dotfiles`.
  "dotfiles.targetPath": "~/dotfiles",

  // Use `dev.containers.cacheVolume` instead.
  // 
  "remote.containers.cacheVolume": null,

  // Use `dev.containers.copyGitConfig` instead.
  // 
  "remote.containers.copyGitConfig": null,

  // Use `dev.containers.defaultExtensions` instead.
  // 
  "remote.containers.defaultExtensions": null,

  // Use `dev.containers.dockerComposePath` instead.
  // 
  "remote.containers.dockerComposePath": null,

  // Use `dev.containers.dockerPath` instead.
  // 
  "remote.containers.dockerPath": null,

  // Use `dotfiles.installCommand` instead.
  // 
  "remote.containers.dotfiles.installCommand": null,

  // Use `dotfiles.repository` instead.
  // 
  "remote.containers.dotfiles.repository": null,

  // Use `dotfiles.targetPath` instead.
  // Deprecated setting. Use 'dotfiles.targetPath' instead.
  "remote.containers.dotfiles.targetPath": null,

  // Use `dev.containers.executeInWSL` instead.
  // 
  "remote.containers.executeInWSL": null,

  // Use `dev.containers.executeInWSLDistro` instead.
  // 
  "remote.containers.executeInWSLDistro": null,

  // Use `dev.containers.gitCredentialHelperConfigLocation` instead.
  // 
  "remote.containers.gitCredentialHelperConfigLocation": null,

  // Use `dev.containers.logLevel` instead.
  // 
  "remote.containers.logLevel": null,

  // Use `dev.containers.repositoryConfigurationPaths` instead.
  // Deprecated setting. Use 'dev.containers.repositoryConfigurationPaths' instead.
  "remote.containers.repositoryConfigurationPaths": null,

  // Use `dev.containers.workspaceMountConsistency` instead.
  // 
  "remote.containers.workspaceMountConsistency": null

},
{
  // Enables various accessibility features, such as audio cues about what is happening in the session.
  "liveshare.accessibility.accessibilityFeaturesEnabled": "auto",

  // Output device to play audio in accessibility mode.
  "liveshare.accessibility.outputDevice": "Default",

  // Enables sound effects about activity.
  "liveshare.accessibility.soundsEnabled": true,

  // Controls the volume of sound audio in accessibility mode (between 0 and 100).
  "liveshare.accessibility.soundVolume": 100,

  // Controls the rate of speech in accessibility mode.
  "liveshare.accessibility.speechRate": 2,

  // The voice used for speech in accessibility mode.
  "liveshare.accessibility.voice": "en-US-Jenny",

  // Enables spoken announcements about activity.
  "liveshare.accessibility.voiceEnabled": true,

  // Controls the volume of voice audio in accessibility mode (between 0 and 100).
  "liveshare.accessibility.voiceVolume": 100,

  // Allow guests to start and stop debugging sessions.
  "liveshare.allowGuestDebugControl": false,

  // Allow guests to run and terminate workspace tasks.
  "liveshare.allowGuestTaskControl": false,

  // Specifies who to allow session invitations from.
  "liveshare.allowInvites": "contacts",

  // Ensures that the session's host is always followed.
  "liveshare.alwaysFollowHost": false,

  // Controls how to handle join requests from anonymous guests.
  "liveshare.anonymousGuestApproval": "prompt",

  // Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions.
  "liveshare.autoShareServers": true,

  // Controls whether terminals are automatically shared with guests (read-only).
  "liveshare.autoShareTerminals": true,

  // Controls whether to show the CodeLens for starting a collaboration session.
  "liveshare.codeLens": true,

  // Controls whether to allow comments in collaboration sessions
  "liveshare.comments": true,

  // Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed.
  "liveshare.connectionMode": "auto",

  // Enables the Visual Studio Live Share output channel.
  "liveshare.diagnosticLogging": false,

  // Specifies the level of logging output from Visual Studio Live Share Extension
  "liveshare.diagnosticLoggingLevel": "Warning",

  // Enables diagnostic notifications and logs.
  "liveshare.diagnosticMode": false,

  // Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy).
  "liveshare.featureSet": "stable",

  // Specifies how to respond to focus requests from other participants.
  "liveshare.focusBehavior": "accept",

  // Controls whether the host needs to explicitly approve guest requests to join collaboration sessions.
  "liveshare.guestApprovalRequired": false,

  // Increases the guest limit from 5 to 30.
  "liveshare.increasedGuestLimit": true,

  // Controls how the participant will join incoming shared debug sessions.
  "liveshare.joinDebugSessionOption": "Automatic",

  // Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages.
  "liveshare.keepAliveInterval": 20,

  // Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens
  "liveshare.languages.allowGuestCommandControl": false,

  // Specifies the client to launch when clicking on a Live Share URL.
  "liveshare.launcherClient": "web",

  // Controls when to display a participant's name tag instead of just their cursor.
  "liveshare.nameTagVisibility": "Activity",

  // Allow guests to run notebook cells
  "liveshare.notebooks.allowGuestExecuteCells": false,

  // Controls whether to automatically open shared servers in your default browser.
  "liveshare.openSharedServers": true,

  // Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).
  "liveshare.populateGitCoAuthors": "always",

  // Controls whether to publish your presence to other users, and allow in-tool invites for collaboration sessions
  "liveshare.presence": false,

  // Controls whether to publish your current workspace folder to other users
  "liveshare.publishWorkspaceInfo": false,

  // Height of shared terminal window, characters.
  "liveshare.sharedTerminalHeight": 50,

  // Width of shared terminal window, characters.
  "liveshare.sharedTerminalWidth": 120,

  // Automatically share external files opened by the host during a collaboration session.
  "liveshare.shareExternalFiles": true,

  // Show or hide the Live Share status bar items.
  "liveshare.showInStatusBar": "always",

  // Controls visibility of the cursor and highlights for read-only users.
  "liveshare.showReadOnlyUsersInEditor": "whileFollowing",

  // Controls whether to show verbose notifications, such as when a guest joins and leaves a session.
  "liveshare.showVerboseNotifications": true

},
{
  // Whether to show the Debug button in the Editor Title area menu
  "react-native-tools.displayDebuggingCommandsButton": true,

  // Nivel de registro en la extensión
  "react-native-tools.logLevel": "Info",

  // The color theme for Network inspector logs in VS Code DevTools console
  "react-native-tools.networkInspector.consoleLogsColorTheme": "Light",

  // Subcarpeta en la que se encuentra el proyecto de react-native.
  "react-native-tools.projectRoot": "",

  // The command name to be used to execute React Native CLI commands.
  "react-native-tools.reactNativeGlobalCommandName": "",

  // Whether to show tips about extension features
  "react-native-tools.showUserTips": true,

  // Variables de entorno pasadas al programa.
  "react-native.android.env.device": {},

  // Variables de entorno pasadas al programa.
  "react-native.android.env.simulator": {},

  // Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.
  "react-native.android.envFile.device": "",

  // Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.
  "react-native.android.envFile.simulator": "",

  // Argumentos que se van a usar para LogCat (la salida de LogCat aparecerá en un canal de salida). Puede ser una matriz, como [":S", "ReactNative:V", "ReactNativeJS:V"].
  "react-native.android.logCatArguments": [
    "*:S",
    "ReactNative:V",
    "ReactNativeJS:V"
  ],

  // Argumentos de ejecución que se van a pasar al comando "react-native run-android".
  "react-native.android.runArguments.device": [],

  // Argumentos de ejecución que se van a pasar al comando "react-native run-android".
  "react-native.android.runArguments.simulator": [],

  // Specific packages used to prepare the extension for debugging Expo applications
  "react-native.expo.dependencies": {
    "xdl": "59.2.31",
    "@expo/metro-config": "0.3.13",
    "@expo/ngrok": "^4.1.0"
  },

  // Variables de entorno pasadas al programa.
  "react-native.ios.env.device": {},

  // Variables de entorno pasadas al programa.
  "react-native.ios.env.simulator": {},

  // Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.
  "react-native.ios.envFile.device": "",

  // Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.
  "react-native.ios.envFile.simulator": "",

  // Argumentos de ejecución que se van a pasar al comando "react-native run-ios".
  "react-native.ios.runArguments.device": [],

  // Argumentos de ejecución que se van a pasar al comando "react-native run-ios".
  "react-native.ios.runArguments.simulator": [],

  // Puerto del empaquetador de react-native
  "react-native.packager.port": 8081,

  // React Native Packager status representation in the VS Code status bar
  "react-native.packager.status-indicator": "Full"

},
{
  // Name(s) of the connection(s) to auto connect on start.
  "sqltools.autoConnectTo": [],

  // Auto open session file when connecting.
  "sqltools.autoOpenSessionFiles": true,

  // Languages that SQLTools will add CodeLenses to.
  // 
  // You can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers.
  // 
  // More info about codelens, see https://vscode-sqltools.mteixeira.dev/features/codelens
  "sqltools.codelensLanguages": [
    "sql"
  ],

  // Languages with SQL completion enabled.
  // 
  // You can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers.
  "sqltools.completionLanguages": [
    "sql"
  ],

  // Display connections in two groups, 'Connected' and 'Not Connected'.
  "sqltools.connectionExplorer.groupConnected": false,

  // Connections list.
  "sqltools.connections": [],

  // Default mode for results Export command.
  "sqltools.defaultExportType": "prompt",

  // Default mode for results Open command.
  "sqltools.defaultOpenType": "prompt",

  // Dependency Manager settings.
  "sqltools.dependencyManager": {
    "packageManager": "npm",
    "installArgs": [
      "install"
    ],
    "runScriptArgs": [
      "run"
    ],
    "autoAccept": false
  },

  // SQLTools' default chord keybindings begin with `Ctrl/Cmd+E` and therefore mask the default keybinding of VS Code's `Go to File...` command. When this setting is disabled (the default) you can instead invoke that command with the chord `Ctrl/Cmd+E Ctrl/Cmd+E`. Enable this setting if you don't require SQLTools' chord keybindings.
  "sqltools.disableChordKeybindings": false,

  // Disable node runtime detection notifications.
  "sqltools.disableNodeDetectNotifications": false,

  // Disable new release notifications.
  "sqltools.disableReleaseNotifications": false,

  // Flatten groups that have only one child.
  "sqltools.flattenGroupsIfOne": false,

  // 
  "sqltools.format": {},

  // Languages with SQL formatting enabled.
  // 
  // You can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers.
  "sqltools.formatLanguages": [
    "sql"
  ],

  // Highlight the query at the cursor position.
  "sqltools.highlightQuery": true,

  // Number of queries to keep in History.
  "sqltools.historySize": 100,

  // Set environment variables to be passed to language server. For example `ORACLE_HOME`, `PATH`...
  "sqltools.languageServerEnv": {},

  // Enables query parameter checking.
  "sqltools.queryParams.enableReplace": false,

  // RegEx used to identify query parameters.
  "sqltools.queryParams.regex": "\\$[\\d]+|\\$\\[([\\d\\w]+)\\]",

  // Properties that customize the appearance of results tables.
  "sqltools.results.customization": {},

  // Maximum number of records to return in results.
  "sqltools.results.limit": 50,

  // Define which edit group the results tab should appear in. Empty groups are never created. For example, if setting is 4 but only one group currently exists then the first set of results will create a new group 2, the second a group 3 and the third and subsequent sets of results will appear in group 4.
  //  - next: New group if nothing open. Second group if currently active text editor is in first group. Otherwise third group.
  //  - current: Current active group.
  //  - end: The third group.
  //  - 1: First group.
  //  - 2: Second group.
  //  - 3: Third group.
  //  - 4: Fourth group.
  //  - 5: Fifth group.
  //  - 6: Sixth group.
  //  - 7: Seventh group.
  //  - 8: Eighth group.
  //  - 9: Ninth group.
  "sqltools.results.location": "next",

  // How requests reuse results tabs.
  //  - never: Every request creates a new tab.
  //  - connection: There is a single tab for each connection.
  "sqltools.results.reuseTabs": "never",

  // Folder for session files to be saved in.
  "sqltools.sessionFilesFolder": "",

  // Toggle statusbar visibility.
  "sqltools.showStatusbar": true,

  // Sort columns criteria.
  "sqltools.sortColumns": "name",

  // Table columns should be expanded on load?
  "sqltools.tableTreeItemsExpanded": false,

  // Enable node runtime usage.
  "sqltools.useNodeRuntime": false

},
{
  // Controls if plugin is enabled
  "color-highlight.enable": true,

  // An array of language ids which should be highlighted by Color Highlight. "*" to trigger on any language; Prepend language id with "!" to exclude the language (i.e "!typescript", "!javascript")
  "color-highlight.languages": [
    "*"
  ],

  // Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'
  "color-highlight.markerType": "background",

  // Highlight colors on the ruler (scroll bar), true/false
  "color-highlight.markRuler": true,

  // Highlight rgb without functions like rgb() ('255, 255, 255', [255, 255, 255], '255 255 255', etc.)
  "color-highlight.matchRgbWithNoFunction": false,

  // Highlight color words in all files (grey, green, etc.)
  "color-highlight.matchWords": false,

  // An array of language ids which should be highlighted by Color Highlight with the rgbWithNoFunction pattern. "*" to trigger on any language; Prepend language id with "!" to exclude the language (i.e "!typescript", "!javascript")
  "color-highlight.rgbWithNoFunctionLanguages": [
    "*"
  ],

  // Array of absolute paths to search while perform file lookups.
  "color-highlight.sass.includePaths": []

},
{
  // Vertically aligns param types and names with additional spaces.
  "php-docblocker.alignParams": false,

  // Vertically aligns return with above param statements.
  "php-docblocker.alignReturn": false,

  // Default author tag
  "php-docblocker.author": {
    "name": "Name",
    "email": "email@email.com"
  },

  // Specify the default template for classes.
  "php-docblocker.classTemplate": null,

  // Default type to use if a type wasn't able to be detected
  "php-docblocker.defaultType": "[type]",

  // Extra tags you wish to include in every DocBlock
  "php-docblocker.extra": [],

  // Specify the default template for functions.
  "php-docblocker.functionTemplate": null,

  // If there should be a gap between the description and tags
  "php-docblocker.gap": true,

  // Include a description placeholder for @param tags
  "php-docblocker.paramDescription": false,

  // Specify the default template for class variables.
  "php-docblocker.propertyTemplate": null,

  // Fully qualifies any data types used in param and returns by reading the namespaces.
  "php-docblocker.qualifyClassNames": false,

  // Include a description placeholder for @return tags
  "php-docblocker.returnDescription": false,

  // If there should be a gap between params and return
  "php-docblocker.returnGap": false,

  // Should we return void if there is no detectable return type?
  "php-docblocker.returnVoid": true,

  // Whether you want to use int instead of integer and bool instead of boolean.
  "php-docblocker.useShortNames": false,

  // Include a description placeholder for @var tags
  "php-docblocker.varDescription": false

},
{
  // Path to custom docstring template (overrides docstringFormat). Path can be absolute or relative to the project root.
  "autoDocstring.customTemplatePath": "",

  // Which docstring format to use.
  "autoDocstring.docstringFormat": "google",

  // Generate docstring on pressing enter after opening a docstring (use quoteStyle)
  "autoDocstring.generateDocstringOnEnter": true,

  // Guess the type of parameters and return values
  "autoDocstring.guessTypes": true,

  // Include [extended_summary] tag
  "autoDocstring.includeExtendedSummary": false,

  // Include function names at the start of docstrings
  "autoDocstring.includeName": false,

  // Output log information
  "autoDocstring.logLevel": "Info",

  // Style of quote used with generate docstring command
  "autoDocstring.quoteStyle": "\"\"\"",

  // Start docstring on new line
  "autoDocstring.startOnNewLine": false

},
{
  // Disable Go to Definition
  "ng-c-ext.disableGotoDefinition": false,

  // Disable indentation along in-line formatting
  "ng-c-ext.disableInlineIndent": false,

  // Disable format for in-line styles
  "ng-c-ext.disableInlineStylesFormat": false,

  // Disable format for in-line template
  "ng-c-ext.disableInlineTemplateFormat": false,

  // Exclude files and directories to look for according to glob patterns
  "ng-c-ext.ngcignore": [
    "**/node_modules/**"
  ],

  // Disable info message for new components detection in current workspace
  "ng-c-ext.shutupMode": false

},
{
  // Seleccione un paquete de iconos que permita iconos específicos.
  //  - angular: Iconos de Angular.
  //  - angular_ngrx: Iconos de Angular y ngrx.
  //  - react: Iconos de React.
  //  - react_redux: Iconos de React y Redux.
  //  - vue: Iconos de Vue.
  //  - vue_vuex: Iconos de Vue y Vuex.
  //  - nest: Iconos de NestJS.
  //  - none: No hay ningún paquete de iconos activo.
  "material-icon-theme.activeIconPack": "angular",

  // Configurar asociaciones personalizadas de iconos de archivos.
  "material-icon-theme.files.associations": {},

  // Configurar asociaciones personalizadas de iconos de carpetas.
  "material-icon-theme.folders.associations": {},

  // Cambia el color de las carpetas.
  "material-icon-theme.folders.color": "#90a4ae",

  // Seleccione el tipo de iconos de carpeta.
  //  - specific: Seleccione iconos de carpeta específicos.
  //  - classic: Seleccione iconos de carpetas clásicas.
  //  - none: Sin iconos de carpeta.
  "material-icon-theme.folders.theme": "specific",

  // Deshabilitar flechas delante de carpetas.
  "material-icon-theme.hidesExplorerArrows": false,

  // Configurar asociaciones personalizadas de iconos de idioma.
  "material-icon-theme.languages.associations": {},

  // Cambia la opacidad de los iconos.
  "material-icon-theme.opacity": 1,

  // Change the saturation of the icons.
  "material-icon-theme.saturation": 1

},
{
  // Extension is disabled when set to true
  "tsimporter.disabled": false,

  // Specifies wether to use double quotes
  "tsimporter.doubleQuotes": false,

  // If false, no semicolon will be written
  "tsimporter.emitSemicolon": true,

  // Glob for files to exclude from watch and scan, e.g ./out/**. Defaults to nothing
  "tsimporter.filesToExclude": [],

  // Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to [**/*.ts,**/*.tsx]
  "tsimporter.filesToScan": [
    "**/*.ts",
    "**/*.tsx",
    "**/*.vue"
  ],

  // If true, the code completion items will be sorted back to the build in completion items
  "tsimporter.lowImportance": false,

  // Disables the status bar of this extension
  "tsimporter.noStatusBar": false,

  // When true shorter relative imports will be be prefered instead of absolute imports
  "tsimporter.preferRelative": false,

  // File Extensions to remove. default is '.d.ts,.ts,.tsx'
  "tsimporter.removeFileExtensions": ".d.ts,.ts,.tsx",

  // Disables the extension
  "tsimporter.showNotifications": false,

  // Insert spaces between the import braces. ( import {test} from 'test' vs. import { test } from 'test' )
  "tsimporter.spaceBetweenBraces": true,

  // tsconfig name to search for
  "tsimporter.tsconfigName": "tsconfig.json"

},
{
  // Controls the enablement.
  "cssPeek.enable": true,

  // A list of vscode language names where the extension should be used.
  "cssPeek.peekFromLanguages": [
    "html",
    "django-html",
    "laravel-blade",
    "razor",
    "vue",
    "blade",
    "pug",
    "jade",
    "handlebars",
    "php",
    "twig",
    "md",
    "nunjucks",
    "javascript",
    "javascriptreact",
    "erb",
    "typescript",
    "typescriptreact",
    "HTML (Eex)",
    "html-eex",
    "ejs"
  ],

  // A list of file globs that filters out peekable files
  "cssPeek.peekToExclude": [
    "**/node_modules/**",
    "**/bower_components/**"
  ],

  // Enable Peeking from HTML tags in addition to classnames and IDs. React components are ignored, but it's a good idea to disable this feature when using Angular
  "cssPeek.supportTags": true,

  // Traces the communication between VSCode and the language server.
  "cssPeek.trace.server": "off"

},
{
  // The extensions of the CSS files, where you can `go to` and `peek`.
  "CSSNavigation.activeCSSFileExtensions": [
    "css",
    "scss",
    "sass",
    "less"
  ],

  // The extensions of the HTML files, in where you can `go to definition`.
  "CSSNavigation.activeHTMLFileExtensions": [
    "html",
    "ejs",
    "erb",
    "php",
    "hbs",
    "js",
    "ts",
    "jsx",
    "tsx",
    "vue",
    "twig"
  ],

  // When `true` by default, will also search CSS definitions in <style> tag for current document.
  "CSSNavigation.alsoSearchDefinitionsInStyleTag": true,

  // A glob pattern, files match will always be included even they match `excludeGlobPatterns` or listed in `.gitignore` or `.npmignore`, or out of workspace directory. Stronly suggest you specifies the full start path, or absolute path for the pattern, but not start with `**/`.
  "CSSNavigation.alwaysIncludeGlobPatterns": [],

  // When `true` by default, will always include files specified by `@import ...`, `<link rel=stylesheet href=...>` or `<style src=...>`(only for Vue syntax), although they should be excluded aspect to `excludeGlobPatterns` option or `.gitignore` file.
  "CSSNavigation.alwaysIncludeImportedFiles": true,

  // Enable searching CSS selector references in HTML files.
  "CSSNavigation.enableFindAllReferences": true,

  // Enable `go to definition` by clicking `F12` in HTML files.
  "CSSNavigation.enableGoToDefinition": true,

  // Enable auto complete for id and class name in HTML files.
  "CSSNavigation.enableIdAndClassNameCompletion": true,

  // Whether enables log level message, set it to `true` for debugging.
  "CSSNavigation.enableLogLevelMessage": false,

  // Enable searching class and id name across workspace by clicking `Ctrl + T`.
  "CSSNavigation.enableWorkspaceSymbols": true,

  // A glob pattern, defines paths to exclude when searching for CSS definitions.
  "CSSNavigation.excludeGlobPatterns": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/coverage/**"
  ],

  // When `true` by default, custom element definitions in CSS will be ignored, such that it will go to it's defined place directly.
  "CSSNavigation.ignoreCustomElement": true,

  // Specifies it to ignore files and directories list in `.gitignore` or `.npmignore` when looking for css definitions.
  "CSSNavigation.ignoreFilesBy": [
    ".gitignore"
  ],

  // When `true` by default, e.g.: If `the-name.scss and `the-name.css` exist in a same folder, the `the-name.css` will be skipped. If you prefer compiling Scss or Less file to the same name CSS file, this would be very helpful.
  "CSSNavigation.ignoreSameNameCSSFile": true,

  // When `false` by default, only search CSS definition in current workspace folder. If your workspace folder requires css references from another workspace folder in current worksapce, you should set this to `true`.
  "CSSNavigation.searchAcrossWorkspaceFolders": false

},
{
  // Convert stringified booleans into booleans, and back.
  "quicktype.inferBooleanStrings": true,

  // Use date-time types for strings that look like date-times.
  "quicktype.inferDateTimes": true,

  // Infer enums when there aren't many different string values.
  "quicktype.inferEnums": true,

  // Convert stringified integers into integers, and back.
  "quicktype.inferIntegerStrings": true,

  // Infer maps when object keys look like map keys.
  "quicktype.inferMaps": true,

  // Use UUID types for strings that look like UUIDs.
  "quicktype.inferUuids": true,

  // Produce just types, or (de-)serialization code as well?
  "quicktype.justTypes": true

},
{
  // Defines if any imports should be removed at all on an organize imports command.
  "typescriptHero.imports.disableImportRemovalOnOrganize": false,

  // Defines if sorting is disable during organize imports.
  "typescriptHero.imports.disableImportsSorting": false,

  // Defines the groups of the imports ordering. Multiple groups possible, see readme for instructions.
  "typescriptHero.imports.grouping": [
    "Plains",
    "Modules",
    "Workspace"
  ],

  // Defines imports (libraries, so the 'from' part), which are not removed during 'organize imports'.
  "typescriptHero.imports.ignoredFromRemoval": [
    "react"
  ],

  // Defines if there should be a semicolon at the end of a statement.
  "typescriptHero.imports.insertSemicolons": true,

  // Defines if there should be a space inside the curly braces of an import statement.
  "typescriptHero.imports.insertSpaceBeforeAndAfterImportBraces": true,

  // Defined if multi line imports contain the last trailing comma.
  "typescriptHero.imports.multiLineTrailingComma": true,

  // Defines the threshold when an import should be wrapped into a multiline import.
  "typescriptHero.imports.multiLineWrapThreshold": 125,

  // Defines if the imports should be organized on save.
  "typescriptHero.imports.organizeOnSave": false,

  // Defines if the imports are organized by first specifier/alias instead of module path.
  "typescriptHero.imports.organizeSortsByFirstSpecifier": false,

  // Defines if a trailing '/index' should be removed from imports.
  "typescriptHero.imports.removeTrailingIndex": true,

  // Defines if single or double quotes should be used.
  "typescriptHero.imports.stringQuoteStyle": "'",

  // Defines the log output level in the output window. In the log file, it's always info or debug.
  "typescriptHero.verbosity": "warn"

},
{
  // Enable/disable the 'auto build'
  "java.autobuild.enabled": true,

  // The list of clean ups to be run on the current document when it's saved. Clean ups can automatically fix code style or programming mistakes. Click [HERE](command:_java.learnMoreAboutCleanUps) to learn more about what each clean up does.
  "java.cleanup.actionsOnSave": [],

  // Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.
  "java.codeAction.sortMembers.avoidVolatileChanges": true,

  // Generate method comments when generating the methods.
  "java.codeGeneration.generateComments": false,

  // Use 'instanceof' to compare types when generating the hashCode and equals methods.
  "java.codeGeneration.hashCodeEquals.useInstanceof": false,

  // Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.
  "java.codeGeneration.hashCodeEquals.useJava7Objects": false,

  // Specifies the insertion location of the code generated by source actions.
  //  - afterCursor: Insert the generated code after the member where the cursor is located.
  //  - beforeCursor: Insert the generated code before the member where the cursor is located.
  //  - lastMember: Insert the generated code as the last member of the target type.
  "java.codeGeneration.insertionLocation": "afterCursor",

  // The code style for generating the toString method.
  //  - STRING_CONCATENATION: String concatenation
  //  - STRING_BUILDER: StringBuilder/StringBuffer
  //  - STRING_BUILDER_CHAINED: StringBuilder/StringBuffer - chained call
  //  - STRING_FORMAT: String.format/MessageFormat
  "java.codeGeneration.toString.codeStyle": "STRING_CONCATENATION",

  // Limit number of items in arrays/collections/maps to list, if 0 then list all.
  "java.codeGeneration.toString.limitElements": 0,

  // List contents of arrays instead of using native toString().
  "java.codeGeneration.toString.listArrayContents": true,

  // Skip null values when generating the toString method.
  "java.codeGeneration.toString.skipNullValues": false,

  // The template for generating the toString method.
  "java.codeGeneration.toString.template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",

  // Use blocks in 'if' statements when generating the methods.
  "java.codeGeneration.useBlocks": false,

  // Specify how to enable the annotation-based null analysis.
  "java.compile.nullAnalysis.mode": "interactive",

  // Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`
  "java.compile.nullAnalysis.nonnull": [
    "javax.annotation.Nonnull",
    "org.eclipse.jdt.annotation.NonNull",
    "org.springframework.lang.NonNull"
  ],

  // Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`
  "java.compile.nullAnalysis.nullable": [
    "javax.annotation.Nullable",
    "org.eclipse.jdt.annotation.Nullable",
    "org.springframework.lang.Nullable"
  ],

  // Enable/disable code completion support
  "java.completion.enabled": true,

  // Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.
  "java.completion.favoriteStaticMembers": [
    "org.junit.Assert.*",
    "org.junit.Assume.*",
    "org.junit.jupiter.api.Assertions.*",
    "org.junit.jupiter.api.Assumptions.*",
    "org.junit.jupiter.api.DynamicContainer.*",
    "org.junit.jupiter.api.DynamicTest.*",
    "org.mockito.Mockito.*",
    "org.mockito.ArgumentMatchers.*",
    "org.mockito.Answers.*"
  ],

  // Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.
  "java.completion.filteredTypes": [
    "java.awt.*",
    "com.sun.*",
    "sun.*",
    "jdk.*",
    "org.graalvm.*",
    "io.micrometer.shaded.*"
  ],

  // When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.
  "java.completion.guessMethodArguments": true,

  // Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'
  "java.completion.importOrder": [
    "#",
    "java",
    "javax",
    "org",
    "com",
    ""
  ],

  // Specify whether to match case for code completion.
  //  - auto: Only match case for the first letter when using Visual Studio Code - Insiders.
  //  - firstLetter: Match case for the first letter when doing completion.
  //  - off: Do not match case when doing completion.
  "java.completion.matchCase": "auto",

  // Maximum number of completion results (not including snippets).
  // `0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.
  "java.completion.maxResults": 0,

  // Enable/disable postfix completion support. `editor.snippetSuggestions` can be used to customize how postfix snippets are sorted.
  "java.completion.postfix.enabled": true,

  // Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.
  // Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.
  "java.configuration.checkProjectSettingsExclusions": false,

  // Specifies default mojo execution action when no associated metadata can be detected.
  "java.configuration.maven.defaultMojoExecutionAction": "ignore",

  // Path to Maven's global settings.xml
  "java.configuration.maven.globalSettings": null,

  // Specifies severity if the plugin execution is not covered by Maven build lifecycle.
  "java.configuration.maven.notCoveredPluginExecutionSeverity": "warning",

  // Path to Maven's user settings.xml
  "java.configuration.maven.userSettings": null,

  // Map Java Execution Environments to local JDKs.
  "java.configuration.runtimes": [],

  // Specifies how modifications on build files update the Java classpath/configuration
  "java.configuration.updateBuildConfiguration": "interactive",

  // The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.
  "java.configuration.workspaceCacheLimit": 90,

  // Preferred content provider (a 3rd party decompiler id, usually)
  "java.contentProvider.preferred": null,

  // Enable/disable download of Maven source artifacts for Eclipse projects.
  "java.eclipse.downloadSources": false,

  // Specifies the severity of the message when the classpath is incomplete for a Java file
  "java.errors.incompleteClasspath.severity": "warning",

  // Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.
  "java.foldingRange.enabled": true,

  // Includes the comments during code formatting.
  "java.format.comments.enabled": true,

  // Enable/disable default Java formatter
  "java.format.enabled": true,

  // Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`
  "java.format.onType.enabled": true,

  // Optional formatter profile name from the Eclipse formatter settings.
  "java.format.settings.profile": null,

  // Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).
  "java.format.settings.url": null,

  // This setting is deprecated, please use 'java.jdt.ls.java.home' instead.
  // Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.
  // On Windows, backslashes must be escaped, i.e.
  // "java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
  "java.home": null,

  // Enable/disable the implementations code lens.
  "java.implementationsCodeLens.enabled": false,

  // Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.
  "java.import.exclusions": [
    "**/node_modules/**",
    "**/.metadata/**",
    "**/archetype-resources/**",
    "**/META-INF/maven/**"
  ],

  // Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.
  "java.import.generatesMetadataFilesAtProjectRoot": false,

  // Enable/disable the annotation processing on Gradle projects and delegate Annotation Processing to JDT APT. Only works for Gradle 5.2 or higher.
  "java.import.gradle.annotationProcessing.enabled": true,

  // Arguments to pass to Gradle.
  "java.import.gradle.arguments": null,

  // Enable/disable the Gradle importer.
  "java.import.gradle.enabled": true,

  // Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.
  "java.import.gradle.home": null,

  // The location to the JVM used to run the Gradle daemon.
  "java.import.gradle.java.home": null,

  // JVM arguments to pass to Gradle.
  "java.import.gradle.jvmArguments": null,

  // Enable/disable the Gradle offline mode.
  "java.import.gradle.offline.enabled": false,

  // Setting for GRADLE_USER_HOME.
  "java.import.gradle.user.home": null,

  // Use Gradle from the specific version if the Gradle wrapper is missing or disabled.
  "java.import.gradle.version": null,

  // Use Gradle from the 'gradle-wrapper.properties' file.
  "java.import.gradle.wrapper.enabled": true,

  // Enable/disable test classpath segregation. When enabled, this permits the usage of test resources within a Maven project as dependencies within the compile scope of other projects.
  "java.import.maven.disableTestClasspathFlag": false,

  // Enable/disable the Maven importer.
  "java.import.maven.enabled": true,

  // Enable/disable the Maven offline mode.
  "java.import.maven.offline.enabled": false,

  // Defines allowed/disallowed SHA-256 checksums of Gradle Wrappers
  "java.imports.gradle.wrapper.checksums": [],

  // Enable/disable inlay hints for parameter names:
  // ```java
  // 
  // Integer.valueOf(/* s: */ '123', /* radix: */ 10)
  //  
  // ```
  //  `java.inlayHints.parameterNames.exclusions` can be used to disable the inlay hints for methods.
  //  - none: Disable parameter name hints
  //  - literals: Enable parameter name hints only for literal arguments
  //  - all: Enable parameter name hints for literal and non-literal arguments
  "java.inlayHints.parameterNames.enabled": "literals",

  // The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:
  //  - `java.lang.Math.*` - All the methods from java.lang.Math.
  //  - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.
  //  - `*.println(*)` - Methods named as 'println'.
  //  - `(from, to)` - Methods with two parameters named as 'from' and 'to'.
  //  - `(arg*)` - Methods with one parameter whose name starts with 'arg'.
  "java.inlayHints.parameterNames.exclusions": [],

  // [Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.
  // 
  // **Note:** Only works for Android Gradle Plugin `3.2.0` or higher.
  "java.jdt.ls.androidSupport.enabled": "auto",

  // Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. 
  // 
  // On Windows, backslashes must be escaped, i.e.
  // "java.jdt.ls.java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
  "java.jdt.ls.java.home": null,

  // Whether to load lombok processors from project classpath
  "java.jdt.ls.lombokSupport.enabled": true,

  // Specify whether to automatically add Protobuf output source directories to the classpath.
  // 
  // **Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.
  "java.jdt.ls.protobufSupport.enabled": true,

  // Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector
  "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable",

  // Enable/disable download of Maven source artifacts as part of importing Maven projects.
  "java.maven.downloadSources": false,

  // Force update of Snapshots/Releases.
  "java.maven.updateSnapshots": false,

  // Max simultaneous project builds
  "java.maxConcurrentBuilds": 1,

  // [Experimental] Enable/disable progress reports from background processes on the server.
  "java.progressReports.enabled": true,

  // Project encoding settings
  //  - ignore: Ignore project encoding settings
  //  - warning: Show warning if a project has no explicit encoding set
  //  - setDefault: Set the default workspace encoding settings
  "java.project.encoding": "ignore",

  // Enable/disable the server-mode switch information, when Java projects import is skipped on startup.
  "java.project.importHint": true,

  // Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.
  "java.project.importOnFirstTimeStartup": "automatic",

  // A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
  "java.project.outputPath": "",

  // Configure glob patterns for referencing local libraries to a Java project.
  "java.project.referencedLibraries": [
    "lib/**/*.jar"
  ],

  // Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, ["node_modules","\.git"] will exclude all files and folders named 'node_modules' or '.git'. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to ["node_modules","\.git"].
  "java.project.resourceFilters": [
    "node_modules",
    "\\.git"
  ],

  // Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
  "java.project.sourcePaths": [],

  // Show quickfixes at the problem or line level.
  "java.quickfix.showAt": "line",

  // Show the recommended Dependency Analytics extension.
  "java.recommendations.dependency.analytics.show": true,

  // Specify whether to replace all the occurrences of the subtype with the new extracted interface.
  "java.refactoring.extract.interface.replace": true,

  // Include getter, setter and builder/constructor when finding references.
  "java.references.includeAccessors": true,

  // Include the decompiled sources when finding references.
  "java.references.includeDecompiledSources": true,

  // Enable/disable the references code lens.
  "java.referencesCodeLens.enabled": false,

  // Enable/disable auto organize imports on save action
  "java.saveActions.organizeImports": false,

  // Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.
  "java.selectionRange.enabled": true,

  // The launch mode for the Java extension
  //  - Standard: Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.
  //  - LightWeight: Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.
  //  - Hybrid: Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready.
  "java.server.launchMode": "Hybrid",

  // Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)
  "java.settings.url": null,

  // [Experimental] Specify whether to share indexes between different workspaces. When set to `auto`, shared indexes will be enabled in Visual Studio Code - Insiders.
  "java.sharedIndexes.enabled": "auto",

  // Specifies a common index location for all workspaces. See default values as follows:
  //  
  // Windows: First use `"$APPDATA\\.jdt\\index"`, or `"~\\.jdt\\index"` if it does not exist
  //  
  // macOS: `"~/Library/Caches/.jdt/index"`
  //  
  // Linux: First use `"$XDG_CACHE_HOME/.jdt/index"`, or `"~/.cache/.jdt/index"` if it does not exist
  "java.sharedIndexes.location": "",

  // Automatically show build status on startup.
  "java.showBuildStatusOnStart.enabled": "notification",

  // Enable/disable to show the description in signature help.
  "java.signatureHelp.description.enabled": false,

  // Enable/disable the signature help.
  "java.signatureHelp.enabled": true,

  // Specifies the number of imports added before a star-import declaration is used.
  "java.sources.organizeImports.starThreshold": 99,

  // Specifies the number of static imports added before a star-import declaration is used.
  "java.sources.organizeImports.staticStarThreshold": 99,

  // Include method declarations from source files in symbol search.
  "java.symbols.includeSourceMethodDeclarations": false,

  // Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
  "java.templates.fileHeader": [],

  // Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
  "java.templates.typeComment": [],

  // Traces the communication between VS Code and the Java language server.
  "java.trace.server": "off",

  // Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.
  "java.typeHierarchy.lazyLoad": false

},
{
  // Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.
  // 
  //  Examples : 
  // chrome --incognito --headless --remote-debugging-port=9222 
  //  C:\\Program Files\\Firefox Developer Edition\\firefox.exe --private-window
  "liveServer.settings.AdvanceCustomBrowserCmdLine": null,

  // Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.
  //  NOTE: You have to install 'Debugger for Chrome' 
  // If the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. 
  // 
  //  CAUTION: If it is true, 'Launch Chrome against localhost' may not work.
  "liveServer.settings.ChromeDebuggingAttachment": false,

  // Specify custom browser settings for Live Server. 
  // By Default it will open your default favorite browser.
  "liveServer.settings.CustomBrowser": null,

  // To disable information pop up messages.
  "liveServer.settings.donotShowInfoMsg": false,

  // To turn off prompt warning message if body or head or other supporting tag is missing in your HTML.
  "liveServer.settings.donotVerifyTags": false,

  // When set, serve this file (server root relative) for every 404 (useful for single-page applications)
  "liveServer.settings.file": "",

  // By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`
  "liveServer.settings.fullReload": false,

  // To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1
  "liveServer.settings.host": "127.0.0.1",

  // Setup https configuration
  "liveServer.settings.https": {
    "enable": false,
    "cert": "",
    "key": "",
    "passphrase": ""
  },

  // To ignore specific file changes
  "liveServer.settings.ignoreFiles": [
    ".vscode/**",
    "**/*.scss",
    "**/*.sass",
    "**/*.ts"
  ],

  // Mount a directory to a route. Such as [['/components', './node_modules']]
  "liveServer.settings.mount": [],

  // This the entry point of server when you're in multiroot workspace
  "liveServer.settings.multiRootWorkspaceName": null,

  // If it is true live server will start without browser opened.
  "liveServer.settings.NoBrowser": false,

  // Set Custom Port Number of Live Server. Set 0 if you want random port.
  "liveServer.settings.port": 5500,

  // To Setup Proxy
  "liveServer.settings.proxy": {
    "enable": false,
    "baseUri": "/",
    "proxyUri": "http://127.0.0.1:80"
  },

  // Set Custom root of Live Server. 
  // To change root the the server to sub folder of workspace, use '/' and relative path from workspace. 
  // Example: /subfolder1/subfolder2
  "liveServer.settings.root": "/",

  // Change this to false if you don't want the button to show in the statusbar
  "liveServer.settings.showOnStatusbar": true,

  // Use local IP as host
  "liveServer.settings.useLocalIp": false,

  // You have to install a browser extension. That will be works for your dynamic pages (like PHP).
  "liveServer.settings.useWebExt": false,

  // Delay before live reloading. Value in milliseconds. Default is 100
  "liveServer.settings.wait": 100

},
{
  // Generates a new basic app definition in the "projects" subfolder of the workspace.
  "angular-cli.application.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#application-command
  "angular-cli.application.options": "",

  // Generates an app shell for running a server-side version of an app.
  "angular-cli.appShell.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#appShell-command
  "angular-cli.appShell.options": "",

  // Creates a new generic class definition in the given or default project.
  "angular-cli.class.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#class-command
  "angular-cli.class.options": "",

  // Creates a new generic component definition in the given or default project.
  "angular-cli.component.enabled": true,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#component-command
  "angular-cli.component.options": "",

  // Creates a new generic directive definition in the given or default project.
  "angular-cli.directive.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#directive-command
  "angular-cli.directive.options": "",

  // Generates a new, generic enum definition for the given or default project.
  "angular-cli.enum.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#enum-command
  "angular-cli.enum.options": "",

  // Generates a new, generic route guard definition in the given or default project.
  "angular-cli.guard.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#guard-command
  "angular-cli.guard.options": "",

  // Creates a new, generic interceptor definition in the given or default project.
  "angular-cli.interceptor.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#interceptor-command
  "angular-cli.interceptor.options": "",

  // Creates a new generic interface definition in the given or default project.
  "angular-cli.interface.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#interface-command
  "angular-cli.interface.options": "",

  // Creates a new generic library project in the current workspace.
  "angular-cli.library.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#library-command
  "angular-cli.library.options": "",

  // Creates a new generic NgModule definition in the given or default project.
  "angular-cli.module.enabled": true,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#module-command
  "angular-cli.module.options": "",

  // Creates a new generic pipe definition in the given or default project.
  "angular-cli.pipe.enabled": true,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#pipe-command
  "angular-cli.pipe.options": "",

  // Creates a new, generic service definition in the given or default project.
  "angular-cli.service.enabled": true,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#service-command
  "angular-cli.service.options": "",

  // Pass this schematic to the "run" command to create a service worker
  "angular-cli.serviceWorker.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#serviceWorker-command
  "angular-cli.serviceWorker.options": "",

  // Creates a new generic web worker definition in the given or default project.
  "angular-cli.webWorker.enabled": false,

  // Add additional options to the command. For all options see https://angular.io/cli/generate#webWorker-command
  "angular-cli.webWorker.options": ""

},
{
  // Defines scopes for extension to work with.
  // multi-root: all selectors found within all root folders will be visible to all stylesheets.
  // workspace: all selectors found within particular workspace folder/project will be visible to stylesheets within that workspace folder.
  // linked files: selectors will be provided only for linked stylesheets.
  // Default: "multi-root"
  "html-to-css-autocompletion.autocompletionFilesScope": "multi-root",

  // Set custom glob pattern to exclude search on pattern matches. E.g.: **/{folderName1,folderName2,...}/**
  "html-to-css-autocompletion.excludePattern": "",

  // Defines folder names to be excluded from being searched. Default: ["node_modules"]
  "html-to-css-autocompletion.folderNamesToBeExcluded": [
    "node_modules"
  ],

  // Defines only specific folder names to be searched. Default: [""]
  "html-to-css-autocompletion.folderNamesToBeIncluded": [
    ""
  ],

  // Defines file types to be searched for classes/ids.
  // Defaults: ["html", "php"]
  "html-to-css-autocompletion.getSelectorsFromFileTypes": [
    "html",
    "php"
  ],

  // Set custom glob pattern to get classes/ids from matched files. E.g.: **/{folderName1,folderName2,...}/*.{fileType1,fileType2,...}
  "html-to-css-autocompletion.includePattern": "",

  // Set true to populate Intellisense with selectors only when '#' or '.' characters are typed. Default: false
  "html-to-css-autocompletion.triggerCharacters": false

},
{
  // Whether or not auto prefix css files
  "css-auto-prefix.enabled": true,

  // The list of attributes to add support for, and what prefixes each one should receive.
  "css-auto-prefix.prefixes": {
    "transform": [
      "webkit",
      "moz",
      "ms",
      "o"
    ],
    "transition": [
      "webkit",
      "moz",
      "ms",
      "o"
    ],
    "border-radius": [
      "webkit",
      "moz",
      "ms",
      "o"
    ],
    "animation": [
      "webkit"
    ],
    "box-reflect": [
      "webkit"
    ],
    "filter": [
      "webkit"
    ],
    "font-feature-settings": [
      "webkit",
      "moz"
    ],
    "backface-visibility": [
      "webkit"
    ],
    "box-decoration-break": [
      "webkit"
    ],
    "hyphens": [
      "webkit",
      "moz",
      "ms"
    ],
    "marquee-direction": [
      "webkit"
    ],
    "marquee-play-count": [
      "webkit"
    ],
    "marquee-speed": [
      "webkit"
    ],
    "marquee-style": [
      "webkit"
    ],
    "text-combine-upright": [
      "webkit",
      "moz",
      "ms"
    ],
    "text-decoration-color": [
      "moz"
    ],
    "text-decoration-line": [
      "moz"
    ],
    "text-decoration-style": [
      "moz"
    ],
    "text-orientation": [
      "webkit"
    ],
    "writing-mode": [
      "webkit",
      "ms"
    ]
  }

},
{
  // Adds found items to intellisense and automatically imports then
  "autoimport.autoComplete": true,

  // Specifies wether to use double quotes
  "autoimport.doubleQuotes": false,

  // Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}
  "autoimport.filesToScan": "**/*.{ts,tsx}",

  // Specifies wether to show notifications from Auto Import
  "autoimport.showNotifications": false,

  // Specifies wether to use spaces between first and last brace
  "autoimport.spaceBetweenBraces": true,

  // Use ; at the end of a line e.g Import * from ./app or Import * from ./app; - Default True
  "autoimport.useSemiColon": true

},
{
  // Glob of files to scan and watch. Defaults to [**/*.ts,**/*.tsx]
  "movets.filesToScan": [
    "**/*.ts",
    "**/*.tsx"
  ],

  // Make edits in vscode instead of saving the changes to disk.
  "movets.openEditors": false,

  // Create relative paths relative to the tsconfig.json
  "movets.relativeToTsconfig": false,

  // Removes index filename from imports
  "movets.removeIndexSuffix": true,

  // Skip the warning when using the move typescript command
  "movets.skipWarning": false

},
{
  // debounce milliseconds before rendering tabnine suggestion
  "tabnine.debounceMilliseconds": 0,

  // Disable Tabnine when the file path contains a match of any of the provided regexes. For example, add "[.]js$" to disable Tabnine in JavaScript files.
  "tabnine.disableFileRegex": [],

  // Disable Tabnine when the current line contains a match of any of the provided regexes. For example, add "require" to disable Tabnine when the current line contains the word 'require'.
  "tabnine.disableLineRegex": [],

  // Experimental: Enable modules auto-import following applying Tabnine suggestions
  "tabnine.experimentalAutoImports": null,

  // Tabnine's log file (Visual Studio Code must be restarted for this setting to take effect)
  "tabnine.logFilePath": "",

  // Tabnine's log level (Visual Studio Code must be restarted for this setting to take effect)
  "tabnine.logLevel": "",

  // Receive Tabnine VSCode extention beta updates
  "tabnine.receiveBetaChannelUpdates": false,

  // Use the proxy support for Tabnine (Visual Studio Code must be restarted for this setting to take effect)
  "tabnine.useProxySupport": true

},
{
  // Git Checkout
  "scm-buttons.showGitCheckout": false,

  // Git Clean All
  "scm-buttons.showGitCleanAll": false,

  // Git Commit All
  "scm-buttons.showGitCommitAll": false,

  // Git Commit All (Amend)
  "scm-buttons.showGitCommitAllAmend": false,

  // Git Commit All (Signed Off)
  "scm-buttons.showGitCommitAllSigned": false,

  // Git Commit Staged
  "scm-buttons.showGitCommitStaged": false,

  // Git Commit Staged (Amend)
  "scm-buttons.showGitCommitStagedAmend": false,

  // Git Commit Staged (Signed Off)
  "scm-buttons.showGitCommitStagedSigned": false,

  // Git Publish Branch...
  "scm-buttons.showGitPublish": false,

  // Git Pull
  "scm-buttons.showGitPull": true,

  // Git Pull From...
  "scm-buttons.showGitPullFrom": false,

  // Git Pull (Rebase)
  "scm-buttons.showGitPullRebase": false,

  // Git Push
  "scm-buttons.showGitPush": true,

  // Git Push To...
  "scm-buttons.showGitPushTo": false,

  // Git Show Output
  "scm-buttons.showGitShowOutput": false,

  // Git Stage All
  "scm-buttons.showGitStageAll": false,

  // Git Stash
  "scm-buttons.showGitStash": false,

  // Git Apply Stash...
  "scm-buttons.showGitStashApply": false,

  // Git Apply Latest Stash
  "scm-buttons.showGitStashApplyLatest": false,

  // Git Drop Stash...
  "scm-buttons.showGitStashDrop": false,

  // Git Stash (Include Untacked)
  "scm-buttons.showGitStashIncludeUntacked": false,

  // Git Pop Stash...
  "scm-buttons.showGitStashPop": false,

  // Git Pop Latest Stash
  "scm-buttons.showGitStashPopLatest": false,

  // Git Undo Commit
  "scm-buttons.showGitUndoCommit": false,

  // Git Unstage All
  "scm-buttons.showGitUnstageAll": false

},
{
  // The formatting settings the extension should toggle. Affects all formatting events by default.
  "formattingToggle.affects": [
    "editor.formatOnPaste",
    "editor.formatOnSave",
    "editor.formatOnType"
  ]

},
{
  // The default cursol tool for preview.
  "pdf-preview.default.cursor": "select",

  // The default zoom level for preview. Allowed values are `auto`, `page-actual`, `page-fit`, `page-width`, and 1-based scale values. (`1.0` means 100%)
  "pdf-preview.default.scale": "auto",

  // The default scroll mode for preview.
  "pdf-preview.default.scrollMode": "vertical",

  // Show the sidebar on load. The default visiblity of sidebar for preview.
  "pdf-preview.default.sidebar": false,

  // The default spread mode for preview.
  "pdf-preview.default.spreadMode": "none"

},
{
  // Nivel de registro para la consola
  "intellicodeApiExamples.loggingLevel": "INFO",

  // Habilitar ejemplos de uso de la API para archivos de Python
  "intellicodeApiExamples.python.enabled": true,

  // Habilitar ejemplos de uso de la API para archivos de Typescript/Javascript
  "intellicodeApiExamples.typescript.enabled": true

},
{
  // 
  "vsintellicode.features.python.deepLearning": "default",

  // Habilitar las finalizaciones de Visual Studio IntelliCode para Java
  "vsintellicode.java.completionsEnabled": true,

  // Especifica la ruta de acceso a la carpeta donde se almacenan los archivos de modelo descargados. Si no se especifica, el valor predeterminado es el directorio de instalación de la extensión.
  "vsintellicode.modelDownloadPath": null,

  // Controla si Visual Studio IntelliCode modificará la configuración de "editor.suggestSelection" cuando está establecida en un valor ("recentlyUsed") que hace que las sugerencias de finalización de IntelliCode no sean visibles.
  //  - enabled: Permite que IntelliCode modifique la configuración de editor.suggestSelection en su nombre.
  //  - disabled: Ha decidido explícitamente no permitir que IntelliCode controle esta configuración.
  //  - automaticallyOverrodeDefaultValue: (NO ESTABLECER MANUALMENTE) IntelliCode establecerá esta opción para registrar que la configuración se ha modificado automáticamente para invalidar un valor predeterminado.
  //  - choseToUpdateConfiguration: (NO ESTABLECER MANUALMENTE) IntelliCode establecerá esta opción para registrar que ha elegido dejar que IntelliCode cambie la configuración de un valor que se estableció explícitamente.
  "vsintellicode.modify.editor.suggestSelection": "enabled",

  // Habilitar las finalizaciones de Visual Studio IntelliCode para Python
  "vsintellicode.python.completionsEnabled": true,

  // Habilitar la finalización de código de Visual Studio IntelliCode para MSSQL
  "vsintellicode.sql.completionsEnabled": true,

  // Habilitar las finalizaciones de Visual Studio IntelliCode para TypeScript y JavaScript
  "vsintellicode.typescript.completionsEnabled": true

},
{
  // Open a preview to the side automatically
  "svg.preview.autoOpen": false,

  // Show a bounding box around the preview image
  "svg.preview.boundingBox": false,

  // Show transparency grid
  "svg.preview.transparencyGrid": false

},
{
  // Allow to run tasks in parallel, each running will create a new terminal. This configuration will override `gradle.reuseTerminals` and always create new task terminals when running or debugging a task.
  "gradle.allowParallelRun": false,

  // Controls whether Gradle tasks should be automatically detected
  "gradle.autoDetect": "on",

  // Show extra debug information in the output panel
  "gradle.debug": false,

  // Disable the warning confirm messages when performing batch actions
  "gradle.disableConfirmations": false,

  // Focus the task in the explorer when running a task
  "gradle.focusTaskInExplorer": true,

  // This setting will be removed in the future since the extension can automatically get debug tasks, for clean options, please see `gradle.javaDebug.cleanOutput`.
  // Java debug options
  "gradle.javaDebug": {
    "tasks": [
      "run",
      "runBoot",
      "test",
      "intTest",
      "integration"
    ]
  },

  // Clean the task output cache before debugging
  "gradle.javaDebug.cleanOutput": true,

  // Discover Gradle projects in nested sub-directories
  "gradle.nestedProjects": false,

  // Default method of opening newly created project.
  "gradle.projectOpenBehaviour": "Interactive",

  // Reuse task terminals behaviour, will be overridden to `off` if `gradle.allowParallelRun` is true.
  //  - task: Use a dedicated terminal for a specific task. The terminal is not shared with other tasks.
  //  - off: Create a new terminal when a task is executed.
  //  - all: Share the terminal with other tasks.
  "gradle.reuseTerminals": "task",

  // Show stopped daemons in the Gradle Daemons view
  "gradle.showStoppedDaemons": false

},
{
  // Nivel mínimo de registros de depuración que se envían a VS Code.
  "java.debug.logLevel": "warn",

  // La consola establecida para lanzar el programa Java. Si quieres personalizar la consola para una sesión de depuración específica, por favor modifica la configuración de la 'console' en launch.json.
  //  - internalConsole: Consola de Depuración de VS Code (flujo de entrada no soportado).
  //  - integratedTerminal: Terminal integrado de VS Code.
  //  - externalTerminal: Terminal externo que puede ser configurado en la configuración del usuario.
  "java.debug.settings.console": "integratedTerminal",

  // Habilitar proveedores de CodeLens para la ejecución y depuración sobre los métodos principales.
  "java.debug.settings.enableRunDebugCodeLens": true,

  // Omitir las clases especificadas al parar por una excepción. Puedes usar las variables incorporadas como '$JDK' y '$Libraries' para omitir un grupo de clases, o añadir una expresión específica de nombre de clase, por ejemplo, java.*, *.Pepe
  "java.debug.settings.exceptionBreakpoint.skipClasses": [],

  // Forzar la compilación del área de trabajo antes de lanzar el programa Java.
  "java.debug.settings.forceBuildBeforeLaunch": true,

  // Recargar las clases de Java modificadas durante la depuración. Asegúrate de que 'java.autobuild.enabled' no esté desactivado.
  "java.debug.settings.hotCodeReplace": "manual",

  // Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.
  "java.debug.settings.jdwp.async": "auto",

  // El máximo número de variables o campos que pueden ser solicitados en una solicitud de JDWP. Cuanto más alto sea el valor, menos frecuentemente se solicitará la depuración al expandir la vista de la variable. Además, un número grande puede causar un límite de tiempo de espera de la solicitud JDWP.
  "java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest": 100,

  // El límite de tiempo (ms) de la solicitud de JDWP cuando el depurador se comunica con el JVM objetivo.
  "java.debug.settings.jdwp.requestTimeout": 3000,

  // La longitud máxima de los strings mostrados en la vista "Variables" o "Consola de Depuración", los strings más largos que esta longitud serán recortados, si es 0 no se realiza recorte.
  "java.debug.settings.maxStringLength": 0,

  // La precisión en el formato de números reales en la vista "Variables" o "Consola de Depuración".
  "java.debug.settings.numericPrecision": 0,

  // Forzar continuar cuando falla la compilación.
  "java.debug.settings.onBuildFailureProceed": false,

  // Mostrar los números en formato hexadecimal en la vista "Variables".
  "java.debug.settings.showHex": false,

  // Mostrar la estructura lógica de las clases Collection y Map en la vista de "Variables".
  "java.debug.settings.showLogicalStructure": true,

  // Mostrar los nombres de las clases totalmente cualificados en la vista de "Variables".
  "java.debug.settings.showQualifiedNames": false,

  // Muestra las variables estáticas en la vista "Variables".
  "java.debug.settings.showStaticVariables": false,

  // Mostrar el valor 'toString()' en la vista "Variables" para todas las clases que sobrescriban el método 'toString'.
  "java.debug.settings.showToString": true,

  // Omitir las clases especificadas al avanzar pasos. Puedes usar las variables incorporadas como '$JDK' y '$Libraries' para omitir un grupo de clases, o añadir una expresión específica de nombre de clase, por ejemplo, java.*, *.Pepe
  "java.debug.settings.stepping.skipClasses": [],

  // Omitir los métodos constructores al avanzar pasos.
  "java.debug.settings.stepping.skipConstructors": false,

  // Omitir los métodos de inicialización static al avanzar pasos.
  "java.debug.settings.stepping.skipStaticInitializers": false,

  // Omitir los métodos sintéticos al avanzar pasos.
  "java.debug.settings.stepping.skipSynthetics": false,

  // Los argumentos por defecto de la VM para lanzar el programa Java. Por ejemplo, usa '-Xmx1G -ea' para aumentar el tamaño de la pila a 1GB y habilitar los asertos. Si quieres personalizar los argumentos de la máquina virtual para una sesión de depuración específica, modifica la configuración de 'vmArgs' en launch.json.
  "java.debug.settings.vmArgs": "",

  // Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.
  "java.silentNotification": false

},
{
  // Synchronize Java Projects explorer with changes
  "java.dependency.autoRefresh": true,

  // Package presentation mode: flat or hierarchical
  "java.dependency.packagePresentation": "flat",

  // The delay time (ms) the auto refresh is invoked when changes are detected
  "java.dependency.refreshDelay": 2000,

  // Show the members in the explorer
  "java.dependency.showMembers": false,

  // Synchronize Java Projects explorer selection with folder explorer
  "java.dependency.syncWithFolderExplorer": true,

  // The output path of the exported jar. Leave it empty if you want to manually pick the output location.
  "java.project.exportJar.targetPath": "${workspaceFolder}/${workspaceFolderBasename}.jar"

},
{
  // Whether to send back detailed information from error logs for diagnostic purpose.
  "java.help.collectErrorLog": false,

  // Sets the default view which is presented during the first use.
  //  - auto: Automatically pick the first experience view
  //  - overview: Present the Java Overview page
  //  - gettingStarted: Present the Java Beginner Tips page
  //  - welcome: Present the Java Help Center page
  //  - none: Do not show any view
  "java.help.firstView": "auto",

  // Show release notes of Extension Pack for Java on startup.
  "java.help.showReleaseNotes": true

},
{
  // Specify the configurations for running the tests.
  "java.test.config": {},

  // Specify the name of the default test configuration.
  "java.test.defaultConfig": ""

},
{
  // Specify whether to show diagnostics for conflict dependencies.
  "maven.dependency.enableConflictDiagnostics": "true",

  // Specifies file path pattern of folders to exclude while searching for Maven projects.
  "maven.excludedFolders": [
    "**/.*",
    "**/node_modules",
    "**/target",
    "**/bin",
    "**/archetype-resources"
  ],

  // Specifies default options for all mvn commands.
  "maven.executable.options": "",

  // Specifies absolute path of your 'mvn' executable. When this value is empty, it tries using 'mvn' or 'mvnw' according to the value of 'maven.executable.preferMavenWrapper'.
  "maven.executable.path": "",

  // Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.
  "maven.executable.preferMavenWrapper": "true",

  // Format of project node name shown in Maven explorer.
  "maven.explorer.projectName": "${project.name}",

  // Specifies whether to update effective-pom automatically whenever changes detected.
  "maven.pomfile.autoUpdateEffectivePOM": false,

  // Specifies the glob pattern used to look for pom.xml files.
  "maven.pomfile.globPattern": "**/pom.xml",

  // Specifies whether to prefetch effective pom on startup.
  "maven.pomfile.prefetchEffectivePom": false,

  // Default method of opening newly created project.
  "maven.projectOpenBehavior": "Interactive",

  // Specifies the absolute path of your maven configuration file, the default value is ~/.m2/settings.xml
  "maven.settingsFile": null,

  // If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.
  "maven.showInExplorerContextMenu": "true",

  // Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.
  "maven.terminal.customEnv": [],

  // Specify pre-defined favorite commands to execute.
  "maven.terminal.favorites": [],

  // If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.
  "maven.terminal.useJavaHome": false,

  // Specifies the way of viewing Maven projects.
  "maven.view": "flat"

},
{
  // The path to a PHP executable.
  "php.debug.executablePath": null,

  // A unique key that allows the proxy to match requests to your editor. Only used when proxy configuration includes replacement.
  "php.debug.ideKey": "vsc"

},
{
  // Open a specific browser instead of the default one. `string[]`
  "fiveServer.browser": [],

  // Highlights the html tag in the browser. `boolean`
  "fiveServer.highlight": false,

  // Set the server host. `string`
  "fiveServer.host": "0.0.0.0",

  // Files/Folders to ignore from watching. `Array<string | RegExp | Glob>`
  // 
*dotfiles, node_modules, bower_components and jspm_packages are excluded by default*
  "fiveServer.ignore": [],

  // Allow real-time updates by injecting the html body. `boolean`
  // 
*needs to perform html validation*
  "fiveServer.injectBody": false,

  // Navigates your browser automatically to the current working file. `boolean`
  "fiveServer.navigate": true,

  // 
  "fiveServer.openTerminal": true,

  // Absolute path to PHP executable. `string`
  "fiveServer.php.executable": "",

  // Absolute path to php.ini file. `string`
  "fiveServer.php.ini": "",

  // Set the server port. `number`
  // 
*usually between 3000 and 9999*
  "fiveServer.port": 5555

},
{
  // Use `**` or `__` to wrap bold text.
  "markdown.extension.bold.indicator": "**",

  // Whether to exclude files from auto-completion using VS Code's `search.exclude` setting. (`node_modules`, `bower_components` and `*.code-search` are **always excluded**, not affected by this option.)
  "markdown.extension.completion.respectVscodeSearchExclude": true,

  // The root folder for path auto-completion.
  "markdown.extension.completion.root": "",

  // List of extra supported languages (e.g., rmd, qmd), default [].
  "markdown.extension.extraLangIds": [],

  // Use `*` or `_` to wrap italic text.
  "markdown.extension.italic.indicator": "*",

  // User-defined KaTeX macros.
  "markdown.extension.katex.macros": {},

  // List indentation scheme. (Also affects TOC generation.)
  // 
  // Whether to use different indentation sizes on different list contexts or stick to VS Code's tab size.
  //  - adaptive: Adaptive indentation size according to the context, trying to **left align the sublist with its parent's content**. For example:
  // 
  // ```markdown
  // - Parent
  //   - Sublist
  // 
  // 1. Parent
  //    1. Sublist
  // 
  // 10. Parent with longer marker
  //     1. Sublist
  // ```
  //  - inherit: Use the configured tab size of the current document (see the status bar). For example (with `tabSize: 4`):
  // 
  // ```markdown
  // - Parent
  //     - Sublist
  // 
  // 1. Parent
  //     1. Sublist
  // 
  // 10. Parent with longer marker
  //     1. Sublist
  // ```
  "markdown.extension.list.indentationSize": "adaptive",

  // List candidate markers. It will cycle through those markers
  "markdown.extension.list.toggle.candidate-markers": [
    "-",
    "*",
    "+",
    "1.",
    "1)"
  ],

  // Enable basic math support (Powered by KaTeX).
  "markdown.extension.math.enabled": true,

  // Auto fix ordered list markers.
  "markdown.extension.orderedList.autoRenumber": true,

  // Ordered list marker.
  //  - one: Always use `1.` as ordered list marker.
  //  - ordered: Use increasing numbers as ordered list marker.
  "markdown.extension.orderedList.marker": "ordered",

  // Auto show preview to side.
  "markdown.extension.preview.autoShowPreviewToSide": false,

  // Convert image path to absolute path.
  "markdown.extension.print.absoluteImgPath": true,

  // Convert images to base64 when printing to HTML.
  "markdown.extension.print.imgToBase64": false,

  // Include VS Code's basic Markdown styles so that the exported HTML looks similar as inside VS Code.
  "markdown.extension.print.includeVscodeStylesheets": true,

  // Print current document to HTML when file is saved.
  "markdown.extension.print.onFileSave": false,

  // Theme of the exported HTML. Only affects code blocks.
  "markdown.extension.print.theme": "light",

  // Enable/disable URL validation when printing.
  "markdown.extension.print.validateUrls": true,

  // If a file is larger than this size (in byte/B), we won't attempt to render syntax decorations.
  "markdown.extension.syntax.decorationFileSizeLimit": 50000,

  // (**Deprecated**) Use `markdown.extension.theming.decoration.renderCodeSpan` instead. See <https://github.com/yzhang-gh/vscode-markdown/issues/888> for details.
  // 
  "markdown.extension.syntax.decorations": null,

  // (**Experimental**) Report issue at <https://github.com/yzhang-gh/vscode-markdown/issues/185>.
  "markdown.extension.syntax.plainTheme": false,

  // Don't add padding to the delimiter row.
  "markdown.extension.tableFormatter.delimiterRowNoPadding": false,

  // Enable [GitHub Flavored Markdown](https://github.github.com/gfm/) table formatter.
  "markdown.extension.tableFormatter.enabled": true,

  // Normalize table indentation to closest multiple of configured editor tab size.
  "markdown.extension.tableFormatter.normalizeIndentation": false,

  // Apply a border around a [code span](https://spec.commonmark.org/0.29/#code-spans).
  "markdown.extension.theming.decoration.renderCodeSpan": true,

  // (**Experimental**)
  "markdown.extension.theming.decoration.renderHardLineBreak": false,

  // (**Experimental**)
  "markdown.extension.theming.decoration.renderLink": false,

  // (**Experimental**)
  "markdown.extension.theming.decoration.renderParagraph": false,

  // Show a line through the middle of a [strikethrough](https://github.github.com/gfm/#strikethrough-extension-).
  "markdown.extension.theming.decoration.renderStrikethrough": true,

  // Shade the background of trailing space (U+0020) characters on a [line](https://spec.commonmark.org/0.29/#line).
  "markdown.extension.theming.decoration.renderTrailingSpace": false,

  // Range of levels for table of contents. Use `x..y` for level `x` to `y`.
  "markdown.extension.toc.levels": "1..6",

  // Lists of headings to omit by project file.
  // Example:
  // { "README.md": ["# Introduction"] }
  "markdown.extension.toc.omittedFromToc": {},

  // Use ordered list, that is:
  // 1. ...
  // 2. ...
  "markdown.extension.toc.orderedList": false,

  // Just plain text TOC, no links.
  "markdown.extension.toc.plaintext": false,

  // The method to generate heading ID. This affects **links to headings** in **TOC**, **code completion**, and **printing**.
  //  - github: GitHub
  //  - azureDevops: Azure DevOps
  //  - bitbucket-cloud: Bitbucket Cloud
  //  - gitea: Gitea
  //  - gitlab: GitLab
  //  - vscode: Visual Studio Code
  "markdown.extension.toc.slugifyMode": "github",

  // Use `-`, `*`, or `+` in the table of contents (for **unordered** list).
  "markdown.extension.toc.unorderedList.marker": "-",

  // Auto update TOC on save.
  "markdown.extension.toc.updateOnSave": true

},
{
  // A list of CSS based languages where suggestions are enabled.
  "html-css-class-completion.CSSLanguages": [
    "css",
    "sass",
    "scss"
  ],

  // Enables completion when you're writing Emmet abbreviations.
  "html-css-class-completion.enableEmmetSupport": false,

  // A glob pattern that defines files and folders to exclude. The glob pattern will be matched against the file paths of resulting matches relative to their workspace.
  "html-css-class-completion.excludeGlobPattern": "",

  // A list of HTML based languages where suggestions are enabled.
  "html-css-class-completion.HTMLLanguages": [
    "html",
    "vue",
    "razor",
    "blade",
    "handlebars",
    "twig",
    "django-html",
    "php",
    "markdown",
    "erb",
    "ejs",
    "svelte"
  ],

  // A glob pattern that defines files and folders to search for. The glob pattern will be matched against the paths of resulting matches relative to their workspace.
  "html-css-class-completion.includeGlobPattern": "**/*.{css,html}",

  // A list of JavaScript based languages where suggestions are enabled.
  "html-css-class-completion.JavaScriptLanguages": [
    "javascript",
    "javascriptreact",
    "typescriptreact"
  ]

},
{
  // Specify the default destination branch for pull requests
  "openInGitHub.defaultPullRequestBranch": "integration",

  // Configure a custom Github domain. Useful for Github enterprise
  "openInGitHub.gitHubDomain": "github.com",

  // Specify the provider protocol for custom sites or Github enterprise
  "openInGitHub.providerProtocol": "https",

  // Specify the provider type in Custom Site
  "openInGitHub.providerType": "gitlab",

  // If enabled, the copied or opened URL won't include line number(s) unless there's an active selection
  "openInGitHub.requireSelectionForLines": false,

  // If enabled, use commit SHA instead of branch
  "openInGitHub.useCommitSHAInURL": false

},
{
  // Traces the communication between VSCode and the intellisense language server.
  "php-intellisense.trace.server": "off",

  // The path to a PHP 7+ executable.
  "php.executablePath": null,

  // Configure glob patterns for excluding files and folders from initial indexing. Paths are relative to root folder.
  "php.files.exclude": [],

  // The memory limit of the php language server. [Number][K|M|G]. Use '-1' to allow unlimited use of the RAM (default is 4G).
  "php.memoryLimit": "4095M"

}]